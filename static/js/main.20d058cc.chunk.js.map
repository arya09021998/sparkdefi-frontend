{"version":3,"sources":["hooks/useRefresh.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","state/teams/index.tsx","hooks/useApprove.ts","config/constants/nfts.ts","config/constants/endpoints.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","components/UnlockButton.tsx","utils/bscscan.ts","hooks/useAuth.ts","utils/getRpcUrl.ts","utils/wallet.ts","utils/web3React.ts","config/constants/index.ts","config/constants/teams.ts","state/teams/helpers.ts","state/pools/helpers.ts","config/constants/campaigns.ts","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","config/constants/meta.ts","components/layout/Page.tsx","hooks/useTokenBalance.ts","components/layout/Container.tsx","utils/collectibles.ts","utils/bigNumber.ts","config/constants/contracts.ts","utils/addressHelpers.ts","hooks/useLastUpdated.ts","config/constants/ifo.ts","state/block/index.ts","state/collectibles/index.ts","views/Farms/components/Divider.tsx","config/constants/tokens.ts","components/TokenPairImage/index.tsx","hooks/useUnstake.ts","hooks/useStake.ts","state/achievements/helpers.ts","state/achievements/index.ts","utils/formatBalance.ts","utils/farmsPriceHelpers.ts","contexts/ThemeContext.tsx","contexts/ToastsContext/Provider.tsx","hooks/useTabVisibility.ts","contexts/RefreshContext.tsx","hooks/usePersistState.ts","utils/achievements.ts","utils/latinise.ts","state/predictions/index.ts","config/index.ts","components/PageLoader.tsx","utils/getTimePeriods.ts","utils/apr.ts","utils/settings.ts","utils/contractHelpers.ts","state/hooks.ts","config/constants/types.ts","utils/farmHelpers.ts","components/layout/Flex.tsx","components/Balance.tsx","hooks/usePreviousValue.ts","components/PageHeader/PageHeader.tsx","components/ModalInput/ModalInput.tsx","views/Pools/helpers.tsx","hooks/useContract.ts","state/index.ts","utils/multicall.ts","hooks/useWeb3.ts","state/actions.ts","utils/callHelpers.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","utils/web3.ts","hooks/useToast.ts","state/types.ts","config/constants/pools.ts","state/predictions/helpers.ts","state/predictions/queries.ts","config/localization/languages.ts","hooks/useEagerConnect.ts","views/Farms/Redirects.tsx","style/Global.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","components/EasterEgg/EasterEgg.tsx","components/SearchInput/SearchInput.tsx","utils/index.ts","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/ToggleView/ToggleView.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","hooks/useHarvest.ts","views/Pools/components/PoolCard/Modals/Stake.tsx","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","state/block/hooks.ts","components/ApyCalculatorModal/index.tsx","views/Pools/components/PoolCard/AprRow.tsx","components/Tags.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","hooks/cakeVault/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/assets/pool-dark.svg","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/components/assets/pool-light.svg","views/Pools/index.tsx","App.tsx","Providers.tsx","index.tsx","hooks/useTheme.ts","config/constants/farms.ts","utils/compoundApyHelpers.ts"],"names":["useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","isActive","Number","points","profileContract","getProfileContract","profileApi","process","REACT_APP_API_PROFILE","getUsername","address","a","fetch","response","ok","json","username","getProfile","methods","hasRegistered","call","profile","getUserProfile","getTeam","team","getNftByTokenId","nft","Cookies","set","avatar","images","sm","domain","secure","expires","initialState","isInitialized","isLoading","data","profileSlice","createSlice","name","reducers","profileFetchStart","state","profileFetchSucceeded","_state","action","payload","profileFetchFailed","profileClear","addPoints","actions","fetchProfile","dispatch","teamsList","reduce","accum","id","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","teams","useApprove","lpContract","account","useWeb3React","masterChefContract","useMasterchef","onApprove","useCallback","approve","tx","useSousApprove","sousId","earningTokenSymbol","useState","requestedApproval","setRequestedApproval","useToast","toastSuccess","toastError","t","useTranslation","useAppDispatch","sousChefContract","useSousChef","handleApprove","updateUserAllowance","symbol","console","error","message","useSousApproveWithAmount","stakingAmount","log","approveWithAmount","useVaultApprove","setLastUpdated","cakeVaultContract","useCakeVaultContract","cakeContract","useCake","options","ethers","constants","MaxUint256","send","from","on","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","useLastUpdated","lastUpdated","useEffect","allowance","currentAllowance","BigNumber","gt","checkApprovalStatus","useIfoApprove","tokenContract","spenderAddress","IPFS_GATEWAY","nftSources","NftType","PANCAKE","56","97","identifierKey","MIXIE","Nfts","description","lg","md","ipfs","sortOrder","identifier","type","variationId","video","webm","mp4","blur","GRAPH_API_PROFILE","GRAPH_API_PREDICTION","ARCHIVED_NODE","priceHelperLps","pid","lpSymbol","lpAddresses","token","tokens","qsd","quoteToken","wbnb","fetchFarm","farm","lpAddress","getAddress","calls","params","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","div","tokenAmountTotal","BIG_TEN","pow","quoteTokenAmountTotal","tokenAmountMc","times","quoteTokenAmountMc","lpTotalInQuoteToken","masterchefABI","info","totalAllocPoint","allocPoint","_hex","BIG_ZERO","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","Promise","all","map","farmConfig","getFarmFromTokenSymbol","farms","tokenSymbol","preferredQuoteTokens","farmsWithTokenSymbol","filter","filterFarmsByQuoteToken","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","Boolean","quoteTokenInBusd","getFarmQuoteTokenPrice","BIG_ONE","fetchFarmsPrices","bnbBusdFarm","find","farmsWithPrices","baseTokenPrice","quoteTokenPrice","busdPrice","fetchFarmUserAllowances","masterChefAddress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","farmsConfig","userData","loadArchivedFarmsData","userDataLoaded","nonArchivedFarms","isArchivedPid","fetchFarmsPublicDataAsync","createAsyncThunk","pids","includes","farmsWithPriceHelpers","concat","priceHelperLpsConfig","farmsWithoutHelperLps","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","index","farmsSlice","setLoadArchivedFarmsData","extraReducers","builder","addCase","fulfilled","liveFarmData","farmData","forEach","userDataEl","findIndex","UnlockButton","props","useAuth","login","logout","onPresentConnectModal","useWalletModal","onClick","fullWidth","getBscScanAddressUrl","BASE_BSC_SCAN_URL","getBscScanTransactionUrl","transactionHash","getBscScanBlockNumberUrl","block","getBscScanBlockCountdownUrl","activate","deactivate","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","window","localStorage","removeItem","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","getItem","walletconnect","close","nodes","getNodeUrl","randomIndex","random","length","provider","ethereum","chainId","parseInt","request","method","chainName","nativeCurrency","decimals","rpcUrls","blockExplorerUrls","registerToken","tokenAddress","tokenImage","image","tokenAdded","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","alt","background","textColor","users","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","i","push","getPancakeProfileAddress","multicallv2","profileABI","teamData","onChainTeamData","toNumber","transformUserData","stakingTokenBalance","pendingReward","transformPool","pool","totalStaked","stakingLimit","rest","getTokenPricesFromFarm","prices","quoteTokenAddress","toLocaleLowerCase","campaigns","title","badge","campaignMap","Map","campaign","LS_KEY","fetchLocale","locale","getLanguageCodeFromLS","EN","isFetching","currentLanguage","languageMap","translations","LanguageContext","createContext","undefined","LanguageProvider","children","codeFromStorage","languages","setState","enLocale","get","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","setItem","translate","key","translatedText","match","interpolatedText","Object","keys","dataKey","templateKey","RegExp","replace","Provider","value","languageContext","Error","DEFAULT_META","StyledPage","styled","Container","theme","mediaQueries","PageMeta","pathname","useLocation","cakePriceUsd","usePriceCakeBusd","pageMeta","toLocaleString","minimumFractionDigits","maximumFractionDigits","path","getCustomMeta","property","content","Page","FetchStatus","useTokenAllowance","allowedAddress","NOT_FETCHED","SUCCESS","FAILED","balance","fetchStatus","balanceState","setBalanceState","contract","getBep20Contract","res","prev","fetchBalance","useTotalSupply","totalSupply","setTotalSupply","getCakeContract","supply","fetchTotalSupply","useBurnedBalance","setBalance","balanceOf","useGetBnbBalance","web3","useWeb3","eth","getBalance","walletBalance","refresh","useTokenBalance","getIdentifierKeyFromAddress","nftSource","values","nftSourceEntry","getTokenUrl","tokenUri","startsWith","slice","getAddressByType","getTokenUriData","getErc721Contract","tokenURI","uriDataResponse","uriData","BIG_NINE","MAINNET_CHAIN_ID","getCakeAddress","cake","addresses","getMulticallAddress","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","getLotteryV2Address","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","Date","now","setStateLastUpdated","previousLastUpdated","usePreviousValue","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","currency","kalm","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","version","hotcross","hzn","belt","watch","bry","wsote","helmet","ten","ditto","blink","blockSlice","currentBlock","initialBlock","setBlock","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","walletNft","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","pending","association","StyledHr","colors","textSubtle","primary","ModalHr","hr","sfuel","bnb","projectLink","txl","cos","bunny","alice","for","bux","nuls","ramp","bfi","dexe","bel","tpt","xmark","bmxx","iotx","bor","bopen","dodo","swingby","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","front","btcst","bscx","balbt","asr","atm","og","reef","juv","psg","vai","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","hyfi","oin","doge","fine","one","pmon","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","deri","well","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","srkb","ttkb","StyledLogo","img","PairLogoImg","Flex","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","src","useSousUnstake","enableEmergencyWithdraw","handleUnstake","amount","unstake","txHash","sousEmergencyUnstake","sousUnstake","updateUserStakedBalance","updateUserBalance","updateUserPendingReward","onUnstake","useUnstake","useSousStake","isUsingBnb","handleStake","stake","sousStakeBnb","sousStake","onStake","useStake","getUserPointIncreaseEvents","gql","toLowerCase","user","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","getAchievementTitle","getAchievementDescription","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","achievements","getDecimalAmount","getBalanceAmount","dividedBy","getBalanceNumber","getFullDisplayBalance","decimalsToAppear","toFixed","formatNumber","number","minPrecision","maxPrecision","preferredFarm","some","CACHE_KEY","ThemeContext","React","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","stringify","dark","light","ToastsContext","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastWarning","WARNING","useTabVisibility","tabVisibleRef","useRef","onVisibilityChange","current","document","hidden","addEventListener","removeEventListener","RefreshContextProvider","setSlow","setFast","interval","setInterval","clearInterval","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","ifoCampaignAddresses","pointCenterContract","getPointCenterIfoContract","checkClaimStatuses","claimStatuses","pointCenterIfoABI","claimStatus","claimableIfoData","claimableIfoDataItem","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","input","x","status","PredictionStatus","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","HistoryFilter","ALL","currentEpoch","currentRoundStartBlockNumber","intervalBlocks","bufferBlocks","minBetAmount","lastOraclePrice","rounds","history","bets","fetchBet","getBet","bet","transformBetResponse","fetchRoundBet","roundId","getBetHistory","round","betResponses","betResponse","fetchCurrentBets","roundIds","round_in","fetchHistory","claimed","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","initialize","updateMarketData","market","newRoundData","makeRoundData","incomingCurrentRound","maxBy","epoch","newestRound","futureRound","transformRoundResponse","makeFutureRoundResponse","startBlock","paused","PAUSED","LIVE","setCurrentEpoch","markBetAsCollected","accountBets","markPositionAsEntered","setLastOraclePrice","betData","currentBet","rejected","config","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","LOTTERY_TICKET_PRICE","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","DEFAULT_GAS_PRICE","TESTNET_CHAIN_ID","BASE_BSC_SCAN_URLS","Wrapper","PageLoader","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","Math","abs","timeLeft","years","months","days","hours","minutes","floor","getPoolApr","stakingTokenPrice","rewardTokenPrice","tokenPerBlock","totalRewardPricePerYear","totalStakingTokenInPool","apr","isNaN","isFinite","getFarmApr","poolLiquidityUsd","GAS_SETTINGS","default","reallyfast","getDefaultSettings","gasPrice","getStorageKey","getSettings","settingsFromLs","getContract","abi","amountInGwei","_web3","web3NoAccount","Contract","bep20Abi","erc721Abi","getLpContract","lpTokenAbi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","poolsConfig","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","pointCenterIfo","cakeAbi","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryContract","lotteryAbi","getLotteryTicketContract","lotteryTicketAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","usePollFarmsData","includeArchive","farmToFetch","usePollCoreFarmData","usePollBlockNumber","getBlockNumber","blockNumber","useFarms","useSelector","useFarmFromPid","f","useBusdPriceFromPid","useLpTokenPrice","farmTokenPriceInUsd","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","useFetchPublicPoolsData","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fetchPoolsUserDataAsync","pools","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","useMemo","useFetchProfile","useProfile","hasProfile","useTeam","useTeams","useFetchAchievements","useAchievements","usePriceBnbBusd","cakeBnbFarm","useBlock","useInitialBlock","useIsHistoryPaneOpen","predictions","useIsChartPaneOpen","useGetRounds","useGetSortedRounds","roundData","orderBy","useGetCurrentEpoch","useGetIntervalBlocks","useGetTotalIntervalBlocks","useGetPredictionsStatus","useGetHistoryFilter","useGetCurrentRoundBlockNumber","useGetMinBetAmount","useGetIsFetchingHistory","useGetHistoryByAccount","useGetBetByRoundId","useBetCanClaim","getCanClaim","useGetLastOraclePrice","useGetCollectibles","collectibles","identifiers","tokenIds","nftsInWallet","PoolIds","FlexLayout","Balance","color","isDisabled","unit","prefix","previousValue","start","end","duration","separator","ref","Outer","Box","gradients","bubblegum","Inner","PageHeader","StyledTokenInput","isWarning","shadows","warning","inset","text","StyledInput","Input","xs","ModalInput","Text","max","onChange","onSelectMax","addLiquidityUrl","inputTitle","isBalanceZero","style","position","margin","alignItems","justifyContent","pattern","inputMode","step","min","placeholder","size","mr","mb","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","earningTokenPrice","isHighValueToken","roundingDecimals","compoundFrequency","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand365D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","getRoi","amountEarned","amountInvested","getCakeVaultEarnings","hasAutoEarnings","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","useIfoV1Contract","useIfoV2Contract","useERC20","useERC721","useBunnyFactory","useLottery","useLotteryTicket","usePointCenterIfoContract","useBunnySpecialContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","usePredictionsContract","useChainlinkOracleContract","store","configureStore","devTools","reducer","achievementsReducer","blockReducer","farmsReducer","poolsReducer","predictionsReducer","profileReducer","teamsReducer","collectiblesReducer","useDispatch","multi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","decodeFunctionResult","tryAggregate","requireSuccess","result","library","refEth","Web3","setweb3","enterStaking","gas","deposit","leaveStaking","withdraw","emergencyWithdraw","harvest","soushHarvest","soushHarvestBnb","Token","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingCake","fetchPublicVaultData","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","earningTokenAddress","earningToken","parseFloat","setPoolsPublicData","stakingLimitData","stakingTokenBalances","setPoolsUserData","updatePoolsUserData","field","publicVaultInfo","vaultFees","PoolsSlice","livePoolsData","livePoolData","userPoolData","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","archivedHttpProvider","web3WithArchivedNodeProvider","toastContext","BetPosition","CORE","isComingSoon","Result","numberOrNull","valueNum","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalBets","totalAmount","bearBets","bullBets","bearAmount","bullAmount","hash","BULL","BEAR","claimedHash","totalBNB","roundResponse","positionResponse","transformTotalWonResponse","marketResponse","houseRounds","totalBNBTreasury","getRoundResult","CANCELED","roundResultPosition","WIN","LOSE","getUnclaimedWinningBets","getStaticPredictionsData","isPaused","getMarketData","getTotalWon","HOUSE","where","first","skip","betId","code","languageList","_binanceChainListener","resolve","defineProperty","this","bsc","useEagerConnect","connectorId","connectorLocalStorageKey","isConnectorBinanceChain","isBinanceChainDefined","Reflect","then","RedirectToPools","location","to","GlobalStyle","createGlobalStyle","label","icon","href","Menu","useTheme","currentLang","langs","setLang","links","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","ToastListener","onRemove","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","memo","InputWrapper","SearchInput","onChangeCallback","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","e","target","onBlur","getBscScanLink","ChainId","MAINNET","keyframes","ViewMode","StyledCard","Card","card","StyledCardInner","isPromotedPool","radii","CakeVaultTokenPairImage","primaryTokenSrc","primarySrc","secondarySrc","StyledCardHeader","isStaking","flexDirection","textAlign","width","height","StyledLink","Link","NotEnoughTokensModal","onDismiss","headerBackground","cardHeader","bold","mt","as","external","variant","ml","useSousHarvest","handleHarvest","onReward","ModalBody","StakeActionModal","isBnbPool","isRemovingStake","isApprove","stakingTokenContract","pendingTx","setPendingTx","isApproved","setIsApproved","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","setPercent","userLimit","totalStakingTokens","remainingStakeTokens","totalAllowance","getCalculatedStakingLimit","fullDecimalStakeAmount","plus","handleConfirmClick","fontSize","maxstake","tokensymbol","sliderPercent","percentageOfStakingMax","amountToStake","handleChangePercent","convertedInput","percentage","handleStakeInputChange","currentTarget","marginTop","marginBottom","endIcon","spin","disabled","marginRight","marginLeft","StyledFlex","StakeModal","addTokenUrl","activeSelect","setActiveSelect","earnedTokenBalance","totalStakedTokens","totalEarningTokens","totalEarnedTokens","temp","rewardRate","useModal","Stake","onPresentStakeAction","handleHarvestConfirm","border","borderTop","onMouseEnter","onMouseLeave","eq","StakeAction","isStaked","onPresentStake","useTooltip","placement","targetRef","tooltip","tooltipVisible","CardActions","totalEarned","display","textTransform","StakeActions","PoolCard","accountHasStakedBalance","rewardPerBlock","backgroundColor","Grid","GridItem","GridHeaderItem","ApyCalculatorModal","linkLabel","linkHref","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","num","maxWidth","freq","fee","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","onPresentApyModal","scale","ManualPoolTag","outline","startIcon","CompoundingPoolTag","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","imageSrc","isMetaMaskInScope","isMetaMask","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","small","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","Footer","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","stakingTokenSymbol","feeInCake","StyledButton","Button","VaultStakeModal","stakingMax","percent","cakePriceBusd","usdValueStaked","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","lte","withdrawAll","handleDeposit","minWidth","onUserInput","currencyValue","onValueChanged","valueLabel","HasSharesActions","stakedDollarValue","onPresentTokenRequired","onPresentUnstake","VaultStakeActions","accountHasSharesStaked","InlineText","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","useMatchBreakpoints","isXl","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","CardFooter","_style","_g","_g2","_g3","_g4","PoolTabButtons","activeIndex","stakedOnly","setStakedOnly","hasStakeInFinishedPools","viewMode","setViewMode","useRouteMatch","url","isExact","isXs","isSm","liveOrFinishedSwitch","BaseCell","expandAnimation","ChevronDownIcon","xl","collapseAnimation","css","dropdown","cardBorder","_extends","assign","arguments","source","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgPoolDark","_ref","svgRef","titleId","xmlns","xmlnsXlink","y","viewBox","enableBackground","xmlSpace","className","d","cx","cy","r","ForwardRef","SvgPoolLight","CardLayout","PoolControls","SearchSortContainer","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","TABLE","searchQuery","setSearchQuery","sortOption","isMobile","useMedia","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","showFinishedPools","showUpcomingPools","poolsToShow","chosenPools","lowercaseQuery","poolsToSort","sortPools","cardLayout","minHeight","padding","borderBottom","SvgIcon","component","PoolsDarkLogo","PoolsLightLogo","event","Farms","lazy","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","App","Global","exact","iterations","Providers","ReactDOM","render","StrictMode","getElementById","StyledThemeContext","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount"],"mappings":"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","file":"static/js/main.20d058cc.chunk.js","sourcesContent":["import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { approve, approveWithAmount } from 'utils/callHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { getDecimalAmount } from 'utils/formatBalance'\nimport { useMasterchef, useCake, useSousChef, useLottery, useCakeVaultContract } from './useContract'\nimport useToast from './useToast'\nimport useLastUpdated from './useLastUpdated'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [totalApproved, setTotalApproved] = useState(0)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      if (tx) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), e?.message)\n      setRequestedApproval(false)\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useSousApproveWithAmount = (lpContract: Contract, sousId, earningTokenSymbol, stakingAmount) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      console.log(lpContract)\n      console.log(sousChefContract)\n      console.log(account)\n      console.log(stakingAmount)\n      const tx = await approveWithAmount(lpContract, sousChefContract, account, stakingAmount)\n      dispatch(updateUserAllowance(sousId, account))\n      if (tx) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), e?.message)\n      setRequestedApproval(false)\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, stakingAmount, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(cakeVaultContract.options.address, ethers.constants.MaxUint256)\n      .send({ from: account })\n      .on('sending', () => {\n        setRequestedApproval(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n        setLastUpdated()\n        setRequestedApproval(false)\n      })\n      .on('error', (error) => {\n        console.error(error)\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      })\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.methods.allowance(account, cakeVaultContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWeb3React()\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\n    return tx\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://gateway.pinata.cloud'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const ARCHIVED_NODE = process.env.REACT_APP_ARCHIVED_NODE\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 252)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import React from 'react'\nimport { Button, useWalletModal } from '@sparkpointio/sparkswap-uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst UnlockButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props} fullWidth>\n      {t('Connect Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { BASE_BSC_SCAN_URL } from 'config'\n\nexport const getBscScanAddressUrl = (address: string) => {\n  return `${BASE_BSC_SCAN_URL}/address/${address}`\n}\n\nexport const getBscScanTransactionUrl = (transactionHash: string) => {\n  return `${BASE_BSC_SCAN_URL}/tx/${transactionHash}`\n}\n\nexport const getBscScanBlockNumberUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/${block}`\n}\n\nexport const getBscScanBlockCountdownUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/countdown/${block}`\n}\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\n// import { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { ConnectorId } from '@sparkpointio/sparkswap-uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorId) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem('1')\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = (window as WindowChain).ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    console.log(process.env.REACT_APP_CHAIN_ID)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Testnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string,\n) => {\n  const tokenAdded = await (window as WindowChain).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport Web3 from 'web3'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): Web3 => {\n  return provider\n}\n","export { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const {\n      0: teamName,\n      2: numberUsers,\n      3: numberPoints,\n      4: isJoinable,\n    } = await profileContract.methods.getTeamProfile(teamId).call()\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers,\n      points: numberPoints,\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.methods.numberTeams().call()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'SparkDeFi',\n  description:\n    'Refuel your rocket with SFUEL and travel to the moon with SparkSwap, the prodigious decentralized exchange on Binance Smart Chain.',\n  image: 'https://sparkswap.finance//images/192x192_App_Icon.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('SparkDeFi')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('SparkDeFi')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('SparkDeFi')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('SparkDeFi')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('SparkDeFi')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('SparkDeFi')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('SparkDeFi')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('SparkDeFi')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('SparkDeFi')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('SparkDeFi')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('SparkDeFi')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n  \n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  // const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.methods.balanceOf(account).call()\n        setBalanceState({ balance: new BigNumber(res), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTokenAllowance = (tokenAddress: string, allowedAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.methods.allowance(account, allowedAddress).call()\n        setBalanceState({ balance: new BigNumber(res), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, allowedAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const walletBalance = await web3.eth.getBalance(account)\n      setBalance(new BigNumber(walletBalance))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, lastUpdated, setBalance])\n\n  return { balance, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.methods.tokenURI(tokenId).call()\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import BigNumber from 'bignumber.js'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n","export default {\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lottery: {\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\n  },\n  lotteryNFT: {\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  lotteryV2: {\n    97: '0x4D8B718b4e617ea49bCe6B508c23353Cc7bADd28',\n    56: '',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n}\n","import { MAINNET_CHAIN_ID } from 'config'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[MAINNET_CHAIN_ID]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryAddress = () => {\n  return getAddress(addresses.lottery)\n}\nexport const getLotteryTicketAddress = () => {\n  return getAddress(addresses.lotteryNFT)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenId = await contract.methods.tokenOfOwnerByIndex(account, index).call()\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [Number(tokenId), walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.methods.balanceOf(account).call()\n      const balanceOf = Number(balanceOfResponse)\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n\nexport const StyledHr = styled.div`\n  border-style: solid none none none;\n  border-width: 2px;\n  border-color: ${({theme}) => theme.colors.primary};\n  width: 95%;\n`\n\nexport const ModalHr = styled.hr`\n  border-style: solid none none none;\n  border-width: 2px;\n  border-color: ${({theme}) => theme.colors.primary};\n  margin-top: 20px;\n  margin-bottom: 20px;\n  width: 100%;\n`","const tokens = {\n  sfuel: {\n    symbol: 'SFUEL',\n    address: {\n      56: '0x37ac4d6140e54304d77437a5c11924f61a2d976f',\n      97: '0x37ac4d6140e54304d77437a5c11924f61a2d976f',\n    }\n  },\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'CAKE',\n    address: {\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'http://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  srkb: {\n    symbol: 'SRKb',\n    address: {\n      56: '0xc3440c10c4f36f354eb591b19fafb4906d449b75',\n      97: '0xc3440c10c4f36f354eb591b19fafb4906d449b75',\n    },\n    decimals: 18,\n    projectLink: 'https://sparkpoint.io/',\n  },\n  ttkb: {\n    symbol: 'TTKb',\n    address: {\n      56: '0x9ee47c9630a41525c139ef9ca42ba3b238ecfecf',\n      97: '0xac9b89c1049b358277ca1d76f6c18f10f3d8128e',\n    },\n    decimals: 18,\n    projectLink: 'https://sparkpoint.io/',\n  },\n}\n\nexport default tokens\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n} from '@pancakeswap/uikit'\nimport { Flex } from '@sparkpointio/sparkswap-uikit';\nimport styled from 'styled-components';\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst StyledLogo = styled.img`\n  width: 50px;\n`\nconst PairLogoImg = styled(Flex)`\n  margin-bottom: 30px;\n`\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = getAddress(token.symbol === 'BNB' ? tokens.wbnb.address : token.address)\n  return `/images/tokens/${address}.svg`\n}\n\nconst TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <PairLogoImg>\n      <StyledLogo src={getImageUrlFromToken(secondaryToken)} alt=\"logo-img\" />\n      <StyledLogo src={getImageUrlFromToken(primaryToken)} alt=\"logo-img\" />\n    </PairLogoImg>\n  )\n}\n\nexport default TokenPairImage\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstake, sousUnstake, sousEmergencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSousUnstake = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (enableEmergencyWithdraw) {\n        const txHash = await sousEmergencyUnstake(sousChefContract, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, decimalsToAppear?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(decimalsToAppear)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@sparkpointio/sparkswap-uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: true, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : true\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import { useEffect, useRef } from 'react'\n\nconst useTabVisibility = () => {\n  const tabVisibleRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      tabVisibleRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return { tabVisibleRef }\n}\n\nexport default useTabVisibility\n","import React, { useState, useEffect } from 'react'\nimport useTabVisibility from 'hooks/useTabVisibility'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const { tabVisibleRef } = useTabVisibility()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (tabVisibleRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [tabVisibleRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (tabVisibleRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [tabVisibleRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import { ethers } from 'ethers'\nimport { Campaign } from 'config/constants/types'\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\n  const pointCenterContract = getPointCenterIfoContract()\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatuses = (await pointCenterContract.methods\n    .checkClaimStatuses(account, ifoCampaignAddresses)\n    .call()) as boolean[]\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatus, index) => {\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, HistoryFilter, Market, PredictionsState, PredictionStatus, Round } from 'state/types'\nimport {\n  makeFutureRoundResponse,\n  transformRoundResponse,\n  getBetHistory,\n  transformBetResponse,\n  getBet,\n  makeRoundData,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 2,\n  minBetAmount: '1000000000000000',\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  bets: {},\n}\n\n// Thunks\nexport const fetchBet = createAsyncThunk<{ account: string; bet: Bet }, { account: string; id: string }>(\n  'predictions/fetchBet',\n  async ({ account, id }) => {\n    const response = await getBet(id)\n    const bet = transformBetResponse(response)\n    return { account, bet }\n  },\n)\n\nexport const fetchRoundBet = createAsyncThunk<\n  { account: string; roundId: string; bet: Bet },\n  { account: string; roundId: string }\n>('predictions/fetchRoundBet', async ({ account, roundId }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round: roundId,\n  })\n\n  // This should always return 0 or 1 bet because a user can only place\n  // one bet per round\n  if (betResponses && betResponses.length === 1) {\n    const [betResponse] = betResponses\n    return { account, roundId, bet: transformBetResponse(betResponse) }\n  }\n\n  return { account, roundId, bet: null }\n})\n\n/**\n * Used to poll the user bets of the current round cards\n */\nexport const fetchCurrentBets = createAsyncThunk<\n  { account: string; bets: Bet[] },\n  { account: string; roundIds: string[] }\n>('predictions/fetchCurrentBets', async ({ account, roundIds }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round_in: roundIds,\n  })\n\n  return { account, bets: betResponses.map(transformBetResponse) }\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    initialize: (state, action: PayloadAction<PredictionsState>) => {\n      return {\n        ...state,\n        ...action.payload,\n      }\n    },\n    updateMarketData: (state, action: PayloadAction<{ rounds: Round[]; market: Market }>) => {\n      const { rounds, market } = action.payload\n      const newRoundData = makeRoundData(rounds)\n      const incomingCurrentRound = maxBy(rounds, 'epoch')\n\n      if (state.currentEpoch !== incomingCurrentRound.epoch) {\n        // Add new round\n        const newestRound = maxBy(rounds, 'epoch') as Round\n        const futureRound = transformRoundResponse(\n          makeFutureRoundResponse(newestRound.epoch + 2, newestRound.startBlock + state.intervalBlocks),\n        )\n\n        newRoundData[futureRound.id] = futureRound\n      }\n\n      state.currentEpoch = incomingCurrentRound.epoch\n      state.currentRoundStartBlockNumber = incomingCurrentRound.startBlock\n      state.status = market.paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE\n      state.rounds = { ...state.rounds, ...newRoundData }\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    markBetAsCollected: (state, action: PayloadAction<{ account: string; roundId: string }>) => {\n      const { account, roundId } = action.payload\n      const accountBets = state.bets[account]\n\n      if (accountBets && accountBets[roundId]) {\n        accountBets[roundId].claimed = true\n      }\n    },\n    markPositionAsEntered: (state, action: PayloadAction<{ account: string; roundId: string; bet: Bet }>) => {\n      const { account, roundId, bet } = action.payload\n\n      state.bets = {\n        ...state.bets,\n        [account]: {\n          ...state.bets[account],\n          [roundId]: bet,\n        },\n      }\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    // Get unclaimed bets\n    builder.addCase(fetchCurrentBets.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n\n    // Get round bet\n    builder.addCase(fetchRoundBet.fulfilled, (state, action) => {\n      const { account, roundId, bet } = action.payload\n\n      if (bet) {\n        state.bets = {\n          ...state.bets,\n          [account]: {\n            ...state.bets[account],\n            [roundId]: bet,\n          },\n        }\n      }\n    })\n\n    // Update Bet\n    builder.addCase(fetchBet.fulfilled, (state, action) => {\n      const { account, bet } = action.payload\n      state.history[account] = [...state.history[account].filter((currentBet) => currentBet.id !== bet.id), bet]\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n      state.history[account] = bets\n\n      // Save any fetched bets in the \"bets\" namespace\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n  },\n})\n\n// Actions\nexport const {\n  initialize,\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  updateMarketData,\n  markBetAsCollected,\n  setPredictionStatus,\n  markPositionAsEntered,\n  setLastOraclePrice,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 10 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeStats.tsx = 20 (40 - Amount sent to burn pool)\n\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\n// export const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_URL = 'https://sparkswap.finance'\n// export const BASE_EXCHANGE_URL = 'https://exchange.pancakeswap.finance'\nexport const BASE_EXCHANGE_URL = 'https://sparkswap.finance'\n// export const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/swap/page/pool`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const BASE_BSC_SCAN_URL = 'https://bscscan.com'\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const DEFAULT_GAS_PRICE = 5\nexport const TESTNET_CHAIN_ID = '97'\nexport const MAINNET_CHAIN_ID = '56'\n\nexport const BASE_BSC_SCAN_URLS = {\n  [MAINNET_CHAIN_ID]: 'https://bscscan.com',\n  [TESTNET_CHAIN_ID]: 'https://testnet.bscscan.com',\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport {Spinner}  from '@sparkpointio/sparkswap-uikit';\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const apr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\nexport default null\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_PRICE } from 'config'\nimport { getDecimalAmount } from './formatBalance'\n\nexport interface UserSettings {\n  gasPrice: number\n}\n\nexport const VERSION = 1.01\n\nexport const GAS_SETTINGS = {\n  default: DEFAULT_GAS_PRICE,\n  fast: 10,\n  reallyfast: 15,\n}\n\nexport const getGasPriceInWei = (amountInGwei: number) => {\n  return getDecimalAmount(new BigNumber(amountInGwei), 9)\n}\n\nexport const getDefaultSettings = (): UserSettings => ({\n  gasPrice: GAS_SETTINGS.default,\n})\n\nexport const getStorageKey = (account: string) => {\n  return `pancakeswap_settings_${account}_${VERSION}`\n}\n\nexport const getSettings = (account: string): UserSettings => {\n  try {\n    const settingsFromLs = localStorage.getItem(getStorageKey(account))\n    return settingsFromLs ? JSON.parse(settingsFromLs) : getDefaultSettings()\n  } catch (error) {\n    return getDefaultSettings()\n  }\n}\n\nexport const setSettings = (account: string, newSettings: UserSettings) => {\n  localStorage.setItem(getStorageKey(account), JSON.stringify(newSettings))\n}\n\nexport const setSetting = (account: string, newSetting: Partial<UserSettings>) => {\n  const currentSettings = getSettings(account)\n  setSettings(account, { ...currentSettings, ...newSetting })\n}\n","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport web3NoAccount from 'utils/web3'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { DEFAULT_GAS_PRICE, TESTNET_CHAIN_ID } from 'config'\nimport { getSettings, getGasPriceInWei } from './settings'\n\nexport const getDefaultGasPrice = () => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  if (chainId === TESTNET_CHAIN_ID) {\n    return 10\n  }\n  return DEFAULT_GAS_PRICE\n}\n\nconst getContract = (abi: any, address: string, web3?: Web3, account?: string) => {\n  const _web3 = web3 ?? web3NoAccount\n  const gasPrice = account ? getSettings(account).gasPrice : getDefaultGasPrice()\n\n  return new _web3.eth.Contract(abi as unknown as AbiItem, address, {\n    gasPrice: getGasPriceInWei(gasPrice).toString(),\n  })\n}\n\nexport const getBep20Contract = (address: string, web3?: Web3) => {\n  return getContract(bep20Abi, address, web3)\n}\nexport const getErc721Contract = (address: string, web3?: Web3) => {\n  return getContract(erc721Abi, address, web3)\n}\nexport const getLpContract = (address: string, web3?: Web3) => {\n  return getContract(lpTokenAbi, address, web3)\n}\nexport const getIfoV1Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV1Abi, address, web3)\n}\nexport const getIfoV2Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV2Abi, address, web3)\n}\nexport const getSouschefContract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), web3)\n}\nexport const getSouschefV2Contract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), web3)\n}\nexport const getPointCenterIfoContract = (web3?: Web3) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\n}\nexport const getCakeContract = (web3?: Web3) => {\n  return getContract(cakeAbi, getCakeAddress(), web3)\n}\nexport const getProfileContract = (web3?: Web3) => {\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\n}\nexport const getPancakeRabbitContract = (web3?: Web3) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\n}\nexport const getBunnyFactoryContract = (web3?: Web3) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\n}\nexport const getBunnySpecialContract = (web3?: Web3) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\n}\nexport const getLotteryContract = (web3?: Web3) => {\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\n}\nexport const getLotteryTicketContract = (web3?: Web3) => {\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\n}\nexport const getLotteryV2Contract = (web3?: Web3) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), web3)\n}\nexport const getMasterchefContract = (web3?: Web3) => {\n  return getContract(masterChef, getMasterChefAddress(), web3)\n}\nexport const getClaimRefundContract = (web3?: Web3) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\n}\nexport const getTradingCompetitionContract = (web3?: Web3) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), web3)\n}\nexport const getEasterNftContract = (web3?: Web3) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), web3)\n}\nexport const getCakeVaultContract = (web3?: Web3) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), web3)\n}\nexport const getPredictionsContract = (web3?: Web3) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), web3)\n}\nexport const getChainlinkOracleContract = (web3?: Web3) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), web3)\n}\nexport const getMulticallContract = (web3?: Web3) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), web3)\n}\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { orderBy } from 'lodash'\nimport { Team } from 'config/constants/types'\nimport Nfts from 'config/constants/nfts'\nimport { farmsConfig } from 'config/constants'\nimport web3NoAccount from 'utils/web3'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from 'hooks/useRefresh'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  setBlock,\n} from './actions'\nimport { State, Farm, Pool, ProfileState, TeamsState, AchievementState, FarmsState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchWalletNfts } from './collectibles'\nimport { getCanClaim } from './predictions/helpers'\nimport { transformPool } from './pools/helpers'\nimport { fetchPoolsStakingLimitsAsync } from './pools'\nimport { fetchFarmUserDataAsync, nonArchivedFarms } from './farms'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await web3NoAccount.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\n// Farms\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return a farm for a given token symbol. The farm is filtered based on attempting to return a farm with a quote token from an array of preferred quote tokens\nexport const useFarmFromTokenSymbol = (tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farms = useSelector((state: State) => state.farms.data.filter((farm) => farm.token.symbol === tokenSymbol))\n  const filteredFarm = filterFarmsByQuoteToken(farms, preferredQuoteTokens)\n  return filteredFarm\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useBusdPriceFromToken = (tokenSymbol: string): BigNumber => {\n  const tokenFarm = useFarmFromTokenSymbol(tokenSymbol)\n  const tokenPrice = useBusdPriceFromPid(tokenFarm?.pid)\n  return tokenPrice\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// Pools\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await web3NoAccount.eth.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const usePoolFromPid = (sousId: number): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return transformPool(pool)\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(252)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(251)\n  return new BigNumber(cakeBnbFarm.token.busdPrice)\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n\n// Predictions\nexport const useIsHistoryPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\n}\n\nexport const useIsChartPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\n}\n\nexport const useGetRounds = () => {\n  return useSelector((state: State) => state.predictions.rounds)\n}\n\nexport const useGetSortedRounds = () => {\n  const roundData = useGetRounds()\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\n}\n\nexport const useGetCurrentEpoch = () => {\n  return useSelector((state: State) => state.predictions.currentEpoch)\n}\n\nexport const useGetIntervalBlocks = () => {\n  return useSelector((state: State) => state.predictions.intervalBlocks)\n}\n\nexport const useGetBufferBlocks = () => {\n  return useSelector((state: State) => state.predictions.bufferBlocks)\n}\n\nexport const useGetTotalIntervalBlocks = () => {\n  const intervalBlocks = useGetIntervalBlocks()\n  const bufferBlocks = useGetBufferBlocks()\n  return intervalBlocks + bufferBlocks\n}\n\nexport const useGetRound = (id: string) => {\n  const rounds = useGetRounds()\n  return rounds[id]\n}\n\nexport const useGetCurrentRound = () => {\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetSortedRounds()\n  return rounds.find((round) => round.epoch === currentEpoch)\n}\n\nexport const useGetPredictionsStatus = () => {\n  return useSelector((state: State) => state.predictions.status)\n}\n\nexport const useGetHistoryFilter = () => {\n  return useSelector((state: State) => state.predictions.historyFilter)\n}\n\nexport const useGetCurrentRoundBlockNumber = () => {\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\n}\n\nexport const useGetMinBetAmount = () => {\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\n  return useMemo(() => new BigNumber(minBetAmount), [minBetAmount])\n}\n\nexport const useGetIsFetchingHistory = () => {\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\n}\n\nexport const useGetHistory = () => {\n  return useSelector((state: State) => state.predictions.history)\n}\n\nexport const useGetHistoryByAccount = (account: string) => {\n  const bets = useGetHistory()\n  return bets ? bets[account] : []\n}\n\nexport const useGetBetByRoundId = (account: string, roundId: string) => {\n  const bets = useSelector((state: State) => state.predictions.bets)\n\n  if (!bets[account]) {\n    return null\n  }\n\n  if (!bets[account][roundId]) {\n    return null\n  }\n\n  return bets[account][roundId]\n}\n\nexport const useBetCanClaim = (account: string, roundId: string) => {\n  const bet = useGetBetByRoundId(account, roundId)\n\n  if (!bet) {\n    return false\n  }\n\n  return getCanClaim(bet)\n}\n\nexport const useGetLastOraclePrice = (): BigNumber => {\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\n  return new BigNumber(lastOraclePrice)\n}\n\n// Collectibles\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n}\n","import { TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  isComingSoon?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    min-height: 500px;\n    height: auto;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      {prefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  })\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  // background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link } from '@sparkpointio/sparkswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BigNumber } from 'bignumber.js'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  decimals?: number\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: transparent;\n  border: 2px solid ${({theme}) => theme.colors.primary};\n  // box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  flex:1;\n  margin: 0 8px;\n  padding: 0 8px;\n  background: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n\n  &:focus:not(:disabled) {\n    box-shadow: none; \n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n  decimals = 18,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = (balance: string) => {\n    if (isBalanceZero) {\n      return '0'\n    }\n    const balanceBigNumber = new BigNumber(balance)\n    if (balanceBigNumber.gt(0) && balanceBigNumber.lt(0.0001)) {\n      return balanceBigNumber.toLocaleString()\n    }\n    return balanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }\n\n  return (\n    <div style={{ position: 'relative', margin: '15px 0px' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        {/* <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n        </Flex> */}\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput\n            pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\n            inputMode=\"decimal\"\n            step=\"any\"\n            min=\"0\"\n            onChange={onChange}\n            placeholder=\"0\"\n            value={value}\n          />\n          <Button size=\"sm\" onClick={onSelectMax} mr=\"8px\" mb=\"4px\" >\n            {t('Max')}\n          </Button>\n          {/* <Text fontSize=\"16px\">{symbol}</Text> */}\n        </Flex>\n      </StyledTokenInput>\n      <Flex> \n          {/* <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Available')}: {getFullDisplayBalance}\n          </Text>  */}\n          \n\n        </Flex>\n      {/* {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          {t('No tokens to stake')}:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {t('Get %symbol%', { symbol })}\n          </Link>\n        </StyledErrorMessage>\n      )} */}\n    </div>\n  )\n}\n\nexport default ModalInput\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { useMemo } from 'react'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getLotteryContract,\n  getLotteryTicketContract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n} from 'utils/contractHelpers'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV1Contract(address, web3), [address, web3])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV2Contract(address, web3), [address, web3])\n}\n\nexport const useERC20 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getErc721Contract(address, web3), [address, web3])\n}\n\nexport const useCake = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeContract(web3), [web3])\n}\n\nexport const useBunnyFactory = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\n}\n\nexport const usePancakeRabbits = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\n}\n\nexport const useProfile = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getProfileContract(web3), [web3])\n}\n\nexport const useLottery = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryContract(web3), [web3])\n}\n\nexport const useLotteryTicket = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\n}\n\nexport const useLotteryV2Contract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryV2Contract(web3), [web3])\n}\n\nexport const useMasterchef = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getMasterchefContract(web3), [web3])\n}\n\nexport const useSousChef = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\n}\n\nexport const useSousChefV2 = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefV2Contract(id, web3), [id, web3])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\n}\n\nexport const useBunnySpecialContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\n}\n\nexport const useClaimRefundContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getClaimRefundContract(web3), [web3])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getTradingCompetitionContract(web3), [web3])\n}\n\nexport const useEasterNftContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getEasterNftContract(web3), [web3])\n}\n\nexport const useCakeVaultContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeVaultContract(web3), [web3])\n}\n\nexport const usePredictionsContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPredictionsContract(web3), [web3])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getChainlinkOracleContract(web3), [web3])\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n  },\n})\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport default store\n","import Web3 from 'web3'\nimport { Interface } from '@ethersproject/abi'\nimport web3NoAccount from 'utils/web3'\nimport { getMulticallContract } from 'utils/contractHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  web3?: Web3\n  blockNumber?: number\n  requireSuccess?: boolean\n}\n\nconst multicall = async (abi: any[], calls: Call[], options: MulticallOptions = {}) => {\n    const multi = getMulticallContract(options.web3 || web3NoAccount)\n    const itf = new Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.methods.aggregate(calldata).call(undefined, options.blockNumber)\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async (abi: any[], calls: Call[], options: MulticallOptions = {}): Promise<any> => {\n  const multi = getMulticallContract(options.web3 || web3NoAccount)\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.methods\n    .tryAggregate(options.requireSuccess === undefined ? true : options.requireSuccess, calldata)\n    .call(undefined, options.blockNumber)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport web3NoAccount from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : web3NoAccount)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : web3NoAccount)\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\nexport { setBlock } from './block'\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { ethers } from 'ethers'\nimport { Pair, TokenAmount, Token } from '@pancakeswap-libs/sdk'\nimport { getLpContract, getMasterchefContract } from 'utils/contractHelpers'\nimport farms from 'config/constants/farms'\nimport { getAddress, getCakeAddress } from 'utils/addressHelpers'\nimport tokens from 'config/constants/tokens'\nimport { web3WithArchivedNodeProvider } from './web3'\nimport { getBalanceAmount } from './formatBalance'\nimport { BIG_TEN, BIG_ZERO } from './bigNumber'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const approveWithAmount = async (lpContract, masterChefContract, account, amount) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, amount)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .enterStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({\n      from: account,\n      gas: DEFAULT_GAS_LIMIT,\n      value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(),\n    })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals, account) => {\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmergencyUnstake = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking('0')\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT, value: BIG_ZERO })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\nconst cakeBnbPid = 251\nconst cakeBnbFarm = farms.find((farm) => farm.pid === cakeBnbPid)\n\nconst CAKE_TOKEN = new Token(chainId, getCakeAddress(), 18)\nconst WBNB_TOKEN = new Token(chainId, tokens.wbnb.address[chainId], 18)\nconst CAKE_BNB_TOKEN = new Token(chainId, getAddress(cakeBnbFarm.lpAddresses), 18)\n\n/**\n * Returns the total CAKE staked in the CAKE-BNB LP\n */\nexport const getUserStakeInCakeBnbLp = async (account: string, block?: number) => {\n  try {\n    const masterContract = getMasterchefContract(web3WithArchivedNodeProvider)\n    const cakeBnbContract = getLpContract(getAddress(cakeBnbFarm.lpAddresses), web3WithArchivedNodeProvider)\n    const totalSupplyLP = await cakeBnbContract.methods.totalSupply().call(undefined, block)\n    const reservesLP = await cakeBnbContract.methods.getReserves().call(undefined, block)\n    const cakeBnbBalance = await masterContract.methods.userInfo(cakeBnbPid, account).call(undefined, block)\n\n    const pair: Pair = new Pair(\n      new TokenAmount(CAKE_TOKEN, reservesLP._reserve0.toString()),\n      new TokenAmount(WBNB_TOKEN, reservesLP._reserve1.toString()),\n    )\n    const cakeLPBalance = pair.getLiquidityValue(\n      pair.token0,\n      new TokenAmount(CAKE_BNB_TOKEN, totalSupplyLP.toString()),\n      new TokenAmount(CAKE_BNB_TOKEN, cakeBnbBalance.amount.toString()),\n      false,\n    )\n\n    return new BigNumber(cakeLPBalance.toSignificant(18))\n  } catch (error) {\n    console.error(`CAKE-BNB LP error: ${error}`)\n    return BIG_ZERO\n  }\n}\n\n/**\n * Gets the cake staked in the main pool\n */\nexport const getUserStakeInCakePool = async (account: string, block?: number) => {\n  try {\n    const masterContract = getMasterchefContract(web3WithArchivedNodeProvider)\n    const response = await masterContract.methods.userInfo(0, account).call(undefined, block)\n\n    return getBalanceAmount(new BigNumber(response.amount))\n  } catch (error) {\n    console.error('Error getting stake in CAKE pool', error)\n    return BIG_ZERO\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'totalDeposit',\n      params: [],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(sousChefV2, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.methods.poolLimitPerUser().call()\n    return new BigNumber(stakingLimit)\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport web3NoAccount from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3NoAccount.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingCake('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.methods.userInfo(account).call()\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime as string,\n      lastUserActionTime: userContractResponse.lastUserActionTime as string,\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { ARCHIVED_NODE } from 'config/constants/endpoints'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\nconst web3NoAccount = new Web3(httpProvider)\n\nconst archivedHttpProvider = new Web3.providers.HttpProvider(ARCHIVED_NODE, { timeout: 10000 } as HttpProviderOptions)\nexport const web3WithArchivedNodeProvider = new Web3(archivedHttpProvider)\n\nexport default web3NoAccount\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { CampaignType, FarmConfig, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  id: string\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface RoundData {\n  [key: string]: Round\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport interface BetData {\n  [key: string]: {\n    [key: string]: Bet\n  }\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  lastOraclePrice: string\n  rounds: RoundData\n  history: HistoryData\n  bets: BetData\n}\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n}\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 3,\n    stakingToken: tokens.srkb,\n    earningToken: tokens.srkb,\n    contractAddress: {\n      97: '0x0dE59a7217deAa24f891797142F6fBf9CE78B698',\n      56: '0x0dE59a7217deAa24f891797142F6fBf9CE78B698',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '2893518518518518518',\n    sortOrder: 999,\n    isFinished: false,\n    isComingSoon: false,\n  },\n  {\n    sousId: 4,\n    stakingToken: tokens.sfuel,\n    earningToken: tokens.sfuel,\n    contractAddress: {\n      97: '0x54277Be7F64168E8713B710fbCcC5b2B663BD637',\n      56: '0x54277Be7F64168E8713B710fbCcC5b2B663BD637',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '135030864197530864',\n    sortOrder: 999,\n    isFinished: false,\n    isComingSoon: false,\n  },\n  // Dummy Contract #1\n  // {\n  //   sousId: 4,\n  //   stakingToken: tokens.sfuel,\n  //   earningToken: tokens.sfuel,\n  //   contractAddress: {\n  //     97: '0xa4bf8a4abb7fd91971854ac0aade50c61afd9f1a',\n  //     56: '0x9c03326543bf9a927a5ff51c407fbc444f19ca1a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '49603174603174603',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   isComingSoon: true,\n  // },\n  // Dummy Contract #2\n  // {\n  //   sousId: 5,\n  //   stakingToken: tokens.srkb,\n  //   earningToken: tokens.sfuel,\n  //   contractAddress: {\n  //     97: '0xa4bf8a4abb7fd91971854ac0aade50c61afd9f3a',\n  //     56: '0x9c03326543bf9a927a5ff51c407fbc444f19ca3a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '49603174603174603',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   isComingSoon: false,\n  // }\n]\n\nexport default pools\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { Bet, BetPosition, Market, PredictionStatus, Round, RoundData } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  MarketResponse,\n  TotalWonMarketResponse,\n  TotalWonRoundResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): RoundResponse => {\n  return {\n    id: epoch.toString(),\n    epoch: epoch.toString(),\n    startBlock: startBlock.toString(),\n    failed: null,\n    startAt: null,\n    lockAt: null,\n    lockBlock: null,\n    lockPrice: null,\n    endBlock: null,\n    closePrice: null,\n    totalBets: '0',\n    totalAmount: '0',\n    bearBets: '0',\n    bullBets: '0',\n    bearAmount: '0',\n    bullAmount: '0',\n    position: null,\n    bets: [],\n  }\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformMarketResponse = (marketResponse: MarketResponse): Market => {\n  return {\n    id: marketResponse.id,\n    paused: marketResponse.paused,\n    epoch: Number(marketResponse.epoch.epoch),\n  }\n}\n\nexport const transformTotalWonResponse = (\n  marketResponse: TotalWonMarketResponse,\n  roundResponse: TotalWonRoundResponse[],\n): number => {\n  const houseRounds = roundResponse.reduce((accum, round) => {\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\n  }, 0)\n\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\n}\n\nexport const makeRoundData = (rounds: Round[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.id]: round,\n    }\n  }, {})\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\n/**\n * Gets static data from the contract\n */\nexport const getStaticPredictionsData = async () => {\n  const calls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks'].map((method) => ({\n    address: getPredictionsAddress(),\n    name: method,\n  }))\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [isPaused], [bufferBlocks]] = await multicallv2(\n    predictionsAbi,\n    calls,\n  )\n\n  return {\n    status: isPaused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalBlocks: intervalBlocks.toNumber(),\n    bufferBlocks: bufferBlocks.toNumber(),\n    minBetAmount: minBetAmount.toNumber(),\n  }\n}\n\nexport const getMarketData = async (): Promise<{\n  rounds: Round[]\n  market: Market\n}> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getMarketData {\n        rounds(first: 5, orderBy: epoch, orderDirection: desc) {\n          ${getRoundBaseFields()}\n        }\n        market(id: 1) {\n          id\n          paused\n          epoch {\n            epoch\n          }\n        }\n      }\n    `,\n  )) as { rounds: RoundResponse[]; market: MarketResponse }\n\n  return {\n    rounds: response.rounds.map(transformRoundResponse),\n    market: transformMarketResponse(response.market),\n  }\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData($position: String) {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n        rounds(where: { position: $position }) {\n          totalAmount\n        }\n      }\n    `,\n    { position: BetPosition.HOUSE },\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\n\n  return transformTotalWonResponse(response.market, response.rounds)\n}\n\nexport const getRound = async (id: string) => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getRound($id: ID!) {\n        round(id: $id) {\n          ${getRoundBaseFields()}\n          bets {\n           ${getBetBaseFields()}\n            user {\n             ${getUserBaseFields()}\n            }\n          }\n        }\n      }\n  `,\n    { id },\n  )\n  return response.round\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface MarketResponse {\n  id: string\n  paused: boolean\n  epoch: {\n    epoch: string\n  }\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\nexport interface TotalWonRoundResponse {\n  totalAmount: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\nexport function RedirectToFarms({ location }: RouteComponentProps){\n    return <Redirect to={{...location, pathname: '/farms'}} />\n}\n\nexport function RedirectToPools({ location }: RouteComponentProps){\n    return <Redirect to={{...location, pathname: '/pools'}} />\n}","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@sparkpointio/sparkswap-uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: \"Swap\",\n    icon: \"TradeIcon\",\n    href: \"https://sparkswap.finance/#/swap\",\n  },\n  {\n    label: \"Farm\",\n    icon: \"FarmIcon\",\n    href: \"https://app.srk.finance/#/stake\",\n  },\n  {\n    label: \"Pool\",\n    icon: \"PoolIcon\",\n    href: \"/pools\",\n  },\n  {\n    label: \"Bridge\",\n    icon: \"BridgeIcon\",\n    href: \"https://app.srk.finance/#/bridge\",\n  },\n  {\n    label: \"Launch\",\n    icon: \"LaunchIcon\",\n    href: \"https://launch.sparkswap.finance/#/\",\n  },\n  {\n    label: \"Info\",\n    icon: \"InfoIcon\",\n    href: \"https://sparkswap.info/#/home\",\n  },\n  {\n    label: \"Airdrop\",\n    icon: \"AirdropIcon\",\n    href: \"https://app.srk.finance/#/airdrop\",\n  },\n  {\n    label: \"Teams\",\n    icon: \"GroupsIcon\",\n    href: \"https://srk.finance/team\",\n  },\n  {\n    label: \"Help\",\n    icon: \"MoreIcon\",\n    href: \"https://medium.com/theecosystem/a-beginners-guide-to-sparkswap-79f92a2f7074\"\n  }\n  // {\n  //   label: 'Trade',\n  //   icon: 'TradeIcon',\n  //   initialOpenState: true,\n  //   items: [\n  //     {\n  //       label: 'Exchange',\n  //       href: '/swap'\n  //     },\n  //     {\n  //       label: 'Liquidity',\n  //       href: '/pool'\n  //     }\n  //   ]\n  // },\n  /*\n  {\n    label: \"Info\",\n    icon: \"InfoIcon\",\n    items: [\n      {\n        label: \"Overview\",\n        href: \"https://coinmarketcap.com/currencies/sparkpoint/\",\n      },\n      {\n        label: \"Trade SRK\",\n        href: \"https://srk.sh/trade\",\n      },\n    ],\n  },\n  {\n    label: \"More\",\n    icon: \"MoreIcon\",\n    items: [\n      {\n        label: \"SparkDeFi\",\n        href: \"https://srk.finance/\",\n      },\n      {\n        label: \"SparkPoint\",\n        href: \"https://sparkpoint.io/\",\n      },\n      {\n        label: \"Github\",\n        href: \"https://github.com/sparkpointio\",\n      },\n      {\n        label: \"White Paper\",\n        href: \"https://github.com/sparkpointio/sparkdefi-whitepaper/blob/main/WHITEPAPER.md\",\n      },\n      {\n        label: \"Blog\",\n        href: \"https://medium.com/theecosystem\",\n      },\n    ],\n  },\n  */\n]\n\nexport default config\n","import React from 'react'\nimport { Menu as UikitMenu } from '@sparkpointio/sparkswap-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { isDark, toggleTheme } = useTheme()\n  const { currentLanguage, setLanguage } = useTranslation()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      links={config}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap-libs/sdk'\nimport { BASE_BSC_SCAN_URLS } from '../config'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}","import styled, { css, keyframes } from 'styled-components'\nimport { Card } from '@sparkpointio/sparkswap-uikit'\n\nconst PromotedGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\nexport const StyledCard = styled(Card)<{ isPromotedPool?: boolean; isFinished?: boolean }>`\n  border: 5px solid ${(props) => props.theme.colors.primary};\n  max-width: 352px;\n  padding: 24px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  justify-content: space-around;\n  background: ${(props) => props.theme.card.background};\n  text-align: center;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport const StyledCardInner = styled.div<{ isPromotedPool?: boolean }>`\n  background: ${({ theme }) => theme.card.background};\n\n  // border-radius: ${({ isPromotedPool, theme }) => (isPromotedPool ? '31px' : theme.radii.card)};\n`\n\nexport default StyledCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { getAddress } from 'utils/addressHelpers'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  const primaryTokenSrc = `/images/tokens/${getAddress(tokens.cake.address)}.svg`\n\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React, { useContext } from 'react'\nimport { Heading, Text, Flex, Image } from '@sparkpointio/sparkswap-uikit'\nimport styled, { ThemeContext } from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Token } from 'config/constants/types'\nimport TokenPairImage from 'components/TokenPairImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled.div<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) => theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n//  background: ${({ isFinished, background, theme }) =>\n// isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n// border-radius: ${({ theme, isPromotedPool }) =>\n// isPromotedPool ? '31px 31px 0 0' : `${theme.radii.card} ${theme.radii.card} 0 0`};\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\n  // const background = isStaking ? 'bubblegum' : 'cardHeader'\n  const background = 'cardHeader'\n\n/* \n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n*/\n\n  const getCardTitle = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t(`Stake CAKE to Earn CAKE`)\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n    // return t('Stake %symbol% to Earn SRK', { symbol: stakingToken.symbol } )\n  }\n  const theme = useContext(ThemeContext);\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\" style={{textAlign: 'left'}}>\n          <Heading color='text' size=\"lg\">\n            {`Stake ${stakingToken.symbol}`} <br/>\n            to <br />\n            {`Earn ${earningToken.symbol}`}\n          </Heading>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href={BASE_EXCHANGE_URL}>\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    return txHash\n  }, [account, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import React, { useEffect, useState, useRef } from 'react'\nimport styled from 'styled-components'\nimport { Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { Modal, Text, Flex, Image, Button} from '@sparkpointio/sparkswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { useSousApprove, useSousApproveWithAmount } from 'hooks/useApprove'\nimport { useTokenAllowance } from 'hooks/useTokenBalance'\nimport { useERC20 } from 'hooks/useContract'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount, getBalanceNumber } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport ModalInput from 'components/ModalInput'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onSelectMax?: () => void\n  onDismiss?: () => void\n  isApprove?: boolean\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst ModalBody = styled(Flex)`\n  width: 450px;\n  margin-top: -20px;\n  padding: 20px;\n`\nconst StakeActionModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n  isApprove = false,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const approveBtn = useRef(null);\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  // const [approvedTx, setApprovedTx] = useState(false)\n  const [isApproved, setIsApproved] = useState(isApprove)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const userLimit = stakingLimit.minus(userData.stakedBalance);\n  const totalStakedTokens = userData?.stakedBalance ? getBalanceNumber(new BigNumber(userData.stakedBalance), stakingToken.decimals) : BIG_ZERO\n  const numTotalStaked = totalStakedTokens\n  const totalStakingTokens = userData?.stakingTokenBalance ? getBalanceNumber(new BigNumber(userData.stakingTokenBalance), stakingToken.decimals) : BIG_ZERO\n  const remainingStakeTokens = userData?.stakedBalance ? getBalanceNumber(new BigNumber(pool.stakingLimit.minus(userData.stakedBalance)), stakingToken.decimals) : BIG_ZERO\n  const totalAllowance = useTokenAllowance(stakingToken.address[56], pool.contractAddress[56])\n  console.log(totalAllowance.balance.toString())\n  const { handleApprove, requestedApproval } = useSousApproveWithAmount(stakingTokenContract, sousId, earningToken.symbol, getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals))\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    console.log(stakingLimit.gt(BIG_ZERO))\n    return stakingLimit.gt(BIG_ZERO) && stakingTokenBalance.gt(userLimit) ? userLimit : stakingTokenBalance\n  }\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n\n    setIsApproved(new BigNumber(getBalanceNumber(totalAllowance.balance, stakingToken.decimals)).gte(stakeAmount))\n  }, [requestedApproval, stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, totalAllowance, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  // const handleApproveClick = async () => {\n  //   setApprovedTx(true)\n  // }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        setIsApproved(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    }\n  }\n  \n\n  return (\n    <Modal title=\"\" onDismiss={onDismiss}>\n      <ModalBody flexDirection=\"column\">\n        {/* {stakingLimit.gt(0) && !isRemovingStake && (\n          <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n            {t('Max stake for this pool: %amount% %token%', {\n              amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n              token: stakingToken.symbol,\n            })}\n          </Text>\n        )} */}\n\n        <Flex justifyContent=\"center\">\n          <Text color=\"textSubtle\" fontSize=\"14px\" mb=\"38px\" mt=\"-48px\" style={{ textAlign: 'center'}}>\n            {t('Maximum stakable amount in this pool: %maxstake% %tokensymbol%', {\n              maxstake: getFullDisplayBalance(stakingLimit, stakingToken.decimals),\n              tokensymbol: pool.stakingToken.symbol\n            })}\n          </Text>\n        </Flex> \n\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n          <Text bold>Stake amount</Text>\n          {/* <Flex alignItems=\"center\">\n            <Image\n              src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n              width={24}\n              height={24}\n              alt={stakingToken.symbol}\n            />\n            <Text ml=\"4px\" bold>\n              {stakingToken.symbol}\n            </Text>\n          </Flex> */}\n        </Flex>\n        <ModalInput\n          value={stakeAmount}\n          onSelectMax={() => {handleChangePercent(100)}}\n          onChange={e => handleStakeInputChange(e.currentTarget.value)}\n          max={getFullDisplayBalance(new BigNumber(userLimit), stakingToken.decimals, 0)}\n          symbol={stakingToken.symbol}\n          addLiquidityUrl=''\n        />\n        \n        {/* Fetch and display actual balance */}\n        \n        <Text color=\"textSubtle\" fontSize=\"14px\" mb=\"8px\" style={{ textAlign: 'left'}}>\n          Remaining stakable amount: {remainingStakeTokens} {pool.stakingToken.symbol}\n        </Text>\n        \n\n        <div>\n        <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"14px\" mb=\"8px\" style={{ textAlign: 'left'}}>\n          {/* {t('Balance: %balance%', {\n            balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n          })} */}\n          Balance: {totalStakingTokens.toFixed(4)} {pool.stakingToken.symbol}\n        </Text>\n        </div>\n        \n        \n        \n        {/* {hasReachedStakeLimit && (\n          <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n            {t('Maximum total stake: %amount% %token%', {\n              amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n              token: stakingToken.symbol,\n            })}\n          </Text>\n        )} */}\n        {/* <Flex>\n        <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\" mt=\"-8px\" style={{ textAlign: 'left'}}>\n          {t('Balance: %balance%', {\n            balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n          })}\n        </Text>\n        </Flex> */}\n        {/* <Slider\n          min={0}\n          max={100}\n          value={percent}\n          onValueChanged={handleChangePercent}\n          name=\"stake\"\n          valueLabel={`${percent}%`}\n          step={1}\n        />\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n          <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n          <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n          <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n          <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n        </Flex> */}\n\n        <Flex justifyContent=\"space-between\"  marginTop=\"17px\" marginBottom=\"17px\">\n          <Text bold>Approved Tokens</Text>\n          <Text>\n            {getBalanceNumber(totalAllowance.balance, stakingToken.decimals)} {pool.stakingToken.symbol}\n          </Text>\n        </Flex>\n        <Flex style={{width: '100%'}}>\n        <Button\n          isLoading={pendingTx}\n          // endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          // onClick={handleApproveClick}\n          // disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || approvedTx}\n          onClick={handleApprove}\n          disabled={!stakeAmount || isApproved}\n          mt=\"24px\"\n          fullWidth\n          marginRight=\"20px\"\n        >\n         Approve\n        </Button>\n        <Button\n          isLoading={pendingTx}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          disabled={!stakeAmount || hasReachedStakeLimit || !isApproved}\n          // disabled={!approvedTx}\n          mt=\"24px\"\n          fullWidth\n          marginLeft=\"20px\"\n        >\n          {/* {pendingTx ? t('Depositing') : t('Deposit')} */}\n          {t('Deposit')}\n        </Button>\n        </Flex>\n        {/* {!isRemovingStake && (\n          <StyledLink external href={BASE_EXCHANGE_URL}>\n            <Button fullWidth mt=\"8px\" variant=\"secondary\">\n              {t('Get %symbol%', { symbol: stakingToken.symbol })}\n            </Button>\n          </StyledLink>\n        )} */}\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default StakeActionModal\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {  Slider, BalanceInput, } from '@pancakeswap/uikit';\nimport { Modal, Text, Flex, Image, Button, AutoRenewIcon, Link, Dropdown, useModal} from '@sparkpointio/sparkswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport { ChevronDown, ChevronUp } from 'react-feather';\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount, getBalanceNumber } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\n\nimport StakeTokenModal from './Stake';\nimport PercentageButton from './PercentageButton'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n  addTokenUrl?: string\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\nconst StyledFlex = styled(Flex)`\njustify-content: center;\n  & > * {\n    flex: 1;\n    margin: 0px 10px;\n  }\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  addTokenUrl,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId, pool.enableEmergencyWithdraw)\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const [activeSelect, setActiveSelect] = useState(false)\n  const { balance: earnedTokenBalance } = useTokenBalance(pool.earningToken.address[56])\n  const { toastSuccess, toastError } = useToast()\n  const totalStakingTokens = userData?.stakingTokenBalance ? getBalanceNumber(new BigNumber(userData.stakingTokenBalance), stakingToken.decimals) : BIG_ZERO\n  const totalStakedTokens = userData?.stakedBalance ? getBalanceNumber(new BigNumber(userData.stakedBalance), stakingToken.decimals) : BIG_ZERO\n  const totalEarningTokens = earnedTokenBalance ? getBalanceNumber(new BigNumber(earnedTokenBalance)) : BIG_ZERO\n  const totalEarnedTokens = userData?.pendingReward ? getBalanceNumber(new BigNumber(userData.pendingReward)) : BIG_ZERO\n  const [pendingTx, setPendingTx] = useState(false)\n  const temp = new BigNumber(pool.tokenPerBlock).times( new BigNumber(userData.stakedBalance).div(pool.totalStaked)  ) \n  const totalStaked = pool.totalStaked ? getBalanceNumber(new BigNumber(pool.totalStaked.toString()), stakingToken.decimals) : BIG_ZERO\n\n  const rewardRate = pool?.tokenPerBlock ? getBalanceNumber(temp) : BIG_ZERO\n  const [ onPresentStakeAction ] = useModal(<StakeTokenModal isBnbPool={isBnbPool} pool={pool} stakingTokenBalance={stakingTokenBalance} stakingTokenPrice={stakingTokenPrice} />)\n  \n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Claimed')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n  }\n\n  const handleUnstake = async () => {\n    setPendingTx(true)\n      // unstaking\n      try {\n        await onUnstake(totalStakedTokens.toFixed(4), stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been claimed to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    } \n  \n\n  return (\n    <Modal\n    title=\"\"\n    onDismiss={onDismiss}\n  >\n    <Flex flexDirection=\"column\" style={{marginTop: '-50px', width: \"550px\"}} >\n      <Text fontSize=\"20px\" marginBottom=\"10px\" marginLeft=\"10px\">Account Info</Text>\n      <Text fontSize=\"15px\" marginLeft=\"10px\">Staking, balances & earnings</Text>\n      <StyledFlex marginTop=\"21px\">\n        <Flex flexDirection=\"column\">\n          <Text fontSize=\"24px\">{totalStakingTokens.toFixed(4)}</Text>\n          <Text color=\"textSubtle\" marginBottom=\"24px\">{pool.stakingToken.symbol} Tokens</Text>\n          <Button fullWidth as=\"a\" href={`https://sparkswap.finance/#/swap/${pool.stakingToken.address[56]}`}>Add More</Button>\n        </Flex>\n        <Flex flexDirection=\"column\">\n          <Text fontSize=\"24px\">{totalEarningTokens.toFixed(4)}</Text>\n          <Text color=\"textSubtle\" marginBottom=\"24px\">{pool.earningToken.symbol} Tokens</Text>\n          <Button fullWidth as=\"a\" href={`https://sparkswap.finance/#/swap/${pool.earningToken.address[56]}`}>Add More</Button>\n        </Flex>\n        <Flex flexDirection=\"column\">\n          <Text fontSize=\"24px\">{totalStakedTokens.toFixed(4)}</Text>\n          <Text color=\"textSubtle\" marginBottom=\"24px\">{pool.stakingToken.symbol} Staked</Text>\n          <Button fullWidth onClick={onPresentStakeAction}>Stake Tokens</Button>\n        </Flex>\n      </StyledFlex>\n      <StyledFlex >\n      <hr style={{marginTop: '30px', border: 'none', borderTop: `2px solid ${theme.colors.primary}` }} />\n      </StyledFlex>\n      <StyledFlex marginTop=\"30px\" marginBottom=\"20px\">\n        <Flex flexDirection=\"column\">\n          <Text fontSize=\"24px\">{rewardRate.toFixed(4)}</Text>\n          <Text color=\"textSubtle\" fontSize=\"17px\">Your Rate {pool.earningToken.symbol}/block</Text>\n        </Flex>\n        <Flex flexDirection=\"column\">\n          <Text fontSize=\"24px\">{totalEarnedTokens.toFixed(4)}</Text>\n          <Text color=\"textSubtle\" fontSize=\"17px\">{pool.earningToken.symbol} Token Earnings</Text>\n        </Flex>\n        <Flex flexDirection=\"column\" mb=\"16px\" marginLeft=\"5px\"\n        onMouseEnter={() => setActiveSelect(true)}\n        onMouseLeave={() => setActiveSelect(false)}>\n      \n       {userData.stakedBalance.eq(0) ? <Button disabled fullWidth> Withdraw </Button> : <Dropdown\n          position=\"top\"\n          target={\n            // Disable component if total staked tokens is empty\n            <Button fullWidth variant=\"secondary\">\n              <Text>Withdraw</Text> {activeSelect ? <ChevronDown /> : <ChevronUp />}\n            </Button>\n          }\n        >\n            {/* Disable Claim & Withdraw if no staked tokens */}\n            <Button fullWidth>\n              <Text onClick={handleHarvestConfirm}>Claim</Text>\n            </Button>\n            <Button>\n              <Text onClick={handleUnstake}>Claim & Withdraw</Text>\n            </Button>\n        </Dropdown>\n\n       }\n       \n\n       \n  </Flex>\n      </StyledFlex>\n    </Flex>\n  </Modal>\n  )\n}\n\nexport default StakeModal","import React from 'react'\nimport { IconButton, AddIcon, MinusIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { Button, Text, Flex, useModal } from '@sparkpointio/sparkswap-uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    // isStaked ? (\n    //   <Flex justifyContent=\"space-between\" alignItems=\"center\">\n    //     <Flex flexDirection=\"column\">\n    //       <>\n    //         <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n    //         {stakingTokenPrice !== 0 && (\n    //           <Text fontSize=\"12px\" color=\"textSubtle\">\n    //             <Balance\n    //               fontSize=\"12px\"\n    //               color=\"textSubtle\"\n    //               decimals={2}\n    //               value={stakedTokenDollarBalance}\n    //               prefix=\"~\"\n    //               unit=\" USD\"\n    //             />\n    //           </Text>\n    //         )}\n    //       </>\n    //     </Flex>\n    //     <Flex>\n    //       <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n    //         <MinusIcon color=\"primary\" width=\"24px\" />\n    //       </IconButton>\n    //       {reachStakingLimit ? (\n    //         <span ref={targetRef}>\n    //           <IconButton variant=\"secondary\" disabled>\n    //             <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n    //           </IconButton>\n    //         </span>\n    //       ) : (\n    //         <IconButton\n    //           variant=\"secondary\"\n    //           onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n    //           disabled={isFinished}\n    //         >\n    //           <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n    //         </IconButton>\n    //       )}\n    //     </Flex>\n    //     {tooltipVisible && tooltip}\n    //   </Flex>\n    // ) : \n\n    // Reserve function for future use\n    // <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired} fullWidth>\n    return (\n      <Button fullWidth disabled={isFinished} onClick={ onPresentStake }>\n        Stake\n      </Button>\n    )\n  }\n\n  return <Flex justifyContent=\"space-between\" alignItems=\"center\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst StyledFlex = styled(Flex)`\n  & > * {\n    flex: 1;\n    height: 60px;\n  }\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice, isComingSoon } = pool\n  // getBalanceNumber(stakedBalance, stakingToken.decimals)\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  const totalStaked = userData?.stakedBalance ? getBalanceNumber(new BigNumber(userData.stakedBalance), stakingToken.decimals) : BIG_ZERO\n  const totalEarned = userData?.pendingReward ? getBalanceNumber(new BigNumber(userData.pendingReward)) : BIG_ZERO\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\" >\n        {harvest && (\n          <>\n            <Flex justifyContent=\"space-between\">\n              <Box display=\"inline\">\n                {/* <Text color=\"text\" textTransform=\"uppercase\" bold fontSize=\"12px\"> */}\n                <Text color=\"text\" bold fontSize=\"15px\" marginBottom=\"8px\">\n                  {`${stakingToken.symbol} Staked`}\n                </Text>\n              </Box>\n              <Box display=\"inline\">\n                {/* <Text color=\"text\" textTransform=\"uppercase\" bold fontSize=\"12px\"> */}\n                <Text color=\"text\" bold fontSize=\"15px\" marginBottom=\"8px\">\n                  {`${earningToken.symbol} Earned`}\n                </Text>\n              </Box>\n            </Flex>\n            <Flex justifyContent=\"space-between\" marginBottom=\"20px\">\n              <Box display=\"inline\">\n                {/* <Text color=\"text\" textTransform=\"uppercase\"  bold fontSize=\"12px\"> */}\n                <Text color=\"text\" textTransform=\"uppercase\" fontSize=\"12px\">\n                   {!isComingSoon && totalStaked} {isComingSoon && '-'} {stakingToken.symbol}\n                </Text>\n              </Box>\n              <Box display=\"inline\">\n                {/* <Text color=\"text\" textTransform=\"uppercase\" bold fontSize=\"12px\"> */}\n                <Text color=\"text\" textTransform=\"uppercase\" fontSize=\"12px\">\n                   {!isComingSoon && totalEarned} {isComingSoon && '-'} {stakingToken.symbol}\n                </Text>\n              </Box>\n            </Flex>\n          </>\n        )}\n        {/* <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box> */}\n          <StyledFlex justifyContent=\"space-between\" marginTop=\"10px\">\n             <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n             {/* <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            /> */}\n          </StyledFlex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React, { useContext } from 'react'\nimport { CardBody, Flex, Text , Link, LinkExternal} from '@sparkpointio/sparkswap-uikit'\nimport { ThemeContext } from 'styled-components'\nimport UnlockButton from 'components/UnlockButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport { useBlock } from 'state/block/hooks'\nimport { getBscScanLink } from 'utils'\nimport AprRow from './AprRow'\nimport { StyledCard, StyledCardInner } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData, startBlock, endBlock, isComingSoon } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  const theme = useContext(ThemeContext)\n\n  const totalStaked = pool.totalStaked ? getBalanceNumber(new BigNumber(pool.totalStaked.toString()), stakingToken.decimals) : BIG_ZERO\n\n  const rewardPerBlock = pool?.tokenPerBlock ? getBalanceNumber(new BigNumber(pool.tokenPerBlock.toString()), earningToken.decimals) : BIG_ZERO\n\n  const temp = new BigNumber(pool.tokenPerBlock).times( new BigNumber(userData.stakedBalance).div(pool.totalStaked)  )\n  const rewardRate = pool?.tokenPerBlock ? getBalanceNumber(temp) : BIG_ZERO\n\n  const { currentBlock } = useBlock()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n  getPoolBlockInfo(pool, currentBlock)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n    >\n        <StyledCardHeader\n          isStaking={accountHasStakedBalance}\n          earningToken={earningToken}\n          stakingToken={stakingToken}\n          isFinished={isFinished && sousId !== 0}\n        />\n         <hr style={{width: '100%', border: 'none', backgroundColor: theme.colors.primary, height: '2px'}}/>\n\n          <Flex justifyContent=\"space-between\" style={{textAlign: 'left'}}>\n            <Text>Remaining blocks</Text>\n            <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n              <Text>{!isComingSoon && `${blocksRemaining}`} {isComingSoon && '-'} blocks</Text>\n            </Link>\n          </Flex>\n\n          {/* <AprRow pool={pool} stakingTokenPrice={stakingTokenPrice} /> */}\n          <Flex justifyContent=\"space-between\" style={{textAlign: 'left'}}>\n            <Text>Total Deposit</Text>\n            <Text>{!isComingSoon && `${totalStaked}`} {isComingSoon && '-'} {stakingToken.symbol}</Text>\n          </Flex>\n          <Flex justifyContent=\"space-between\" style={{textAlign: 'left'}}>\n              <Text>Reward per block</Text>\n              <Text>{!isComingSoon && rewardPerBlock} {isComingSoon && '-'}</Text>\n          </Flex>\n          {/* <Flex justifyContent=\"space-between\" style={{textAlign: 'left'}}>\n            <Text>APY</Text>\n            <Text>0%</Text>\n          </Flex> */}\n          <Flex justifyContent=\"space-between\" style={{textAlign: 'left'}}>\n        <Text>{t('Your Rate')}</Text>\n        <Text>{!isComingSoon && rewardRate.toFixed(4)} {isComingSoon && '-'} {pool.earningToken.symbol}/block</Text>\n      </Flex>\n          <Flex mt=\"24px\" flexDirection=\"column\" marginTop=\"10px\">\n            {account ? (\n              <CardActions pool={pool} stakedBalance={stakedBalance} />\n            ) : (\n              <>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n          <Text color=\"textSubtle\" fontSize=\"14px\">{t('This will only work on Binance Smart Chain')}</Text>\n        {/* <CardFooter pool={pool} account={account} /> */ }\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import { useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mr=\"12px\" ml=\"12px\" mb=\"12px\">\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d(APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\">\n          <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\n            {t(\n              'Calculated based on current rates. Compounding %freq%x daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n              { freq: compoundFrequency.toLocaleString() },\n            )}\n          </Text>\n          {performanceFee > 0 && (\n            <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\n              {t('All estimated rates take into account this pool’s %fee%% performance fee', { fee: performanceFee })}\n            </Text>\n          )}\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { getAprData } from 'views/Pools/helpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink =\n    stakingToken.address &&\n    `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${stakingToken.address[process.env.REACT_APP_CHAIN_ID]}`\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon, RefreshIcon, AutoRenewIcon, TagProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst BinanceTag: React.FC<TagProps> = (props) => {\n  return (\n    <Tag variant=\"binance\" outline startIcon={<BinanceIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      Binance\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, BinanceTag, DualTag, ManualPoolTag, CompoundingPoolTag }\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { useBlock, useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenAddress}.png`\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanBlockCountdownUrl(hasPoolStarted ? endBlock : startBlock)}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false} small>\n          {t('Info site')}\n        </LinkExternal>\n      </Flex>\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from 'hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      cakeVaultContract.methods\n        .withdrawAll()\n        .send({ from: account })\n        .on('sending', () => {\n          setPendingTx(true)\n        })\n        .on('receipt', () => {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        })\n        .on('error', (error) => {\n          console.error(error)\n          // Remove message from toast before prod\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n          setPendingTx(false)\n        })\n    } else {\n      cakeVaultContract.methods\n        .withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString())\n        // .toString() being called to fix a BigNumber error in prod\n        // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n        .send({ from: account })\n        .on('sending', () => {\n          setPendingTx(true)\n        })\n        .on('receipt', () => {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        })\n        .on('error', (error) => {\n          console.error(error)\n          // Remove message from toast before prod\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n          setPendingTx(false)\n        })\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    cakeVaultContract.methods\n      .deposit(convertedStakeAmount.toString())\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      .send({ from: account })\n      .on('sending', () => {\n        setPendingTx(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      })\n      .on('error', (error) => {\n        console.error(error)\n        // Remove message from toast before prod\n        toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n        setPendingTx(false)\n      })\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    setPendingTx(true)\n    // unstaking\n    if (isRemovingStake) {\n      handleWithdrawal(convertedStakeAmount)\n      // staking\n    } else {\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={BASE_EXCHANGE_URL} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCheckVaultApprovalStatus } from 'hooks/useApprove'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, useMatchBreakpoints } from '@sparkpointio/sparkswap-uikit'\nimport {Box,CardBody} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport UnlockButton from 'components/UnlockButton'\nimport tokens from 'config/constants/tokens'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard, StyledCardInner } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { isXl } = useMatchBreakpoints()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard>\n      <StyledCardInner>\n        <StyledCardHeader\n          isStaking={accountHasSharesStaked}\n          isAutoVault\n          earningToken={tokens.cake}\n          stakingToken={tokens.cake}\n        />\n        <StyledCardBody isLoading={isLoading}>\n          <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n          <Box mt=\"24px\">\n            <RecentCakeProfitRow />\n          </Box>\n          <Box mt=\"8px\">\n            <UnstakingFeeCountdownRow />\n          </Box>\n          <Flex mt=\"32px\" flexDirection=\"column\">\n            {account ? (\n              <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </StyledCardBody>\n        <CardFooter pool={pool} account={account} />\n      </StyledCardInner>\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","var _style, _g, _g2, _g3, _g4;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPoolDark(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 500 500\",\n    style: {\n      enableBackground: \"new 0 0 500 500\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#39BEEC;}\\n\\t.st1{fill:#1B60A3;}\\n\\t.st2{fill:#FFFFFF;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_3\"\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_2\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M270.7,262v-77.9c18-1.2,50.5-6.6,72.9-29c31.8-31.8,29.3-84,29.2-86.2c-0.4-6.5-5.5-11.6-12-12 c-2.2-0.1-54.4-2.6-86.2,29.2c-3.4,3.4-6.4,7-9,10.8c-4.7-18.7-13.4-39.7-29.8-56C197.7,3,135.2,6,132.5,6.1 c-6.5,0.4-11.6,5.5-12,12c-0.1,2.6-3.1,65.2,34.9,103.2c27.8,27.8,68.8,33.7,89.8,34.8v106c4.2-0.5,8.5-0.7,12.7-0.7 C262.2,261.3,266.5,261.6,270.7,262L270.7,262z\"\n  }))), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 137.3,\n    cy: 371,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 250.9,\n    cy: 331,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 364.5,\n    cy: 371,\n    r: 109.4\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4_1_\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 21,\n    y: 400,\n    className: \"st2\",\n    width: 461,\n    height: 89\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPoolDark);\nexport default __webpack_public_path__ + \"static/media/pool-dark.852173fe.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport { useRouteMatch, Link, useLocation } from 'react-router-dom'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  Toggle,\n  Text,\n  Flex,\n  useMatchBreakpoints,\n} from '@sparkpointio/sparkswap-uikit'\nimport {   NotificationDot, } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const location = useLocation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  let activeIndex\n  switch (location.pathname) {\n    case '/pools':\n      activeIndex = 0\n      break\n    case '/pools/history':\n      activeIndex = 1\n      break\n    case '/pools/upcoming':\n      activeIndex = 2\n      break\n    default:\n      activeIndex = 0\n      break\n  }\n\n\n  const liveOrFinishedSwitch = (\n    <ButtonMenu activeIndex={activeIndex} size=\"sm\" variant=\"subtle\">\n      <ButtonMenuItem as={Link} to={`${url}`}>\n        {t('Active')}\n      </ButtonMenuItem>\n      <NotificationDot show={hasStakeInFinishedPools}>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {t('Ended')}\n        </ButtonMenuItem>\n      </NotificationDot>\n      <ButtonMenuItem as={Link} to={`${url}/upcoming`}>\n        {t('Upcoming')}\n      </ButtonMenuItem>\n    </ButtonMenu>\n  )\n\n   const stakedOnlySwitch = (\n     <Flex mt={['4px', null, 0, null]} ml={[0, null, '24px', null]} justifyContent=\"center\" alignItems=\"center\">\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly((prev) => !prev)} />\n      <Text ml={['4px', '4px', '8px']}>{t('Staked only')}</Text>\n     </Flex>\n   )\n\n  if (isXs || isSm) {\n    return (\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\" mb=\"24px\">\n        <Flex style={{width: '100%' }}justifyContent=\"space-between\">\n          {/* {viewModeToggle} */}\n          {liveOrFinishedSwitch}\n        </Flex>\n        {/* {stakedOnlySwitch}  */}\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex\n      alignItems=\"center\"\n      justifyContent={['space-around', 'space-around', 'flex-start']}\n      mb={['24px', '24px', '24px', '0px']}\n    >\n      {/* {viewModeToggle} */}\n      {liveOrFinishedSwitch}\n      {/* {stakedOnlySwitch} */}\n    </Flex>\n  )\n}\n\nexport default PoolTabButtons\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport { useBlock, useCakeVault } from 'state/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenAddress}.png`\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanBlockCountdownUrl(hasPoolStarted ? endBlock : startBlock)}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false}>\n            {t('Info site')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport TokenPairImage from 'components/TokenPairImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n\n  if (isAutoVault) {\n    title = t('Auto CAKE')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual CAKE')\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent CAKE profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningsDollarValue}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color={hasEarnings ? 'textSubtle' : 'textDisabled'}\n                    decimals={2}\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                    prefix=\"~\"\n                  />\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr\n          pool={pool}\n          performanceFee={isAutoVault ? performanceFee : 0}\n          showIcon={!isXs && !isSm}\n          alignItems=\"flex-start\"\n        />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"100%\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanBlockCountdownUrl(hasPoolStarted ? endBlock : startBlock)}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCheckVaultApprovalStatus, useSousApprove, useVaultApprove } from 'hooks/useApprove'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useSousApprove(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","var _style, _g, _g2, _g3, _g4;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPoolLight(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 500 500\",\n    style: {\n      enableBackground: \"new 0 0 500 500\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#39BEEC;}\\n\\t.st1{fill:#1B60A3;}\\n\\t.st2{fill:#727071;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_3\"\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_2_1_\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M270.7,262v-77.9c18-1.2,50.5-6.6,72.9-29c31.8-31.8,29.3-84,29.2-86.2c-0.4-6.5-5.5-11.6-12-12 c-2.2-0.1-54.4-2.6-86.2,29.2c-3.4,3.4-6.4,7-9,10.8c-4.7-18.7-13.4-39.7-29.8-56C197.7,3,135.2,6,132.5,6.1 c-6.5,0.4-11.6,5.5-12,12c-0.1,2.6-3.1,65.2,34.9,103.2c27.8,27.8,68.8,33.7,89.8,34.8v106c4.2-0.5,8.5-0.7,12.7-0.7 C262.2,261.3,266.5,261.6,270.7,262L270.7,262z\"\n  }))), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1_1_\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 137.3,\n    cy: 371,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 250.9,\n    cy: 331,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 364.5,\n    cy: 371,\n    r: 109.4\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4_1_\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 21,\n    y: 400,\n    className: \"st2\",\n    width: 461,\n    height: 89\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPoolLight);\nexport default __webpack_public_path__ + \"static/media/pool-light.45788dfe.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useMemo, useRef, useState, useContext} from 'react'\nimport { useLocation, Route, useRouteMatch } from 'react-router-dom'\nimport styled, { ThemeContext } from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image } from '@pancakeswap/uikit'\nimport { Text } from '@sparkpointio/sparkswap-uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { SvgIcon } from '@material-ui/core';\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { usePools, useFetchCakeVault, useFetchPublicPoolsData, usePollFarmsData, useCakeVault } from 'state/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport { StyledHr } from 'views/Farms/components/Divider'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport useMedia from 'use-media';\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\nimport { ReactComponent as PoolsDarkLogo } from './components/assets/pool-dark.svg';\nimport { ReactComponent as PoolsLightLogo} from './components/assets/pool-light.svg';\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled(Flex)`\n  flex-direction: column;\n  margin-bottom: 24px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst SearchSortContainer = styled(Flex)`\n  gap: 10px;\n  justify-content: space-between;\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const theme = useContext(ThemeContext);\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const isMobile = useMedia({maxWidth: 500})\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const [upcomingPools, notUpcomingPools] = useMemo(() => partition(pools, (pool) => pool.isComingSoon), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE)\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n  const showUpcomingPools = location.pathname.includes('upcoming')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  const poolsToShow = () => {\n    let chosenPools = []\n    if (showUpcomingPools){\n      chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools // TODO: @koji @mat-ivan Please apply here how to filter upcoming pools\n    }\n    else if (showFinishedPools) {\n      chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n    } else {\n      chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n    }\n\n    if (searchQuery) {\n      const lowercaseQuery = latinise(searchQuery.toLowerCase())\n      chosenPools = chosenPools.filter((pool) =>\n        latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n      )\n    }\n\n    return sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  }\n\n  const cardLayout = (\n    <CardLayout>\n      {poolsToShow().map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={poolsToShow()} account={account} userDataLoaded={userDataLoaded} />\n  const { path, url, isExact } = useRouteMatch()\n\n\n  return (\n    <>\n      <PageHeader>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" flexDirection={['column', null, 'row']} style={isMobile? { flexDirection: 'column-reverse'} : {minHeight: '20vh'}} padding=\"24px\"> \n          <Flex flexDirection=\"column\" mr={['8px', 0]}>\n            <Text color=\"text\" fontSize=\"60px\" bold marginBottom=\"10px\">\n              <span style={{borderBottom: `2px solid ${theme.colors.primary}`}}>Pools</span>\n            </Text>\n            <Text color=\"text\" style={isMobile? { fontSize: \"17px\" } : { fontSize: \"27px\" }}>\n                Earn SRK, SFUEL and other tokens by just staking!\n            </Text>\n          </Flex>\n          <Flex style={isMobile? {fontSize: '150px', margin: 'auto', marginTop: '20px', marginBottom: '20px' } : {fontSize: '240px', marginRight: '-112px', position: 'relative'}}>\n              <SvgIcon component={theme.isDark? PoolsDarkLogo : PoolsLightLogo} viewBox=\"0  0 384 512\" style={isMobile? {width: '200px'} : {width: '500px'}} fontSize=\"inherit\"/>\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" style={isMobile? { flexDirection: 'column'} : { flexDirection: 'row' }}>\n          <Flex>\n          <PoolTabButtons\n              stakedOnly={stakedOnly}\n              setStakedOnly={setStakedOnly}\n              hasStakeInFinishedPools={hasStakeInFinishedPools}\n              viewMode={viewMode}\n              setViewMode={setViewMode}\n          />\n         </Flex>\n         <Flex alignItems=\"center\" justifyContent=\"space-between\" marginTop=\"16px\">\n        <SearchSortContainer>\n            {/* <PoolControls>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </PoolControls> */}\n            <PoolControls>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" marginRight=\"12px\" marginTop=\"12px\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </PoolControls>\n          </SearchSortContainer>\n          </Flex>\n          </Flex>\n        {/* \n        <div>\n          <Flex justifyContent=\"space-between\" style={{ margin: '20px' }}>\n            <Flex flexDirection=\"column\" mr={['8px', 0]}>\n              <Text color=\"text\" fontSize=\"24px\" bold>\n                \n              </Text>\n              <Text color=\"text\" fontSize=\"16px\">\n                {t(' Stake Liquidity Pool tokens to earn')}\n              </Text>\n            </Flex>\n          </Flex>\n        */}\n\n        { !showFinishedPools && !showUpcomingPools && (<div>\n          {/* <Text bold fontSize=\"20px\" marginLeft=\"24px\" paddingBottom=\"24px\">\n            {' '}\n            Stake tokens to earn{' '}\n          </Text> */}\n          <StyledHr style={{ marginTop: '35px'}}/>\n          \n          {/* Header title for Active Pools   */}\n          \n          <Flex justifyContent=\"space-between\" style={{ margin: '20px' }}>\n              <Flex flexDirection=\"column\" mr={['8px', 0]}>\n                  <Heading scale=\"md\" color=\"text\">\n                    {t('Stake tokens to earn')}\n                  </Heading>\n              </Flex>\n          </Flex>\n        </div>)}\n\n        {/* UPCOMING  */}\n        {showUpcomingPools && (\n          <>\n            <StyledHr style={{ marginTop: '35px'}}/>\n            \n            <Flex justifyContent=\"space-between\" style={{ margin: '20px' }}>\n              <Flex flexDirection=\"column\" mr={['8px', 0]}>\n                  <Heading scale=\"md\" color=\"text\">\n                    {t('These pools are coming in the near future. Stay tuned.')}\n                  </Heading>\n              </Flex>\n            </Flex>\n          </>\n        )}\n        \n\n        {/* ENDED  */}\n        {showFinishedPools && (\n          <>\n            <StyledHr style={{ marginTop: '35px'}}/>\n\n            <Flex justifyContent=\"space-between\" style={{ margin: '20px' }}>\n              <Flex flexDirection=\"column\" mr={['8px', 0]}>\n                  <Heading scale=\"md\" color=\"text\">\n                    {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n                  </Heading>\n              </Flex>\n            </Flex>\n          </>\n        )}\n\n        {/* viewMode === ViewMode.CARD ? cardLayout : tableLayout */} \n        {cardLayout}\n        \n        <div ref={loadMoreRef} />\n        {/* <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/3d-syrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={192}\n          height={184.5}\n        /> */}\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch, HashRouter } from 'react-router-dom'\nimport { ResetCSS } from '@sparkpointio/sparkswap-uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollCoreFarmData, useFetchProfile, usePollBlockNumber } from 'state/hooks'\nimport { RedirectToPools } from 'views/Farms/Redirects'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport Pools from './views/Pools'\nimport history from './routerHistory'\n\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <HashRouter>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n             <Route path=\"/\" exact>\n               <Pools />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            {/* Redirect */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n            <Route path=\"/\" component={RedirectToPools} />\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n    </HashRouter>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider } from '@sparkpointio/sparkswap-uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { getLibrary } from 'utils/web3React'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeContextProvider>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeContextProvider>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeContext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  /* {\n    pid: 0,\n    lpSymbol: 'CAKE',\n    lpAddresses: {\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  */\n  {\n    pid: 0,\n    lpSymbol: 'SRK',\n    lpAddresses: {\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n      56: '0x1be0843bc76f91387a2a6b941c07b0ca09f0b983',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 251,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 252,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n  {\n    pid: 415,\n    lpSymbol: 'DG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8b2824d57eebf07f5aff5c91fa67ed7c501a9f43',\n    },\n    token: tokens.$dg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 414,\n    lpSymbol: 'WOO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x89eE0491CE55d2f7472A97602a95426216167189',\n    },\n    token: tokens.woo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 413,\n    lpSymbol: 'HTB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2a995d355d5df641e878c0f366685741fd18d004',\n    },\n    token: tokens.htb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 351,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7275278C94b5e20708380561C4Af98F38dDC6374',\n    },\n    token: tokens.jgn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 337,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x24d3B0eD4C444A4f6882d527cBF67aDc8c026582',\n    },\n    token: tokens.dft,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 412,\n    lpSymbol: 'HAI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x289841bFb694767bCb56fBc7B741aB4B4D97D490',\n    },\n    token: tokens.hai,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 411,\n    lpSymbol: 'O3-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7759283571Da8c0928786A96AE601944E10461Ff',\n    },\n    token: tokens.o3,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 410,\n    lpSymbol: 'AMPL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6e98beb694ff1cdb1ee130edd2b21b0298683d58',\n    },\n    token: tokens.ampl,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 343,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3c2c77353E2F6AC1578807b6b2336Bf3a3CbB014',\n    },\n    token: tokens.oddz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 409,\n    lpSymbol: 'ETH-USDC LP',\n    lpAddresses: {\n      97: '',\n      56: '0xEa26B78255Df2bBC31C1eBf60010D78670185bD0',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.usdc,\n  },\n  {\n    pid: 408,\n    lpSymbol: 'BTCB-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD171B26E4484402de70e3Ea256bE5A2630d7e88D',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 347,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb8b4383B49d451BBeA63BC4421466E1086da6f18',\n    },\n    token: tokens.bondly,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 407,\n    lpSymbol: 'MARSH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x222f93187f15f354d41ff6a7703ef7e18cdd5103',\n    },\n    token: tokens.marsh,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 406,\n    lpSymbol: 'BORING-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDfA808Da5CFB9ABA5Fb3748FF85888F79174F378',\n    },\n    token: tokens.boring,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 405,\n    lpSymbol: 'MBOX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8FA59693458289914dB0097F5F366d771B7a7C3F',\n    },\n    token: tokens.mbox,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 404,\n    lpSymbol: 'ATA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xef7767677867552cfa699148b96a03358a9be779',\n    },\n    token: tokens.ata,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 403,\n    lpSymbol: 'MX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x41f049d990d38305504631c9835f6f856bf1ba67',\n    },\n    token: tokens.mx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 402,\n    lpSymbol: 'bCFX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA0387eBeA6be90849c2261b911fBBD52B4C9eAC4',\n    },\n    token: tokens.bcfx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 401,\n    lpSymbol: 'QKC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8853e3309a31583ea438f7704681f46f0d4d909b',\n    },\n    token: tokens.qkc,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 400,\n    lpSymbol: 'KTN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x48028de4a9b0d3d91180333d796021ec7757ba1b',\n    },\n    token: tokens.ktn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 399,\n    lpSymbol: 'MTRG-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4dcA4D427511bC327639b222DA18FA5e334F686F',\n    },\n    token: tokens.mtrg,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 398,\n    lpSymbol: 'SWG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x226af4e918fcf3e62e5eeec867a3e78aaa7bb01d',\n    },\n    token: tokens.swg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 397,\n    lpSymbol: 'TUSD-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2e28b9b74d6d99d4697e913b82b41ef1cac51c6c',\n    },\n    token: tokens.tusd,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 396,\n    lpSymbol: 'VRT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xef5212ada83ec2cc105c409df10b8806d20e3b35',\n    },\n    token: tokens.vrt,\n    quoteToken: tokens.wbnb,\n  },\n  // {\n  //   pid: 395,\n  //   lpSymbol: 'EZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x51bf99bbae59b67e5ce2fa9c17b683384773f8b3',\n  //   },\n  //   token: tokens.ez,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 394,\n  //   lpSymbol: 'KALM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc74f7243766269dec5b85b0ef4af186e909c1b06',\n  //   },\n  //   token: tokens.kalm,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 393,\n  //   lpSymbol: 'pOPEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1090c996fd1490d15dd7906322ee676a5cc3cf82',\n  //   },\n  //   token: tokens.popen,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 335,\n  //   lpSymbol: 'LIEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xa4963B38b271c0D714593063497Fc786Fa4029Ce',\n  //   },\n  //   token: tokens.lien,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 392,\n  //   lpSymbol: 'WELL-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1d94cb25895abd6ccfef863c53372bb462aa6b86',\n  //   },\n  //   token: tokens.well,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 391,\n  //   lpSymbol: 'DERI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xdc7188ac11e124b1fa650b73ba88bf615ef15256',\n  //   },\n  //   token: tokens.deri,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 390,\n  //   lpSymbol: 'CHR-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6045931e511ef7e53a4a817f971e0ca28c758809',\n  //   },\n  //   token: tokens.chr,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 389,\n  //   lpSymbol: 'CAKE-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\n  //   },\n  //   token: tokens.cake,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 388,\n  //   lpSymbol: 'CYC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xecf30fbecfa642012f54212a3be92eef1e48edac',\n  //   },\n  //   token: tokens.cyc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 387,\n  //   lpSymbol: 'XEND-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcecfc2789af72ed151589a96a59f3a1abc65c3b5',\n  //   },\n  //   token: tokens.xend,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 296,\n  //   lpSymbol: 'HGET-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF74ee1e10e097dc326a2ad004F9Cc95CB71088d3',\n  //   },\n  //   token: tokens.hget,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 386,\n  //   lpSymbol: 'HOTCROSS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xf23bad605e94de0e3b60c9718a43a94a5af43915',\n  //   },\n  //   token: tokens.hotcross,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 385,\n  //   lpSymbol: 'RFOX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8e04b3972b5c25766c681dfd30a8a1cbf6dcc8c1',\n  //   },\n  //   token: tokens.rfox,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 384,\n  //   lpSymbol: 'WMASS-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xec95ff6281c3ad8e27372fa6675eb337640b8e5e',\n  //   },\n  //   token: tokens.wmass,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 383,\n  //   lpSymbol: 'UBXT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8d3ff27d2ad6a9556b7c4f82f4d602d20114bc90',\n  //   },\n  //   token: tokens.ubxt,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 381,\n  //   lpSymbol: 'BTR-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbc7ac609fa730239190a70952e64ee1dfc2530ac',\n  //   },\n  //   token: tokens.btr,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 380,\n  //   lpSymbol: 'τDOGE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2030845Ce7d4224523fd2F03Ca20Afe4aAD1D890',\n  //   },\n  //   token: tokens.τdoge,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 379,\n  //   lpSymbol: 'PMON-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcdb0016d97fd0e7ec2c3b78aa4786cbd8e19c14c',\n  //   },\n  //   token: tokens.pmon,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 378,\n  //   lpSymbol: 'ONE-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4d057f769d930eafd597b49d6fb2e1009a73a702',\n  //   },\n  //   token: tokens.one,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 377,\n  //   lpSymbol: 'FINE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc309a6d2f1537922e06f15aa2eb21caa1b2eedb6',\n  //   },\n  //   token: tokens.fine,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 376,\n  //   lpSymbol: 'DOGE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xac109c8025f272414fd9e2faa805a583708a017f',\n  //   },\n  //   token: tokens.doge,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 310,\n  //   lpSymbol: 'bMXX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc20A92a1424b29b78DFaF92FD35D4cf8A06419B4',\n  //   },\n  //   token: tokens.bmxx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 375,\n  //   lpSymbol: 'OIN-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6a00e41561ac36a78dba1d09091b0f00c4e53724',\n  //   },\n  //   token: tokens.oin,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 374,\n  //   lpSymbol: 'HYFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0716725d78081a9e0e1ff81516f5415b399e274d',\n  //   },\n  //   token: tokens.hyfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 373,\n  //   lpSymbol: 'KUN-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xea61020e5a128d2bec67d48f7cfbe3408db7e391',\n  //   },\n  //   token: tokens.kun,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 372,\n  //   lpSymbol: 'KUN-QSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4eafbf68a2d50291ffd163d4e00ad0f040aae707',\n  //   },\n  //   token: tokens.kun,\n  //   quoteToken: tokens.qsd,\n  // },\n  // {\n  //   pid: 371,\n  //   lpSymbol: 'MATH-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb7cada0f120ca46745a024e6b9fe907b2fe10cf3',\n  //   },\n  //   token: tokens.math,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 370,\n  //   lpSymbol: 'mCOIN-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbcf01a42f6bc42f3cfe81b05519565044d65d22a',\n  //   },\n  //   token: tokens.mcoin,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 369,\n  //   lpSymbol: 'WIN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x894bd57afd8efc93d9171cb585d11d0977557425',\n  //   },\n  //   token: tokens.win,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 368,\n  //   lpSymbol: 'TRX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3cd338c3bb249b6b3c55799f85a589febbbff9dd',\n  //   },\n  //   token: tokens.trx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 367,\n  //   lpSymbol: 'BTT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x946696344e7d4346b223e1cf77035a76690d6a73',\n  //   },\n  //   token: tokens.btt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 366,\n  //   lpSymbol: 'PNT-pBTC LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xdaa89d335926628367b47852989bb22ee62ca5de',\n  //   },\n  //   token: tokens.pnt,\n  //   quoteToken: tokens.pbtc,\n  // },\n  // {\n  //   pid: 311,\n  //   lpSymbol: 'xMARK-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xAa40f1AC20AAFcFEE8595Da606D78C503C7e70A3',\n  //   },\n  //   token: tokens.xmark,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 365,\n  //   lpSymbol: 'BTCB-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xf45cd219aef8618a92baa7ad848364a158a24f33',\n  //   },\n  //   token: tokens.btcb,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 364,\n  //   lpSymbol: 'LMT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8271d7eafeeb8f24d7c9fe1acce2ae20611972e5',\n  //   },\n  //   token: tokens.lmt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 363,\n  //   lpSymbol: 'DFD-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x029d66f9c0469450b7b4834b8ddc6a1118cec3e1',\n  //   },\n  //   token: tokens.dfd,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 362,\n  //   lpSymbol: 'ALPACA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7752e1fa9f3a2e860856458517008558deb989e3',\n  //   },\n  //   token: tokens.alpaca,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 361,\n  //   lpSymbol: 'τBTC-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8046fa66753928F35f7Db23ae0188ee6743C2FBA',\n  //   },\n  //   token: tokens.τbtc,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 304,\n  //   lpSymbol: 'SWINGBY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4Fd6D315bEf387fAD2322fbc64368fC443F0886D',\n  //   },\n  //   token: tokens.swingby,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 360,\n  //   lpSymbol: 'XED-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xa7A0b605343dF36B748FF4B5f7578b3F2D0651CE',\n  //   },\n  //   token: tokens.xed,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 359,\n  //   lpSymbol: 'HAKKA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2C624C9Ecf16Cb81aB85cC2C0B0c5e12A09AFDa6',\n  //   },\n  //   token: tokens.hakka,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 358,\n  //   lpSymbol: 'CGG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0604471c532F9fEBAD3E37190B667f44BD0894b3',\n  //   },\n  //   token: tokens.cgg,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 357,\n  //   lpSymbol: 'SUTER-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2d5DB889392Bc3c8B023A8631ca230A033eEA1B8',\n  //   },\n  //   token: tokens.suter,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 356,\n  //   lpSymbol: 'bROOBEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x950FD020F8E4B8C57285EC7020b7a204348dadFa',\n  //   },\n  //   token: tokens.broobee,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 355,\n  //   lpSymbol: 'HZN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xDc9a574b9B341D4a98cE29005b614e1E27430E74',\n  //   },\n  //   token: tokens.hzn,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 354,\n  //   lpSymbol: 'ALPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4cC442220BE1cE560C1f2573f8CA8f460B3E4172',\n  //   },\n  //   token: tokens.alpa,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 353,\n  //   lpSymbol: 'PERL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x61010e6CbA3b56ba47E9dFd56Da682daCFe76131',\n  //   },\n  //   token: tokens.perl,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 352,\n  //   lpSymbol: 'TLM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE6b421a4408c82381b226Ab5B6F8C4b639044359',\n  //   },\n  //   token: tokens.tlm,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 350,\n  //   lpSymbol: 'EPS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xddE420cbB3794ebD8FFC3Ac69F9c78e5d1411870',\n  //   },\n  //   token: tokens.eps,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 349,\n  //   lpSymbol: 'ARPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9730c791743300E9f984C9264395ce705A55Da7c',\n  //   },\n  //   token: tokens.arpa,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 348,\n  //   lpSymbol: 'ITAM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd02DA76c813b9cd4516eD50442923E625f90228f',\n  //   },\n  //   token: tokens.itam,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 346,\n  //   lpSymbol: 'TKO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xFFd4B200d3C77A0B691B5562D804b3bd54294e6e',\n  //   },\n  //   token: tokens.tko,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 345,\n  //   lpSymbol: 'APYS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x510b29a93ebf098f3fC24A16541aAA0114D07056',\n  //   },\n  //   token: tokens.apys,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 344,\n  //   lpSymbol: 'HOO-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3e42C1f7239231E3752B507764445dd8e6A570d5',\n  //   },\n  //   token: tokens.hoo,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 342,\n  //   lpSymbol: 'EASY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x20c6De8983Fb2D641c55004646aEF40b4EA66E18',\n  //   },\n  //   token: tokens.easy,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 341,\n  //   lpSymbol: 'NRV-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE482249Cd295C0d1e9D2baAEE71e66de21024C68',\n  //   },\n  //   token: tokens.nrv,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 340,\n  //   lpSymbol: 'DEGO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF1Ec67fA1881796BFf63Db3E1A301cE9cb787Fad',\n  //   },\n  //   token: tokens.dego,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 339,\n  //   lpSymbol: 'GUM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x28Ea5894D4DBbE90bB58eE3BAB2869387d711c87',\n  //   },\n  //   token: tokens.gum,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 338,\n  //   lpSymbol: 'pBTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0362ba706DFE8ED12Ec1470aB171d8Dcb1C72B8D',\n  //   },\n  //   token: tokens.pbtc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 336,\n  //   lpSymbol: 'SWTH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x123D475E13aA54A43a7421d94CAa4459dA021c77',\n  //   },\n  //   token: tokens.swth,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 334,\n  //   lpSymbol: 'ZIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6A97867a4b7Eb7646ffB1F359ad582e9903aa1C2',\n  //   },\n  //   token: tokens.zil,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 333,\n  //   lpSymbol: 'pCWS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6615CE60D71513aA4849269dD63821D324A23F8C',\n  //   },\n  //   token: tokens.pcws,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 332,\n  //   lpSymbol: 'bBADGER-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5A58609dA96469E9dEf3fE344bC39B00d18eb9A5',\n  //   },\n  //   token: tokens.bbadger,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 331,\n  //   lpSymbol: 'bDIGG-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x81d776C90c89B8d51E9497D58338933127e2fA80',\n  //   },\n  //   token: tokens.bdigg,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 330,\n  //   lpSymbol: 'LTO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xa5Bb44c6F5fD9B836E5a654c8AbbCCc96A15deE5',\n  //   },\n  //   token: tokens.lto,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 329,\n  //   lpSymbol: 'MIR-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x89666d026696660e93Bf6edf57B71A68615768B7',\n  //   },\n  //   token: tokens.mir,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 328,\n  //   lpSymbol: 'TRADE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8F6baf368E7A4f6e2C9c995f22702d5e654A0237',\n  //   },\n  //   token: tokens.trade,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 327,\n  //   lpSymbol: 'DUSK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x678EDb8B268e73dB57b7694c163e1dc296b6e219',\n  //   },\n  //   token: tokens.dusk,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 326,\n  //   lpSymbol: 'BIFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3f1A9f3D9aaD8bD339eD4853F345d2eF89fbfE0c',\n  //   },\n  //   token: tokens.bifi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 325,\n  //   lpSymbol: 'TXL-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1434BB50196A0C7eA825940b1DFd8aAd25d79817',\n  //   },\n  //   token: tokens.txl,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 324,\n  //   lpSymbol: 'COS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe98585bBb2dc81854fF100A3d9D7B0F53E0dafEd',\n  //   },\n  //   token: tokens.cos,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 323,\n  //   lpSymbol: 'BUNNY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5aFEf8567414F29f0f927A0F2787b188624c10E2',\n  //   },\n  //   token: tokens.bunny,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 322,\n  //   lpSymbol: 'ALICE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcAD7019D6d84a3294b0494aEF02e73BD0f2572Eb',\n  //   },\n  //   token: tokens.alice,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 321,\n  //   lpSymbol: 'FOR-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE60B4e87645093A42fa9dcC5d0C8Df6E67f1f9d2',\n  //   },\n  //   token: tokens.for,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 320,\n  //   lpSymbol: 'BUX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x222C3CbB89647bF77822435Bd4c234A04272A77A',\n  //   },\n  //   token: tokens.bux,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 319,\n  //   lpSymbol: 'NULS-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x853784B7BDe87d858555715c0123374242db7943',\n  //   },\n  //   token: tokens.nuls,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 318,\n  //   lpSymbol: 'BELT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF3Bc6FC080ffCC30d93dF48BFA2aA14b869554bb',\n  //   },\n  //   token: tokens.belt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 317,\n  //   lpSymbol: 'RAMP-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE834bf723f5bDff34a5D1129F3c31Ea4787Bc76a',\n  //   },\n  //   token: tokens.ramp,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 316,\n  //   lpSymbol: 'BFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x153Ad7d25B0b810497483d0cEE8AF42Fc533FeC8',\n  //   },\n  //   token: tokens.bfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 315,\n  //   lpSymbol: 'DEXE-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3578B1f9BCE98D2F4D293b422d8850fdf48B1f21',\n  //   },\n  //   token: tokens.dexe,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 314,\n  //   lpSymbol: 'BEL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x69DEE989c30b5fFe40867f5FC14F00E4bCE7B681',\n  //   },\n  //   token: tokens.bel,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 313,\n  //   lpSymbol: 'TPT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6D0c831254221ba121fB53fb44Df289A6558867d',\n  //   },\n  //   token: tokens.tpt,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 312,\n  //   lpSymbol: 'WATCH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x13321AcfF4A27f3d2bcA64b8bEaC6e5FdAAAf12C',\n  //   },\n  //   token: tokens.watch,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 309,\n  //   lpSymbol: 'IOTX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc13aA76AAc067c86aE38028019F414D731b3D86A',\n  //   },\n  //   token: tokens.iotx,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 308,\n  //   lpSymbol: 'BOR-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe094c686aD6cDda57b9564457F541FBF099B948A',\n  //   },\n  //   token: tokens.bor,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 307,\n  //   lpSymbol: 'bOPEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc7A9c2af263ebB86139Cca9349e49b17129Ba033',\n  //   },\n  //   token: tokens.bopen,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 306,\n  //   lpSymbol: 'SUSHI-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x16aFc4F2Ad82986bbE2a4525601F8199AB9c832D',\n  //   },\n  //   token: tokens.sushi,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 305,\n  //   lpSymbol: 'DODO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA9986Fcbdb23c2E8B11AB40102990a08f8E58f06',\n  //   },\n  //   token: tokens.dodo,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 303,\n  //   lpSymbol: 'BRY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x21dD71aB78EDE3033c976948f769D506E4F489eE',\n  //   },\n  //   token: tokens.bry,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 302,\n  //   lpSymbol: 'ZEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8e799cB0737525CeB8A6C6Ad07f748535fF6377B',\n  //   },\n  //   token: tokens.zee,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 301,\n  //   lpSymbol: 'SWGb-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x856f9AD94cA8680B899214Bb1EB3d235a3C33Afe',\n  //   },\n  //   token: tokens.swgb,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 300,\n  //   lpSymbol: 'COMP-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x37908620dEf1491Dd591b5a2d16022A33cDDA415',\n  //   },\n  //   token: tokens.comp,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 299,\n  //   lpSymbol: 'SFP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x942b294e59a8c47a0F7F20DF105B082710F7C305',\n  //   },\n  //   token: tokens.sfp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 298,\n  //   lpSymbol: 'LINA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC5768c5371568Cf1114cddD52CAeD163A42626Ed',\n  //   },\n  //   token: tokens.lina,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 297,\n  //   lpSymbol: 'LIT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1F37d4226d23d09044B8005c127C0517BD7e94fD',\n  //   },\n  //   token: tokens.lit,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 295,\n  //   lpSymbol: 'BDO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4288706624e3dD839b069216eB03B8B9819C10d2',\n  //   },\n  //   token: tokens.bdo,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 294,\n  //   lpSymbol: 'EGLD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcD68856b6E72E99b5eEaAE7d41Bb4A3b484c700D',\n  //   },\n  //   token: tokens.egld,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 293,\n  //   lpSymbol: 'UST-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x05faf555522Fa3F93959F86B41A3808666093210',\n  //   },\n  //   token: tokens.ust,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 292,\n  //   lpSymbol: 'mAMZN-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC05654C66756eBB82c518598c5f1ea1a0199a563',\n  //   },\n  //   token: tokens.mamzn,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 291,\n  //   lpSymbol: 'mGOOGL-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA3BfBbAd526C6B856B1Fdf73F99BCD894761fbf3',\n  //   },\n  //   token: tokens.mgoogl,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 290,\n  //   lpSymbol: 'mNFLX-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x91417426C3FEaA3Ca795921eB9FdD9715ad92537',\n  //   },\n  //   token: tokens.mnflx,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 289,\n  //   lpSymbol: 'mTSLA-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xEc6b56a736859AE8ea4bEdA16279Ecd8c60dA7EA',\n  //   },\n  //   token: tokens.mtsla,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 288,\n  //   lpSymbol: 'wSOTE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7653D2c31440f04d2c6520D482dC5DbD7650f70a',\n  //   },\n  //   token: tokens.wsote,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 287,\n  //   lpSymbol: 'FRONT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC6b668548aA4A56792e8002A920d3159728121D5',\n  //   },\n  //   token: tokens.front,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 286,\n  //   lpSymbol: 'Helmet-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC869A9943b702B03770B6A92d2b2d25cf3a3f571',\n  //   },\n  //   token: tokens.helmet,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 285,\n  //   lpSymbol: 'BTCST-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB2678C414ebC63c9CC6d1a0fC45f43E249B50fdE',\n  //   },\n  //   token: tokens.btcst,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 284,\n  //   lpSymbol: 'LTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n  //   },\n  //   token: tokens.ltc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 283,\n  //   lpSymbol: 'USDC-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\n  //   },\n  //   token: tokens.usdc,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 282,\n  //   lpSymbol: 'DAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489',\n  //   },\n  //   token: tokens.dai,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 281,\n  //   lpSymbol: 'BSCX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x47C42b0A056A9C6e9C65b9Ef79020Af518e767A5',\n  //   },\n  //   token: tokens.bscx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 280,\n  //   lpSymbol: 'TEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1B415C3ec8095AfBF9d78882b3a6263c4ad141B5',\n  //   },\n  //   token: tokens.ten,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 279,\n  //   lpSymbol: 'bALBT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x24EB18bA412701f278B172ef96697c4622b19da6',\n  //   },\n  //   token: tokens.balbt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 278,\n  //   lpSymbol: 'REEF-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd63b5CecB1f40d626307B92706Df357709D05827',\n  //   },\n  //   token: tokens.reef,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 277,\n  //   lpSymbol: 'Ditto-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8645148dE4E339964bA480AE3478653b5bc6E211',\n  //   },\n  //   token: tokens.ditto,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 276,\n  //   lpSymbol: 'VAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x133ee93FE93320e1182923E1a640912eDE17C90C',\n  //   },\n  //   token: tokens.vai,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 275,\n  //   lpSymbol: 'BLK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x356Dd24BfF8e23BdE0430f00ad0C290E33438bD7',\n  //   },\n  //   token: tokens.blink,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 274,\n  //   lpSymbol: 'UNFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x44EA47F2765fd5D26b7eF0222736AD6FD6f61950',\n  //   },\n  //   token: tokens.unfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 273,\n  //   lpSymbol: 'HARD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x73566ca86248bD12F0979793e4671e99a40299A7',\n  //   },\n  //   token: tokens.hard,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 272,\n  //   lpSymbol: 'CTK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x460b4193Ec4C1a17372Aa5FDcd44c520ba658646',\n  //   },\n  //   token: tokens.ctk,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 271,\n  //   lpSymbol: 'SXP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD8E2F8b6Db204c405543953Ef6359912FE3A88d6',\n  //   },\n  //   token: tokens.sxp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 270,\n  //   lpSymbol: 'INJ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1BdCebcA3b93af70b58C41272AEa2231754B23ca',\n  //   },\n  //   token: tokens.inj,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 269,\n  //   lpSymbol: 'FIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD9bCcbbbDFd9d67BEb5d2273102CE0762421D1e3',\n  //   },\n  //   token: tokens.fil,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 268,\n  //   lpSymbol: 'UNI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\n  //   },\n  //   token: tokens.uni,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 267,\n  //   lpSymbol: 'YFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xCE383277847f8217392eeA98C5a8B4a7D27811b0',\n  //   },\n  //   token: tokens.yfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 266,\n  //   lpSymbol: 'ATOM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x468b2DC8DC75990eE3E9dc0648965Ad6294E7914',\n  //   },\n  //   token: tokens.atom,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 265,\n  //   lpSymbol: 'XRP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x03F18135c44C64ebFdCBad8297fe5bDafdBbdd86',\n  //   },\n  //   token: tokens.xrp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 264,\n  //   lpSymbol: 'USDT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n  //   },\n  //   token: tokens.usdt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 263,\n  //   lpSymbol: 'ALPHA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xACF47CBEaab5c8A6Ee99263cfE43995f89fB3206',\n  //   },\n  //   token: tokens.alpha,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 262,\n  //   lpSymbol: 'BTCB-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\n  //   },\n  //   token: tokens.btcb,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 261,\n  //   lpSymbol: 'ETH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n  //   },\n  //   token: tokens.eth,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 260,\n  //   lpSymbol: 'XVS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7EB5D86FD78f3852a3e0e064f2842d45a3dB6EA2',\n  //   },\n  //   token: tokens.xvs,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 259,\n  //   lpSymbol: 'TWT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3DcB1787a95D2ea0Eb7d00887704EeBF0D79bb13',\n  //   },\n  //   token: tokens.twt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 258,\n  //   lpSymbol: 'USDT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\n  //   },\n  //   token: tokens.usdt,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 257,\n  //   lpSymbol: 'LINK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\n  //   },\n  //   token: tokens.link,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 256,\n  //   lpSymbol: 'EOS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB6e34b5C65Eda51bb1BD4ea5F79d385Fb94b9504',\n  //   },\n  //   token: tokens.eos,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 255,\n  //   lpSymbol: 'DOT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\n  //   },\n  //   token: tokens.dot,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 254,\n  //   lpSymbol: 'BAND-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x168B273278F3A8d302De5E879aA30690B7E6c28f',\n  //   },\n  //   token: tokens.band,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 253,\n  //   lpSymbol: 'ADA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\n  //   },\n  //   token: tokens.ada,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // /**\n  //  * V2 farms, set to be removed once unstaked\n  //  */\n  // {\n  //   pid: 139,\n  //   lpSymbol: 'CAKE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xFB7E9FE9D13561AdA7131Fa746942a14F7dd4Cf6',\n  //   },\n  //   token: tokens.cake,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 250,\n  //   lpSymbol: 'τBTC-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xFD09CDbd6A7dCAd8AC47df4F139443a729264763',\n  //   },\n  //   token: tokens.τbtc,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 193,\n  //   lpSymbol: 'SWINGBY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA0e3F72BAFcc5d52F0052a39165FD40D3d4d34Fc',\n  //   },\n  //   token: tokens.swingby,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 249,\n  //   lpSymbol: 'XED-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xBbE20dA99db94Fa1077F1C9A5d256761dAf89C60',\n  //   },\n  //   token: tokens.xed,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 248,\n  //   lpSymbol: 'HAKKA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9ed1ca73AA8F1ccdc3c3a174E77014f8900411CE',\n  //   },\n  //   token: tokens.hakka,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 247,\n  //   lpSymbol: 'CGG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB9aA8B0d67DE546aaa82091065a64B7F1C4B1a1F',\n  //   },\n  //   token: tokens.cgg,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 246,\n  //   lpSymbol: 'SUTER-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6f41c9226fa89a552009c3AC087BA74b83772C52',\n  //   },\n  //   token: tokens.suter,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 245,\n  //   lpSymbol: 'bROOBEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5Ac5184eA06dE24ce8ED2133f58b4Aa2CEd2dC3b',\n  //   },\n  //   token: tokens.broobee,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 244,\n  //   lpSymbol: 'HZN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF7fcD7e7B3853bf59bCA9183476F218ED07eD3B0',\n  //   },\n  //   token: tokens.hzn,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 243,\n  //   lpSymbol: 'ALPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xBB41898A3051A6b6D4A36a1c43e906b05799B744',\n  //   },\n  //   token: tokens.alpa,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 242,\n  //   lpSymbol: 'PERL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB1C2e08A992a619DA570425E78828A8508654f4F',\n  //   },\n  //   token: tokens.perl,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 241,\n  //   lpSymbol: 'TLM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x25f15Cb3D3B3753702E1d5c4E5f6F0720b197843',\n  //   },\n  //   token: tokens.tlm,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 240,\n  //   lpSymbol: 'JGN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8fD5ca41B2B44e4713590584f97c85f9FF59F00D',\n  //   },\n  //   token: tokens.jgn,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 239,\n  //   lpSymbol: 'EPS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x43bc6C256240e657Ad84aFb86825E21B48FEDe78',\n  //   },\n  //   token: tokens.eps,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 238,\n  //   lpSymbol: 'ARPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD55e5A7b886aE9657b95641c6A7dc5A662EcAbF3',\n  //   },\n  //   token: tokens.arpa,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 237,\n  //   lpSymbol: 'ITAM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3e78b0eD211a49e263fF9b3F0B410932a021E368',\n  //   },\n  //   token: tokens.itam,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 236,\n  //   lpSymbol: 'BONDLY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2205a6424ec4D74a7588450fB71ffd0C4A3Ead65',\n  //   },\n  //   token: tokens.bondly,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 235,\n  //   lpSymbol: 'TKO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc43EdF4a7e89160135C2553E9868446fef9C18DD',\n  //   },\n  //   token: tokens.tko,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 234,\n  //   lpSymbol: 'APYS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7A5523f50a80790cAD011167E20bD21056A2f04A',\n  //   },\n  //   token: tokens.apys,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 233,\n  //   lpSymbol: 'HOO-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc12dAD966505443b5aad7b0C55716c13d285B520',\n  //   },\n  //   token: tokens.hoo,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 232,\n  //   lpSymbol: 'ODDZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3B0a7d1030bcDFf45ABB7B03C04110FcCc8095BC',\n  //   },\n  //   token: tokens.oddz,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 231,\n  //   lpSymbol: 'EASY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4b0ec41404a7FF59BaE33C8Dc420804c58B7bF24',\n  //   },\n  //   token: tokens.easy,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 230,\n  //   lpSymbol: 'NRV-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x25dea33a42c7775F6945fae22A8fFBfAC9fB22CD',\n  //   },\n  //   token: tokens.nrv,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 229,\n  //   lpSymbol: 'DEGO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6108aBd546AF17D8f7aFAe59EBfb4A01132A11Bb',\n  //   },\n  //   token: tokens.dego,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 228,\n  //   lpSymbol: 'GUM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA99d1926a3c15DC4Fb83aB3Fafd63B6C3E87CF22',\n  //   },\n  //   token: tokens.gum,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 227,\n  //   lpSymbol: 'pBTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xaccd6673FFc24cD56B080D71384327f78fD92496',\n  //   },\n  //   token: tokens.pbtc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 226,\n  //   lpSymbol: 'DFT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe86d075051f20eb8c741007Cb8e262f4519944ee',\n  //   },\n  //   token: tokens.dft,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 225,\n  //   lpSymbol: 'SWTH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4f6dfFc9795d35dc1D92c2a7B23Cb7d6EF190B33',\n  //   },\n  //   token: tokens.swth,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 224,\n  //   lpSymbol: 'LIEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbe7BDE4aD1c136038Dc9f57ef94d1d16e6F9CbF7',\n  //   },\n  //   token: tokens.lien,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 223,\n  //   lpSymbol: 'ZIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcBDf499db66Df19A66aB48F16C790FF9eE872add',\n  //   },\n  //   token: tokens.zil,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 222,\n  //   lpSymbol: 'pCWS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe3D941e74141311436F82523817EBaa26462967d',\n  //   },\n  //   token: tokens.pcws,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 221,\n  //   lpSymbol: 'bBADGER-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x87Ae7b5c43D4e160cDB9427a78BA87B9503ee37b',\n  //   },\n  //   token: tokens.bbadger,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 220,\n  //   lpSymbol: 'bDIGG-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xfbfa92e037e37F946c0105902640914E3aCe6752',\n  //   },\n  //   token: tokens.bdigg,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 219,\n  //   lpSymbol: 'LTO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF62e92292772F24EAa6B6B8a105c9FC7B8F31EC5',\n  //   },\n  //   token: tokens.lto,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 218,\n  //   lpSymbol: 'MIR-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x905186a70ba3Eb50090d1d0f6914F5460B4DdB40',\n  //   },\n  //   token: tokens.mir,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 217,\n  //   lpSymbol: 'TRADE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x52fCfB6d91Bcf1F1f6d375D0f6c303688b0E8550',\n  //   },\n  //   token: tokens.trade,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 216,\n  //   lpSymbol: 'DUSK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x69773f622cE228Ca7dEd42D8C34Eba8582e85dcA',\n  //   },\n  //   token: tokens.dusk,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 215,\n  //   lpSymbol: 'BIFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x01956F08A55e4FF9775bc01aF6ACb09144564837',\n  //   },\n  //   token: tokens.bifi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 214,\n  //   lpSymbol: 'TXL-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8Ba7eB4056338fd7271E1b7431C8ca3827eF907c',\n  //   },\n  //   token: tokens.txl,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 213,\n  //   lpSymbol: 'COS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xAfB2e729A24629aBdE8E55CEB0e1f899bEe0f70f',\n  //   },\n  //   token: tokens.cos,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 212,\n  //   lpSymbol: 'BUNNY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x283FA8d459Da6e3165B2faF7FA0DD0137503DECf',\n  //   },\n  //   token: tokens.bunny,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 211,\n  //   lpSymbol: 'ALICE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9e1BB5033d47BF8F16FC017CEC0959De7FF00833',\n  //   },\n  //   token: tokens.alice,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 210,\n  //   lpSymbol: 'FOR-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xaBB817B07663521Cf64B006EC9D0FF185b65cfE5',\n  //   },\n  //   token: tokens.for,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 209,\n  //   lpSymbol: 'BUX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7aA4eb5c3bF33e3AD41A47e26b3Bd9b902984610',\n  //   },\n  //   token: tokens.bux,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 208,\n  //   lpSymbol: 'NULS-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xaB46737CAAFbB99999f8b91E4D3C6D4D28E10e05',\n  //   },\n  //   token: tokens.nuls,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 207,\n  //   lpSymbol: 'BELT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x446ff2C0F5350bF2dadD0e0F1AaAA573b362CA6B',\n  //   },\n  //   token: tokens.belt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 206,\n  //   lpSymbol: 'RAMP-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6ED589e69D1927AC45054cBb6E57877879384d6F',\n  //   },\n  //   token: tokens.ramp,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 205,\n  //   lpSymbol: 'BFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xFFA2357f1E6f48d74b1c18c363c3Fe58A032405a',\n  //   },\n  //   token: tokens.bfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 204,\n  //   lpSymbol: 'DEXE-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x534b0b0700c0cfF9785852707f07f60E7C0bc07E',\n  //   },\n  //   token: tokens.dexe,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 203,\n  //   lpSymbol: 'BEL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2013265224E3cB6A53C67130F9Fe53Ae36CFcfdd',\n  //   },\n  //   token: tokens.bel,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 202,\n  //   lpSymbol: 'TPT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC14c2dd21d6aEA3C2068A1F8e58d41D3c28F9288',\n  //   },\n  //   token: tokens.tpt,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 201,\n  //   lpSymbol: 'WATCH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD5fBfFf5faB9d29f614d9bd50AF9b1356C53049C',\n  //   },\n  //   token: tokens.watch,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 200,\n  //   lpSymbol: 'xMARK-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x601aE41C5a65b2089a6af2CcfaF984896a1f52AD',\n  //   },\n  //   token: tokens.xmark,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 199,\n  //   lpSymbol: 'bMXX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x037d38c7DfF5732DAA5f8C05478Eb75cdf24f42B',\n  //   },\n  //   token: tokens.bmxx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 198,\n  //   lpSymbol: 'IOTX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8503462D0d4D3ce73e857bCC7D0Ef1125B0d66fF',\n  //   },\n  //   token: tokens.iotx,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 197,\n  //   lpSymbol: 'BOR-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE0243Ce3b50bd551168cE6964F178507d0a1acD5',\n  //   },\n  //   token: tokens.bor,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 196,\n  //   lpSymbol: 'bOPEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD2FcF98EaeD2c08e9BcA854802C07b93D27913aC',\n  //   },\n  //   token: tokens.bopen,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 195,\n  //   lpSymbol: 'SUSHI-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3BECbb09F622187B544C0892EeDeB58C004117e1',\n  //   },\n  //   token: tokens.sushi,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 194,\n  //   lpSymbol: 'DODO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x220e34306a93002fB7947C9Fc633d6f538bd5032',\n  //   },\n  //   token: tokens.dodo,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 192,\n  //   lpSymbol: 'BRY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC3E303647cbD43EC22989275e7ecFA8952A6BA02',\n  //   },\n  //   token: tokens.bry,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 191,\n  //   lpSymbol: 'ZEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6d1299B158bd13F4B50e951aaBf2Aa501FD87E52',\n  //   },\n  //   token: tokens.zee,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 190,\n  //   lpSymbol: 'SWGb-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd2A5008d555371e97F30B6dD71597b4F1eDB0f20',\n  //   },\n  //   token: tokens.swgb,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 189,\n  //   lpSymbol: 'COMP-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6A55a9176f11c1118f01CBaf6c4033a5c1B22a81',\n  //   },\n  //   token: tokens.comp,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 188,\n  //   lpSymbol: 'SFP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x01744B868fe98dB669EBf4e9CA557462BAA6097c',\n  //   },\n  //   token: tokens.sfp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 187,\n  //   lpSymbol: 'LINA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb923A2Beeb0834528D20b8973A2c69088571aA9E',\n  //   },\n  //   token: tokens.lina,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 186,\n  //   lpSymbol: 'LIT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x41D69Beda3AFF2FFE48E715e2f4248Cb272cFf30',\n  //   },\n  //   token: tokens.lit,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 185,\n  //   lpSymbol: 'HGET-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x239aD1874114B2235485e34b14c48dB73CCA3ffb',\n  //   },\n  //   token: tokens.hget,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 184,\n  //   lpSymbol: 'BDO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF7045D7dE334a3F6c1254f98167b2af130eEA8E6',\n  //   },\n  //   token: tokens.bdo,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 183,\n  //   lpSymbol: 'EGLD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB4670bBEce2D02c4D30786D173985A984686042C',\n  //   },\n  //   token: tokens.egld,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 182,\n  //   lpSymbol: 'UST-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1719606031F1E0B3CCaCa11A2CF550Ef8feBEB0F',\n  //   },\n  //   token: tokens.ust,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 181,\n  //   lpSymbol: 'mAMZN-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2c065E42B464ef38480778B0624A207A09042481',\n  //   },\n  //   token: tokens.mamzn,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 180,\n  //   lpSymbol: 'mGOOGL-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x74d8Dbac5053d31E904a821A3B4C411Bd4dd2307',\n  //   },\n  //   token: tokens.mgoogl,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 179,\n  //   lpSymbol: 'mNFLX-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe1d76359FE4Eb7f0dAd1D719256c22890864718E',\n  //   },\n  //   token: tokens.mnflx,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 178,\n  //   lpSymbol: 'mTSLA-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x36285DDD149949f366b5aFb3f41Cea71d35B8c9e',\n  //   },\n  //   token: tokens.mtsla,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 177,\n  //   lpSymbol: 'wSOTE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe5909de3822d589c220Fb4FA1660A0Fd251Fa87d',\n  //   },\n  //   token: tokens.wsote,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 176,\n  //   lpSymbol: 'FRONT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x84Df48B3e900C79539F6c523D6F528802BeAa713',\n  //   },\n  //   token: tokens.front,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 175,\n  //   lpSymbol: 'Helmet-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD09648792d7e77523ae311Fa5A8F38E4684A5f15',\n  //   },\n  //   token: tokens.helmet,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 174,\n  //   lpSymbol: 'BTCST-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xf967845A6D30C44b555C49C50530076dF5D7fd75',\n  //   },\n  //   token: tokens.btcst,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 173,\n  //   lpSymbol: 'LTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x286E8d71722c585c9A82876B1B2FB4dEe9fc536E',\n  //   },\n  //   token: tokens.ltc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 172,\n  //   lpSymbol: 'USDC-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x05FC2ac8a4FA697501087C916c87b8a5dc4f7b46',\n  //   },\n  //   token: tokens.usdc,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 171,\n  //   lpSymbol: 'DAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xdaFE10aA3AB6758596aDAC70f6873C49F5a9bf86',\n  //   },\n  //   token: tokens.dai,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 170,\n  //   lpSymbol: 'BSCX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5fE5394BBc394345737b8e6e48be2804E89eC0eB',\n  //   },\n  //   token: tokens.bscx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 169,\n  //   lpSymbol: 'TEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x003C4d60de42eAD30739dD204BD153fE69E20Fb2',\n  //   },\n  //   token: tokens.ten,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 168,\n  //   lpSymbol: 'bALBT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1B8ab50d894CfE793B44057F681A950E87Bd0331',\n  //   },\n  //   token: tokens.balbt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 167,\n  //   lpSymbol: 'REEF-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x074ed2De503580887073A0F788E035C0fbe13F48',\n  //   },\n  //   token: tokens.reef,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 166,\n  //   lpSymbol: 'Ditto-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb33D432eACe45DF62F0145228B550b214DCaA6D4',\n  //   },\n  //   token: tokens.ditto,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 165,\n  //   lpSymbol: 'VAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9d95063661fa34B67E0Be0cc71Cf92fc6126aF37',\n  //   },\n  //   token: tokens.vai,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 164,\n  //   lpSymbol: 'BLK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xdA5a79fFe24739876a52AEF0d419aBB3b2517922',\n  //   },\n  //   token: tokens.blink,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 163,\n  //   lpSymbol: 'UNFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x029f944CD3afa7c229122b19c706d8B7c01e062a',\n  //   },\n  //   token: tokens.unfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 162,\n  //   lpSymbol: 'HARD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x158e337e7Dcfcd8FC512840208BB522d122bB19d',\n  //   },\n  //   token: tokens.hard,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 161,\n  //   lpSymbol: 'CTK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcbb3fCE7134aF9ef2f3DCe0EAE96db68961b1337',\n  //   },\n  //   token: tokens.ctk,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 160,\n  //   lpSymbol: 'SXP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6294D8518b7321dc22E32AA907A89B1DAfc1aDbB',\n  //   },\n  //   token: tokens.sxp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 159,\n  //   lpSymbol: 'INJ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0444712EE8DFF8913B2b44CB1D2a0273b4CDaBe9',\n  //   },\n  //   token: tokens.inj,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 158,\n  //   lpSymbol: 'FIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD027c0B352578b1Cf57f472107591CaE5fa27Eb1',\n  //   },\n  //   token: tokens.fil,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 157,\n  //   lpSymbol: 'UNI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2937202a53C82E36bC8beCFBe79795bedF284804',\n  //   },\n  //   token: tokens.uni,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 156,\n  //   lpSymbol: 'YFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xfffad7374c894E65b498BDBD489a9a5324A59F60',\n  //   },\n  //   token: tokens.yfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 155,\n  //   lpSymbol: 'YFII-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x237E7016Ff50D3B704A7e07571aE08628909A116',\n  //   },\n  //   token: tokens.yfii,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 154,\n  //   lpSymbol: 'ATOM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7DD05eF533b1eBCE7815c90678D4B7344E32b8c9',\n  //   },\n  //   token: tokens.atom,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 153,\n  //   lpSymbol: 'XRP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0F640E3ec77415Fd810D18B3ac000cD8a172E22f',\n  //   },\n  //   token: tokens.xrp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 152,\n  //   lpSymbol: 'USDT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4160910ca32eAD83B6d4b32107974397D2579c2d',\n  //   },\n  //   token: tokens.usdt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 151,\n  //   lpSymbol: 'ALPHA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0edAA38Bd263E83fAECbC8476822800F30eE6028',\n  //   },\n  //   token: tokens.alpha,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 150,\n  //   lpSymbol: 'BTCB-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x356b7d0d3c54F22C82B7a670C6Ba9E2381b0624c',\n  //   },\n  //   token: tokens.btcb,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 149,\n  //   lpSymbol: 'ETH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4D7078a6B348766E7a16cD6e6fCb3064721bc6a6',\n  //   },\n  //   token: tokens.eth,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 148,\n  //   lpSymbol: 'XVS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x77B5dB64fD4Cf5B699855420fF2608B2EA6708B3',\n  //   },\n  //   token: tokens.xvs,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 147,\n  //   lpSymbol: 'TWT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x34910518Faf5bfd3a4D15ccFE104B63f06ee3d85',\n  //   },\n  //   token: tokens.twt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 146,\n  //   lpSymbol: 'USDT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x28b81C6b155fd9152AE4A09c4eeB7E7F1C114FaC',\n  //   },\n  //   token: tokens.usdt,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 145,\n  //   lpSymbol: 'LINK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x380941fFd7b7cbf4AEbBfa8A26aa80c2f6570909',\n  //   },\n  //   token: tokens.link,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 144,\n  //   lpSymbol: 'EOS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x082A80b3a55BD3B320a16678784186a979882b21',\n  //   },\n  //   token: tokens.eos,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 143,\n  //   lpSymbol: 'DOT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3aFfc4dd05286ed6B7206Fc85219d222130e35a9',\n  //   },\n  //   token: tokens.dot,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 142,\n  //   lpSymbol: 'BAND-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x473390697036E7611a670575eA9141583471fF47',\n  //   },\n  //   token: tokens.band,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 141,\n  //   lpSymbol: 'ADA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xec0C5719cC100DfB6c6F371bb48d3D079ab6A6D2',\n  //   },\n  //   token: tokens.ada,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 140,\n  //   lpSymbol: 'BUSD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9bdEdb0c876fC0Da79D945DF28942b898Af89Fc7',\n  //   },\n  //   token: tokens.busd,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // /**\n  //  * All farms below here are from v1 and are to be set to 0x\n  //  */\n  // {\n  //   pid: 1,\n  //   lpSymbol: 'CAKE-BNB LP',\n  //   lpAddresses: {\n  //     97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n  //     56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n  //   },\n  //   token: tokens.cake,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 136,\n  //   lpSymbol: 'τBTC-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2d4e52c48fd18ee06d3959e82ab0f773c41b9277',\n  //   },\n  //   token: tokens.τbtc,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 76,\n  //   lpSymbol: 'SWINGBY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4576C456AF93a37a096235e5d83f812AC9aeD027',\n  //   },\n  //   token: tokens.swingby,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 135,\n  //   lpSymbol: 'XED-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x718d3baa161e1a38758bb0f1fe751e401f431ac4',\n  //   },\n  //   token: tokens.xed,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 134,\n  //   lpSymbol: 'HAKKA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x56bc8de6e90a8454cb2614b33e750d960aecdf12',\n  //   },\n  //   token: tokens.hakka,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 133,\n  //   lpSymbol: 'CGG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x484c60f6202c8043DCA0236bB3101ada7ec50AD4',\n  //   },\n  //   token: tokens.cgg,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 132,\n  //   lpSymbol: 'SUTER-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6Ff75C20656A0E4745E7c114972D361F483AFa5f',\n  //   },\n  //   token: tokens.suter,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 131,\n  //   lpSymbol: 'bROOBEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9e6f9f3382f9edc683203b528222c554c92382c2',\n  //   },\n  //   token: tokens.broobee,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 130,\n  //   lpSymbol: 'HZN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xee4ca18e91012bf87fefde3dd6723a8834347a4d',\n  //   },\n  //   token: tokens.hzn,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 129,\n  //   lpSymbol: 'ALPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x837cd42282801e340f1f17aadf3166fee99fb07c',\n  //   },\n  //   token: tokens.alpa,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 128,\n  //   lpSymbol: 'PERL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x044e9985c14a547d478b1e3d4a4e562e69c8f936',\n  //   },\n  //   token: tokens.perl,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 127,\n  //   lpSymbol: 'TLM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x34e821e785A93261B697eBD2797988B3AA78ca33',\n  //   },\n  //   token: tokens.tlm,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 125,\n  //   lpSymbol: 'JGN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x890479844484D67e34B99e1BBc1468231b254c08',\n  //   },\n  //   token: tokens.jgn,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 124,\n  //   lpSymbol: 'EPS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xf9045866e7b372def1eff3712ce55fac1a98daf0',\n  //   },\n  //   token: tokens.eps,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 123,\n  //   lpSymbol: 'ARPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xfb29fca952b478ddcb8a43f57176161e498225b1',\n  //   },\n  //   token: tokens.arpa,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 122,\n  //   lpSymbol: 'ITAM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xCdC53345192D0e31eEAD03D7E9e008Ee659FAEbE',\n  //   },\n  //   token: tokens.itam,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 121,\n  //   lpSymbol: 'BONDLY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x67581bfb4fc13bb73c71489b504e9b5354769063',\n  //   },\n  //   token: tokens.bondly,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 120,\n  //   lpSymbol: 'TKO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x496a8b716A3A3410B16e71E3c906968CE4488e52',\n  //   },\n  //   token: tokens.tko,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 119,\n  //   lpSymbol: 'APYS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE5783Cc9dFb3E7e474B81B07369a008e80F1cEdb',\n  //   },\n  //   token: tokens.apys,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 118,\n  //   lpSymbol: 'HOO-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3c9e55edbd937ae0ad8c084a1a8302110612a371',\n  //   },\n  //   token: tokens.hoo,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 117,\n  //   lpSymbol: 'ODDZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x61376b56ff33c618b115131712a4138f98810a6a',\n  //   },\n  //   token: tokens.oddz,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 116,\n  //   lpSymbol: 'EASY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbd1ec00b0d1cca9d5b28fbe0bb7d664238af2ffa',\n  //   },\n  //   token: tokens.easy,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 115,\n  //   lpSymbol: 'NRV-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5a805994a2e30ac710e7376ccc0211285bd4dd92',\n  //   },\n  //   token: tokens.nrv,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 114,\n  //   lpSymbol: 'DEGO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x17F0b998B81cE75074a7CDAdAe6D63Da3cb23572',\n  //   },\n  //   token: tokens.dego,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 113,\n  //   lpSymbol: 'GUM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x155645cDF8e4B28d5B7790b65d9f79efc222740C',\n  //   },\n  //   token: tokens.gum,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 112,\n  //   lpSymbol: 'pBTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb5f6f7dad23132d40d778085d795bd0fd4b859cd',\n  //   },\n  //   token: tokens.pbtc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 111,\n  //   lpSymbol: 'DFT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8FbCbD7e30b1733965a8980bf7Ae2ca1c0C456cc',\n  //   },\n  //   token: tokens.dft,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 110,\n  //   lpSymbol: 'SWTH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8c5cFfad6cddb96Ee33DA685D0d50a37e030E115',\n  //   },\n  //   token: tokens.swth,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 109,\n  //   lpSymbol: 'LIEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcd14855150335AAE984aa6D281E090c27035C692',\n  //   },\n  //   token: tokens.lien,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 108,\n  //   lpSymbol: 'ZIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc746337b5f800a0e19ed4eb3bda03ff1401b8167',\n  //   },\n  //   token: tokens.zil,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 107,\n  //   lpSymbol: 'pCWS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x889e81d25bffba437b2a5d3e0e4fc58a0e2749c5',\n  //   },\n  //   token: tokens.pcws,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 106,\n  //   lpSymbol: 'bBADGER-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x10F461CEAC7A17F59e249954Db0784d42EfF5DB5',\n  //   },\n  //   token: tokens.bbadger,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 104,\n  //   lpSymbol: 'bDIGG-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE1E33459505bB3763843a426F7Fd9933418184ae',\n  //   },\n  //   token: tokens.bdigg,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 103,\n  //   lpSymbol: 'LTO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x85644fcd00c401e1a0a0a10d2ae6bbe04a73e4ab',\n  //   },\n  //   token: tokens.lto,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 102,\n  //   lpSymbol: 'MIR-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xf64a269F0A06dA07D23F43c1Deb217101ee6Bee7',\n  //   },\n  //   token: tokens.mir,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 101,\n  //   lpSymbol: 'TRADE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2562f94E90dE6D9eb4fB6B3b8Eab56b15Aa4FC72',\n  //   },\n  //   token: tokens.trade,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 100,\n  //   lpSymbol: 'DUSK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB7918560273FD56e50E9c215CC0DFE8D764C36C5',\n  //   },\n  //   token: tokens.dusk,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 99,\n  //   lpSymbol: 'BIFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd132D2C24F29EE8ABb64a66559d1b7aa627Bd7fD',\n  //   },\n  //   token: tokens.bifi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 98,\n  //   lpSymbol: 'TXL-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD20E0BcCa8B29409bf5726CB24DD779Fe337020e',\n  //   },\n  //   token: tokens.txl,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 97,\n  //   lpSymbol: 'COS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7b1e440240B220244761C9D9A3B07fbA1995BD84',\n  //   },\n  //   token: tokens.cos,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 96,\n  //   lpSymbol: 'BUNNY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7Bb89460599Dbf32ee3Aa50798BBcEae2A5F7f6a',\n  //   },\n  //   token: tokens.bunny,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 95,\n  //   lpSymbol: 'ALICE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe022baa3E5E87658f789c9132B10d7425Fd3a389',\n  //   },\n  //   token: tokens.alice,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 94,\n  //   lpSymbol: 'FOR-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xfEc200A5E3adDD4a7915a556DDe3F5850e644020',\n  //   },\n  //   token: tokens.for,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 93,\n  //   lpSymbol: 'BUX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0F556f4E47513d1a19Be456a9aF778d7e1A226B9',\n  //   },\n  //   token: tokens.bux,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 92,\n  //   lpSymbol: 'NULS-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xCA01F5D89d5b1d24ca5D6Ecc856D21e8a61DAFCc',\n  //   },\n  //   token: tokens.nuls,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 91,\n  //   lpSymbol: 'NULS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xad7e515409e5a7d516411a85acc88c5e993f570a',\n  //   },\n  //   token: tokens.nuls,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 90,\n  //   lpSymbol: 'BELT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x83B92D283cd279fF2e057BD86a95BdEfffED6faa',\n  //   },\n  //   token: tokens.belt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 89,\n  //   lpSymbol: 'RAMP-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbF36959939982D0D34B37Fb3f3425da9676C13a3',\n  //   },\n  //   token: tokens.ramp,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 88,\n  //   lpSymbol: 'BFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x45a9e8d48bc560416008d122c9437927fed50e7d',\n  //   },\n  //   token: tokens.bfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 87,\n  //   lpSymbol: 'DEXE-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x69ab367bc1bea1d2c0fb4dbaec6b7197951da56c',\n  //   },\n  //   token: tokens.dexe,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 86,\n  //   lpSymbol: 'BEL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xAB97952a2806D5c92b7046c7aB13a72A87e0097b',\n  //   },\n  //   token: tokens.bel,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 85,\n  //   lpSymbol: 'TPT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4db28767d1527ba545ca5bbda1c96a94ed6ff242',\n  //   },\n  //   token: tokens.tpt,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 84,\n  //   lpSymbol: 'WATCH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xdc6c130299e53acd2cc2d291fa10552ca2198a6b',\n  //   },\n  //   token: tokens.watch,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 83,\n  //   lpSymbol: 'xMARK-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x292ca56ed5b3330a19037f835af4a9c0098ea6fa',\n  //   },\n  //   token: tokens.xmark,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 82,\n  //   lpSymbol: 'bMXX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4D5aA94Ce6BbB1BC4eb73207a5a5d4D052cFcD67',\n  //   },\n  //   token: tokens.bmxx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 81,\n  //   lpSymbol: 'IOTX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x36b8b28d37f93372188f2aa2507b68a5cd8b2664',\n  //   },\n  //   token: tokens.iotx,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 80,\n  //   lpSymbol: 'BOR-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x86e650350c40a5178a5d014ba37fe8556232b898',\n  //   },\n  //   token: tokens.bor,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 79,\n  //   lpSymbol: 'bOPEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9d8b7e4a9d53654d82f12c83448d8f92732bc761',\n  //   },\n  //   token: tokens.bopen,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 78,\n  //   lpSymbol: 'SUSHI-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x17580340f3daedae871a8c21d15911742ec79e0f',\n  //   },\n  //   token: tokens.sushi,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 77,\n  //   lpSymbol: 'DODO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9e642d174b14faea31d842dc83037c42b53236e6',\n  //   },\n  //   token: tokens.dodo,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 75,\n  //   lpSymbol: 'BRY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5E3CD27F36932Bc0314aC4e2510585798C34a2fC',\n  //   },\n  //   token: tokens.bry,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 74,\n  //   lpSymbol: 'ZEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb5ab3996808c7e489dcdc0f1af2ab212ae0059af',\n  //   },\n  //   token: tokens.zee,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 73,\n  //   lpSymbol: 'SWGb-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc1800c29cf91954357cd0bf3f0accaada3d0109c',\n  //   },\n  //   token: tokens.swgb,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 72,\n  //   lpSymbol: 'COMP-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0392957571f28037607c14832d16f8b653edd472',\n  //   },\n  //   token: tokens.comp,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 71,\n  //   lpSymbol: 'SFP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcbe2cf3bd012e9c1ade2ee4d41db3dac763e78f3',\n  //   },\n  //   token: tokens.sfp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 70,\n  //   lpSymbol: 'BETH-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x99d865ed50d2c32c1493896810fa386c1ce81d91',\n  //   },\n  //   token: tokens.beth,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 69,\n  //   lpSymbol: 'LINA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xeb325a8ea1c5abf40c7ceaf645596c1f943d0948',\n  //   },\n  //   token: tokens.lina,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 68,\n  //   lpSymbol: 'LIT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x60bB03D1010b99CEAdD0dd209b64bC8bd83da161',\n  //   },\n  //   token: tokens.lit,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 67,\n  //   lpSymbol: 'HGET-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x66b9e1eac8a81f3752f7f3a5e95de460688a17ee',\n  //   },\n  //   token: tokens.hget,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 66,\n  //   lpSymbol: 'BDO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x74690f829fec83ea424ee1f1654041b2491a7be9',\n  //   },\n  //   token: tokens.bdo,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 65,\n  //   lpSymbol: 'EGLD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3ef4952c7a9afbe374ea02d1bf5ed5a0015b7716',\n  //   },\n  //   token: tokens.egld,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 63,\n  //   lpSymbol: 'UST-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD1F12370b2ba1C79838337648F820a87eDF5e1e6',\n  //   },\n  //   token: tokens.ust,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 62,\n  //   lpSymbol: 'mAMZN-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc92Dc34665c8a21f98E1E38474580b61b4f3e1b9',\n  //   },\n  //   token: tokens.mamzn,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 61,\n  //   lpSymbol: 'mGOOGL-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x852A68181f789AE6d1Da3dF101740a59A071004f',\n  //   },\n  //   token: tokens.mgoogl,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 60,\n  //   lpSymbol: 'mNFLX-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF609ade3846981825776068a8eD7746470029D1f',\n  //   },\n  //   token: tokens.mnflx,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 59,\n  //   lpSymbol: 'mTSLA-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD5664D2d15cdffD597515f1c0D945c6c1D3Bf85B',\n  //   },\n  //   token: tokens.mtsla,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 58,\n  //   lpSymbol: 'wSOTE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xffb9e2d5ce4378f1a89b29bf53f80804cc078102',\n  //   },\n  //   token: tokens.wsote,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 57,\n  //   lpSymbol: 'FRONT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x36b7d2e5c7877392fb17f9219efad56f3d794700',\n  //   },\n  //   token: tokens.front,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 56,\n  //   lpSymbol: 'Helmet-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6411310c07d8c48730172146fd6f31fa84034a8b',\n  //   },\n  //   token: tokens.helmet,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 55,\n  //   lpSymbol: 'BTCST-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x91589786D36fEe5B27A5539CfE638a5fc9834665',\n  //   },\n  //   token: tokens.btcst,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 54,\n  //   lpSymbol: 'LTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbc765fd113c5bdb2ebc25f711191b56bb8690aec',\n  //   },\n  //   token: tokens.ltc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 53,\n  //   lpSymbol: 'USDC-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n  //   },\n  //   token: tokens.usdc,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 52,\n  //   lpSymbol: 'DAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3aB77e40340AB084c3e23Be8e5A6f7afed9D41DC',\n  //   },\n  //   token: tokens.dai,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 51,\n  //   lpSymbol: 'BSCX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x20781bc3701c5309ac75291f5d09bdc23d7b7fa8',\n  //   },\n  //   token: tokens.bscx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 50,\n  //   lpSymbol: 'TEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x01ecc44ddd2d104f44d2aa1a2bd9dfbc91ae8275',\n  //   },\n  //   token: tokens.ten,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 49,\n  //   lpSymbol: 'bALBT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbe14f3a89a4f7f279af9d99554cf12e8c29db921',\n  //   },\n  //   token: tokens.balbt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 46,\n  //   lpSymbol: 'OG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x64373608f2e93ea97ad4d8ca2cce6b2575db2f55',\n  //   },\n  //   token: tokens.og,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 47,\n  //   lpSymbol: 'ASR-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd6b900d5308356317299dafe303e661271aa12f1',\n  //   },\n  //   token: tokens.asr,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 48,\n  //   lpSymbol: 'ATM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd5b3ebf1a85d32c73a82b40f75e1cd929caf4029',\n  //   },\n  //   token: tokens.atm,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 45,\n  //   lpSymbol: 'REEF-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x58B58cab6C5cF158f63A2390b817710826d116D0',\n  //   },\n  //   token: tokens.reef,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 44,\n  //   lpSymbol: 'Ditto-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x470bc451810b312bbb1256f96b0895d95ea659b1',\n  //   },\n  //   token: tokens.ditto,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 43,\n  //   lpSymbol: 'JUV-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x51a2ffa5b7de506f9a22549e48b33f6cf0d9030e',\n  //   },\n  //   token: tokens.juv,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 42,\n  //   lpSymbol: 'PSG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9c4f6a5050cf863e67a402e8b377973b4e3372c1',\n  //   },\n  //   token: tokens.psg,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 39,\n  //   lpSymbol: 'UNFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbEA35584b9a88107102ABEf0BDeE2c4FaE5D8c31',\n  //   },\n  //   token: tokens.unfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 41,\n  //   lpSymbol: 'VAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xff17ff314925dff772b71abdff2782bc913b3575',\n  //   },\n  //   token: tokens.vai,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 40,\n  //   lpSymbol: 'BLK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC743Dc05F03D25E1aF8eC5F8228f4BD25513c8d0',\n  //   },\n  //   token: tokens.blink,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 37,\n  //   lpSymbol: 'HARD-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x9f40e8a2fcaa267a0c374b6c661e0b372264cc3d',\n  //   },\n  //   token: tokens.hard,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 2,\n  //   lpSymbol: 'BUSD-BNB LP',\n  //   lpAddresses: {\n  //     97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n  //     56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n  //   },\n  //   token: tokens.busd,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 3,\n  //   lpSymbol: 'ADA-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n  //     56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf',\n  //   },\n  //   token: tokens.ada,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 4,\n  //   lpSymbol: 'BAND-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n  //     56: '0xc639187ef82271d8f517de6feae4faf5b517533c',\n  //   },\n  //   token: tokens.band,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 5,\n  //   lpSymbol: 'DOT-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\n  //   },\n  //   token: tokens.dot,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 6,\n  //   lpSymbol: 'EOS-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x981d2ba1b298888408d342c39c2ab92e8991691e',\n  //   },\n  //   token: tokens.eos,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 7,\n  //   lpSymbol: 'LINK-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\n  //   },\n  //   token: tokens.link,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 11,\n  //   lpSymbol: 'USDT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xc15fa3E22c912A276550F3E5FE3b0Deb87B55aCd',\n  //   },\n  //   token: tokens.usdt,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 12,\n  //   lpSymbol: 'TWT-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x610e7a287c27dfFcaC0F0a94f547Cc1B770cF483',\n  //   },\n  //   token: tokens.twt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 13,\n  //   lpSymbol: 'XVS-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x41182c32F854dd97bA0e0B1816022e0aCB2fc0bb',\n  //   },\n  //   token: tokens.xvs,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 14,\n  //   lpSymbol: 'ETH-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x70D8929d04b60Af4fb9B58713eBcf18765aDE422',\n  //   },\n  //   token: tokens.eth,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 15,\n  //   lpSymbol: 'BTCB-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\n  //   },\n  //   token: tokens.btcb,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 16,\n  //   lpSymbol: 'ALPHA-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x4e0f3385d932F7179DeE045369286FFa6B03d887',\n  //   },\n  //   token: tokens.alpha,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 17,\n  //   lpSymbol: 'USDT-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x20bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd',\n  //   },\n  //   token: tokens.usdt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 18,\n  //   lpSymbol: 'XRP-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xc7b4b32a3be2cb6572a1c9959401f832ce47a6d2',\n  //   },\n  //   token: tokens.xrp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 19,\n  //   lpSymbol: 'ATOM-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x2333c77fc0b2875c11409cdcd3c75d42d402e834',\n  //   },\n  //   token: tokens.atom,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 20,\n  //   lpSymbol: 'YFII-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x574a978c2d0d36d707a05e459466c7a1054f1210',\n  //   },\n  //   token: tokens.yfii,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 21,\n  //   lpSymbol: 'DAI-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x56c77d59e82f33c712f919d09fceddf49660a829',\n  //   },\n  //   token: tokens.dai,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 22,\n  //   lpSymbol: 'XTZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x5acac332f0f49c8badc7afd0134ad19d3db972e6',\n  //   },\n  //   token: tokens.xtz,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 23,\n  //   lpSymbol: 'BCH-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x54edd846db17f43b6e43296134ecd96284671e81',\n  //   },\n  //   token: tokens.bch,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 24,\n  //   lpSymbol: 'YFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x68Ff2ca47D27db5Ac0b5c46587645835dD51D3C1',\n  //   },\n  //   token: tokens.yfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 25,\n  //   lpSymbol: 'UNI-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x4269e7F43A63CEA1aD7707Be565a94a9189967E9',\n  //   },\n  //   token: tokens.uni,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 26,\n  //   lpSymbol: 'FIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\n  //   },\n  //   token: tokens.fil,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 27,\n  //   lpSymbol: 'INJ-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7a34bd64d18e44CfdE3ef4B81b87BAf3EB3315B6',\n  //   },\n  //   token: tokens.inj,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 29,\n  //   lpSymbol: 'USDC-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\n  //   },\n  //   token: tokens.usdc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 30,\n  //   lpSymbol: 'SXP-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x752E713fB70E3FA1Ac08bCF34485F14A986956c4',\n  //   },\n  //   token: tokens.sxp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 32,\n  //   lpSymbol: 'CTK-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7793870484647a7278907498ec504879d6971EAb',\n  //   },\n  //   token: tokens.ctk,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 34,\n  //   lpSymbol: 'STAX-CAKE LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7cd05f8b960ba071fdf69c750c0e5a57c8366500',\n  //   },\n  //   token: tokens.stax,\n  //   quoteToken: tokens.cake,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 35,\n  //   lpSymbol: 'NAR-CAKE LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x745c4fd226e169d6da959283275a8e0ecdd7f312',\n  //   },\n  //   token: tokens.nar,\n  //   quoteToken: tokens.cake,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 36,\n  //   lpSymbol: 'NYA-CAKE LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x2730bf486d658838464a4ef077880998d944252d',\n  //   },\n  //   token: tokens.nya,\n  //   quoteToken: tokens.cake,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 38,\n  //   lpSymbol: 'bROOBEE-CAKE LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x970858016C963b780E06f7DCfdEf8e809919BcE8',\n  //   },\n  //   token: tokens.broobee,\n  //   quoteToken: tokens.cake,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 8,\n  //   lpSymbol: 'BAKE-BNB Bakery LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xc2eed0f5a0dc28cfa895084bc0a9b8b8279ae492',\n  //   },\n  //   token: tokens.bake,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 9,\n  //   lpSymbol: 'BURGER-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xd937FB9E6e47F3805981453BFB277a49FFfE04D7',\n  //   },\n  //   token: tokens.burger,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 10,\n  //   lpSymbol: 'BAKE-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x3Da30727ed0626b78C212e81B37B97A8eF8A25bB',\n  //   },\n  //   token: tokens.bake,\n  //   quoteToken: tokens.wbnb,\n  // },\n]\n\nexport default farms\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n"],"sourceRoot":""}