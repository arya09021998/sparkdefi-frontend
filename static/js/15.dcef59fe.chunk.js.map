{"version":3,"sources":["views/Farms/components/types.ts","views/Farms/components/assets/farm-dark.svg","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/CardHeading.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/Styled.tsx","views/Farms/components/Modals/Styled.tsx","views/Farms/components/Modals/Stake.tsx","views/Farms/components/Modals/ClaimModal.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/assets/farm-light.svg","views/Farms/Farms.tsx"],"names":["ViewMode","_style","_g","_g2","_g3","_g4","getLiquidityUrlPathParts","quoteTokenAddress","tokenAddress","wBNBAddressString","getWbnbAddress","quoteTokenAddressString","process","tokenAddressString","secondPart","Wrapper","styled","Flex","CardHeading","Tag","lpLabel","farmSymbol","multiplier","isCommunityFarm","farmImage","tokenSymbol","rewardToken","token","quoteToken","justifyContent","alignItems","mb","flexDirection","style","textAlign","split","TokenPairImage","variant","primaryToken","secondaryToken","width","height","WithdrawModal","onConfirm","onDismiss","max","tokenName","useState","val","setVal","fullBalance","useTranslation","t","useMemo","getFullDisplayBalance","BigNumber","useCallback","e","currentTarget","validity","valid","value","replace","title","marginTop","fontSize","bold","margin","padding","fullWidth","Container","div","DetailsCont","ActionDiv","ModalFooter","StyledFlex","CancelButton","Button","DepositButton","Stake","symbol","addLiquidityUrl","inputTitle","pendingTx","setPendingTx","valNumber","fullBalanceNumber","handleChange","handleSelectMax","ModalInput","onSelectMax","onChange","onClick","disabled","isFinite","eq","gt","a","ClaimModal","DepositModal","addTokenUrl","tokenReward","tokenBalance","stakedBalance","tokenEarnings","tokenRewardAddress","handleUnstake","farm","maxStake","setRequestedApproval","activeSelect","setActiveSelect","userData","allowance","allowanceAsString","tokenBalanceAsString","earnings","account","useWeb3React","dispatch","useAppDispatch","RewardTokenBalance","useTokenBalance","formatTokenBalance","getBalanceNumber","balance","pid","lpAddresses","lpAddress","getAddress","lpContract","isGreaterThan","useERC20","onApprove","useApprove","fetchFarmUserDataAsync","pids","console","error","getBalanceAmount","BIG_ZERO","useModal","onPresentStake","onPresentClaim","color","paddingBottom","paddingTop","as","target","href","display","onMouseEnter","onMouseLeave","position","StakeAction","onStake","useStake","onUnstake","useUnstake","location","useLocation","useLpTokenPrice","amount","stakedBalanceBigNumber","lt","toLocaleString","toFixed","ROUND_DOWN","address","onPresentDeposit","some","item","pathname","includes","Action","CardActions","stakedBalanceAsString","earningsAsString","lpSymbol","UnlockButton","mt","AccentGradient","keyframes","StyledCardAccent","theme","colors","primaryBright","secondary","FCard","props","card","background","primary","isPromotedFarm","radii","FarmCard","cardBorder","expanded","removed","cakePrice","totalValueFormatted","liquidity","toNumber","undefined","maximumFractionDigits","toLocaleLowerCase","toUpperCase","earnLabel","dual","apr","BASE_ADD_LIQUIDITY_URL","AddTokenUrl","BASE_EXCHANGE_URL","useContext","ThemeContext","isCommunity","border","backgroundColor","CardActionsContainer","Object","prototype","hasOwnProperty","call","_extends","assign","i","arguments","length","source","key","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgFarmDark","_ref","svgRef","titleId","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","ref","id","type","className","d","cx","cy","r","ForwardRef","SvgFarmLight","Farms","mediaQueries","sm","Text","Image","useRouteMatch","path","useFarms","farmsLP","data","userDataLoaded","usePriceCakeBusd","query","usePersistState","TABLE","localStorageKey","sortOption","isArchived","isInactive","isActive","isMobile","useMedia","maxWidth","usePollFarmsData","stakedOnly","setStakedOnly","useEffect","activeFarms","filter","isArchivedPid","inactiveFarms","archivedFarms","stakedOnlyFarms","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","map","lpTotalInQuoteToken","busdPrice","totalLiquidity","times","getFarmApr","poolWeight","lowercaseQuery","latinise","toLowerCase","loadMoreRef","useRef","numberOfFarmsVisible","setNumberOfFarmsVisible","observerIsSet","setObserverIsSet","farmsStakedMemoized","farmsStaked","farms","orderBy","Number","slice","sortFarms","IntersectionObserver","entries","isIntersecting","farmsCurrentlyVisible","rootMargin","threshold","observe","current","originalValue","label","earned","details","PageHeader","minHeight","mr","marginBottom","borderBottom","marginRight","SvgIcon","component","isDark","FarmsDarkLogo","FarmsLightLogo","Page","marginLeft"],"mappings":"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","file":"static/js/15.dcef59fe.chunk.js","sourcesContent":["export type TableProps = {\r\n  data?: TableDataTypes[]\r\n  selectedFilters?: string\r\n  sortBy?: string\r\n  sortDir?: string\r\n  onSort?: (value: string) => void\r\n}\r\n\r\nexport type ColumnsDefTypes = {\r\n  id: number\r\n  label: string\r\n  name: string\r\n  sortable: boolean\r\n}\r\n\r\nexport type ScrollBarProps = {\r\n  ref: string\r\n  width: number\r\n}\r\n\r\nexport type TableDataTypes = {\r\n  POOL: string\r\n  APR: string\r\n  EARNED: string\r\n  STAKED: string\r\n  DETAILS: string\r\n  LINKS: string\r\n}\r\n\r\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'liquidity',\r\n    sortable: true,\r\n    label: 'Liquidity',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'multiplier',\r\n    sortable: true,\r\n    label: 'Multiplier',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport enum ViewMode {\r\n  'TABLE' = 'TABLE',\r\n  'CARD' = 'CARD',\r\n}\r\n","var _style, _g, _g2, _g3, _g4;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFarmDark(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 500 500\",\n    style: {\n      enableBackground: \"new 0 0 500 500\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\r\\n\\t.st0{fill:#FFFFFF;}\\r\\n\\t.st1{fill:#39BEEC;}\\r\\n\\t.st2{fill:#1B60A3;}\\r\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_3\"\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4_1_\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_2\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M266,330.6v-95.2c22.1-1.5,61.8-8.1,89.1-35.4C394.1,161,391,97.2,390.9,94.5c-0.4-7.9-6.8-14.2-14.7-14.7 c-2.7-0.2-66.5-3.2-105.4,35.7c-4.1,4.1-7.8,8.6-11,13.2c-5.7-22.9-16.4-48.5-36.4-68.5c-46.5-46.5-123-42.8-126.2-42.7 c-7.9,0.4-14.2,6.8-14.7,14.7c-0.2,3.2-3.8,79.7,42.7,126.2c34.1,34.1,84.2,41.2,109.9,42.5v129.7c5.1-0.6,10.3-0.9,15.5-0.9 C255.7,329.8,260.9,330.1,266,330.6L266,330.6z\"\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st0\",\n    cx: 252.5,\n    cy: 368.5,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 363.4,\n    cy: 368.5,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st2\",\n    cx: 137.3,\n    cy: 368.5,\n    r: 109.4\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFarmDark);\nexport default __webpack_public_path__ + \"static/media/farm-dark.4c14ca22.svg\";\nexport { ForwardRef as ReactComponent };","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\r\n// Each part of the url represents a different side of the LP pair.\r\nimport { getWbnbAddress } from './addressHelpers'\r\n\r\nconst getLiquidityUrlPathParts = ({ quoteTokenAddress, tokenAddress }) => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const wBNBAddressString = getWbnbAddress()\r\n  const quoteTokenAddressString: string = quoteTokenAddress ? quoteTokenAddress[chainId] : null\r\n  const tokenAddressString: string = tokenAddress ? tokenAddress[chainId] : null\r\n  const firstPart =\r\n    !quoteTokenAddressString || quoteTokenAddressString === wBNBAddressString ? 'BNB' : quoteTokenAddressString\r\n  const secondPart = !tokenAddressString || tokenAddressString === wBNBAddressString ? 'BNB' : tokenAddressString\r\n  return `${firstPart}/${secondPart}`\r\n}\r\n\r\nexport default getLiquidityUrlPathParts\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tag, Flex, Heading, Image } from '@sparkpointio/sparkswap-uikit'\r\nimport { CommunityTag, CoreTag } from 'components/Tags'\r\nimport { Token } from 'config/constants/types'\r\nimport TokenPairImage from 'components/TokenPairImage'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  isCommunityFarm?: boolean\r\n  farmImage?: string\r\n  farmSymbol?: string\r\n  tokenSymbol?: string\r\n  rewardToken?:string\r\n  token: Token\r\n  quoteToken: Token\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 4px;\r\n  }\r\n`\r\n\r\nconst MultiplierTag = styled(Tag)`\r\n  margin-left: 4px;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\r\n  lpLabel,\r\n  multiplier,\r\n  isCommunityFarm,\r\n  farmImage,\r\n  tokenSymbol,\r\n  farmSymbol,\r\n  rewardToken,\r\n  token,\r\n  quoteToken\r\n}) => {\r\n\r\n  return (\r\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\r\n        <Heading  mb=\"4px\" style={{textAlign: 'left'}}>Stake {lpLabel.split(' ')[0]} <br /> {farmSymbol} <br /> to Earn {rewardToken}</Heading>\r\n      </Flex>\r\n      <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={64} height={64} />\r\n      {/* <Image src={`/images/farms/${farmImage}.svg`} alt={tokenSymbol} width={64} height={64} /> */}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal, Text, Flex } from '@sparkpointio/sparkswap-uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport ModalInput from 'components/ModalInput'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { t } = useTranslation()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const valNumber = new BigNumber(val)\r\n  const fullBalanceNumber = new BigNumber(fullBalance)\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      if (e.currentTarget.validity.valid) {\r\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\r\n      }\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title=\"\" onDismiss={onDismiss}>\r\n      {/* <ModalInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        inputTitle={t('Unstake')}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\r\n          {t('Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n          width=\"100%\"\r\n        >\r\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\r\n        </Button>\r\n      </ModalActions> */}\r\n      <Flex marginTop=\"-10px\" style={{width: '450px'}} alignItems=\"center\" flexDirection=\"column\">\r\n        <Text>You will be claiming the reward amount of </Text>\r\n        <Text fontSize=\"28px\" bold>78.912 SRK Tokens</Text>\r\n        <Text fontSize=\"28px\" bold>AND</Text>\r\n        <Text>withdrawing the staked amount of</Text>\r\n        <Text fontSize=\"28px\" bold>678.910 SRK-ETH LP Tokens</Text>\r\n      </Flex>\r\n      <Flex justifyContent=\"center\" margin=\"24px\" padding=\"0px 35px\">\r\n        <Button fullWidth>Confirm</Button>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import React from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\n\r\nconst Container = styled.div`\r\n    min-width: 720px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: auto;\r\n`\r\n\r\nconst DetailsCont = styled.div`\r\n    width: 30%;\r\n    height: auto;\r\n    overflow: visible;\r\n`\r\n\r\nconst ActionDiv = styled.div`\r\n    margin: 15px 0px;\r\n    padding: 10px;\r\n`\r\nconst ModalFooter = styled.div`\r\n    min-width: 720px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\n\r\nexport { DetailsCont, ActionDiv, ModalFooter }\r\nexport default Container;\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Button } from '@sparkpointio/sparkswap-uikit' \r\n\r\nconst Container = styled.div`\r\n    margin-top: -30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-width: 500px;\r\n`\r\nconst StyledFlex = styled(Flex)`\r\n    padding: 10px 0px;\r\n`\r\nconst CancelButton = styled(Button)`\r\n    flex: 1;\r\n    margin-right: 10px;\r\n`\r\nconst DepositButton = styled(Button)`\r\n    flex: 1;\r\n    margin-left: 10px;\r\n`\r\n\r\nexport {StyledFlex, CancelButton, DepositButton}\r\nexport default Container;\r\n\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useState, useCallback, useMemo } from 'react'\r\nimport { Modal, Text } from '@sparkpointio/sparkswap-uikit'\r\nimport ModalInput from 'components/ModalInput'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport Container, { CancelButton, DepositButton, StyledFlex } from './Styled'\r\n\r\ninterface StakeModalInterface {\r\n  onDismiss?: () => void\r\n  max: BigNumber\r\n  symbol: string\r\n  placeholder?: string\r\n  addLiquidityUrl?: string\r\n  inputTitle?: string\r\n  onConfirm: (amount: string) => void\r\n}\r\n\r\nconst Stake: React.FC<StakeModalInterface> = ({ onDismiss, max, symbol, addLiquidityUrl, inputTitle, onConfirm, }) => {\r\n  const [val, setVal] = useState('0')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const valNumber = new BigNumber(val)\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const fullBalanceNumber = new BigNumber(fullBalance)\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      if (e.currentTarget.validity.valid) {\r\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\r\n      }\r\n    },\r\n    [setVal],\r\n  )\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n  return (\r\n    <Modal title=\"\" onDismiss={!pendingTx && onDismiss}>\r\n      <Container>\r\n        <Text>Stake amount: </Text>\r\n        <ModalInput\r\n          value={val}\r\n          onSelectMax={handleSelectMax}\r\n          onChange={handleChange}\r\n          max={fullBalance}\r\n          symbol={symbol}\r\n          addLiquidityUrl={addLiquidityUrl}\r\n          //  inputTitle={t('Stake')}\r\n        />\r\n      </Container>\r\n      <StyledFlex justifyContent=\"space-between\">\r\n        <Text>Appoved tokens: </Text>\r\n        <Text>00.00</Text>\r\n      </StyledFlex>\r\n      <StyledFlex justifyContent=\"space-between\">\r\n        <CancelButton\r\n        onClick={onDismiss}\r\n        disabled={pendingTx}\r\n        >\r\n         Approve\r\n        </CancelButton>\r\n        <DepositButton\r\n        // disable Deposit button if not yet approved\r\n        disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\r\n        onClick={async () => {\r\n          try {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }\r\n          catch (e) {\r\n            setPendingTx(false)\r\n          }\r\n        }}\r\n        >\r\n        Deposit\r\n        </DepositButton>\r\n      </StyledFlex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default Stake\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Modal, Text, Flex } from '@sparkpointio/sparkswap-uikit'\r\n\r\ninterface ClaimModalProps {\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ClaimModal: React.FC<ClaimModalProps> = ({ onDismiss}) => {\r\n  \r\n  return (\r\n    <Modal title=\"\" onDismiss={onDismiss}>\r\n      {/* <ModalInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        inputTitle={t('Unstake')}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\r\n          {t('Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n          width=\"100%\"\r\n        >\r\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\r\n        </Button>\r\n      </ModalActions> */}\r\n      <Flex marginTop=\"-10px\" style={{width: '450px'}} alignItems=\"center\" flexDirection=\"column\">\r\n        <Text>You will be claiming the reward amount of </Text>\r\n        <Text fontSize=\"28px\" bold>78.912 SRK Tokens</Text>\r\n      </Flex>\r\n      <Flex justifyContent=\"center\" margin=\"24px\" padding=\"0px 35px\">\r\n        <Button fullWidth>Confirm</Button>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ClaimModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Button, Modal, LinkExternal, Text, useModal, Dropdown } from '@sparkpointio/sparkswap-uikit'\r\nimport { ChevronDown, ChevronUp } from 'react-feather'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { useAppDispatch } from 'state'\r\nimport { Farm } from 'state/types'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getBalanceAmount, getFullDisplayBalance, getBalanceNumber} from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ModalActions from 'components/ModalActions'\r\nimport ModalInput from 'components/ModalInput'\r\nimport WithdrawModal from './WithdrawModal'\r\nimport Container, { ActionDiv, DetailsCont, ModalFooter } from './Styled'\r\nimport { ModalHr } from './Divider'\r\nimport StakeModal from './Modals/Stake'\r\nimport ClaimModal from './Modals/ClaimModal'\r\n\r\n\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  addLiquidityUrl?: string\r\n  addTokenUrl?: string\r\n  tokenReward?: string\r\n  tokenRewardAddress?: string\r\n  tokenBalance?: string\r\n  stakedBalance?: string\r\n  tokenEarnings?: string\r\n  farm?: Farm\r\n  handleUnstake?: (amount: string) => void\r\n  maxStake?: BigNumber\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({\r\n  max,\r\n  onConfirm,\r\n  onDismiss,\r\n  tokenName = '',\r\n  addLiquidityUrl,\r\n  addTokenUrl,\r\n  tokenReward,\r\n  tokenBalance,\r\n  stakedBalance,\r\n  tokenEarnings,\r\n  tokenRewardAddress,\r\n  handleUnstake,\r\n  farm,\r\n  maxStake\r\n}) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { t } = useTranslation()\r\n  const [activeSelect, setActiveSelect] = useState(false)\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n  const {\r\n    allowance: allowanceAsString = 0,\r\n    tokenBalance: tokenBalanceAsString = 0,\r\n    stakedBalance: stakedBalanceAsString = 0,\r\n    earnings: earningsAsString = 0,\r\n  } = farm.userData || {}\r\n  const allowance = new BigNumber(allowanceAsString)\r\n  const earnings = new BigNumber(tokenBalanceAsString)\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch();\r\n  const RewardTokenBalance = useTokenBalance(tokenRewardAddress)\r\n  const formatTokenBalance = getBalanceNumber(RewardTokenBalance.balance)\r\n  const { pid, lpAddresses } = farm\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n  const lpContract = useERC20(lpAddress)\r\n  const { onApprove } = useApprove(lpContract)\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, dispatch, account, pid])\r\n  const rawEarningsBalance = account ? getBalanceAmount(earnings) : BIG_ZERO\r\n  const [onPresentStake] = useModal(\r\n    <StakeModal onConfirm={onConfirm} max={max} symbol={tokenName} addLiquidityUrl={addLiquidityUrl} inputTitle={t('Stake')} />,\r\n  )\r\n\r\n  const [onPresentClaim] = useModal (<ClaimModal />)\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={maxStake} onConfirm={handleUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  return (\r\n    <Modal title={t('Account Info')} onDismiss={onDismiss}>\r\n      <Text color=\"textSubtle\" fontSize=\"14px\" style={{ paddingBottom: '30px', marginTop: '-40px' }}>\r\n        Staking, balances & earnings\r\n      </Text>\r\n      <Container>\r\n        <DetailsCont>\r\n          <Text bold fontSize=\"24px\" >\r\n          {formatTokenBalance === 0? '0.0000': formatTokenBalance}\r\n          </Text>\r\n          <Text color=\"textSubtle\" fontSize=\"14px\">\r\n            {tokenReward}\r\n          </Text>\r\n          <ActionDiv style={{ paddingTop: '30px' }}>\r\n            <Button fullWidth as=\"a\" target=\"_blank\" href={addTokenUrl}>\r\n              Add More\r\n            </Button>\r\n          </ActionDiv>\r\n        </DetailsCont>\r\n        <DetailsCont>\r\n          <Text bold fontSize=\"24px\">\r\n          {tokenBalance === '0'? '0.0000' : {tokenBalance}}\r\n          </Text>\r\n          <Text color=\"textSubtle\" fontSize=\"14px\">\r\n            {tokenName} Tokens\r\n          </Text>\r\n          <ActionDiv style={{ paddingTop: '30px' }}>\r\n            <Button fullWidth as=\"a\" target=\"_blank\" href={addLiquidityUrl}>\r\n              Add Liquidity\r\n            </Button>\r\n          </ActionDiv>\r\n        </DetailsCont>\r\n        <DetailsCont>\r\n          <Text bold fontSize=\"24px\">\r\n          {stakedBalance === '0'? '0.0000' : {stakedBalance}}\r\n          </Text>\r\n          <Text color=\"textSubtle\" fontSize=\"14px\">\r\n            Your {tokenName} Deposits\r\n          </Text>\r\n          <ActionDiv style={{ paddingTop: '30px' }}>\r\n             {/* {isApproved? */}\r\n              <Button fullWidth onClick={onPresentStake}>\r\n                Stake Tokens\r\n              </Button>\r\n              {/* <Button fullWidth onClick={handleApprove} disabled={requestedApproval}>\r\n                Stake Tokens\r\n              </Button> */}\r\n             {/* } */}\r\n            \r\n          </ActionDiv>\r\n        </DetailsCont>\r\n      </Container>\r\n      <ModalHr />\r\n      <ModalFooter>\r\n        <DetailsCont>\r\n          <Text bold fontSize=\"24px\">\r\n            0.0000\r\n          </Text>\r\n          <Text color=\"textSubtle\" fontSize=\"14px\">{`Your Rate ${tokenReward}/week`}</Text>\r\n        </DetailsCont>\r\n        <DetailsCont>\r\n          <Text bold fontSize=\"24px\">\r\n            {tokenEarnings === '0'? '0.0000': tokenEarnings}\r\n          </Text>\r\n          <Text color=\"textSubtle\" fontSize=\"14px\">{`${tokenReward} Token Earnings`}</Text>\r\n        </DetailsCont>\r\n        <DetailsCont\r\n          style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\r\n          onMouseEnter={() => setActiveSelect(true)}\r\n          onMouseLeave={() => setActiveSelect(false)}\r\n        >\r\n          <Dropdown\r\n            position=\"top\"\r\n            target={\r\n              <Button variant=\"secondary\" onClick={onDismiss}>\r\n                <Text>Withdraw</Text> {activeSelect ? <ChevronDown /> : <ChevronUp />}\r\n              </Button>\r\n            }\r\n          >\r\n            <Button fullWidth onClick={onPresentClaim}>\r\n              <Text>Claim</Text>\r\n            </Button>\r\n            <Button fullWidth onClick={onDismiss}>\r\n              <Text>Claim & Withdraw</Text>\r\n            </Button>\r\n          </Dropdown>\r\n        </DetailsCont>\r\n      </ModalFooter>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import React, { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@sparkpointio/sparkswap-uikit'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { useLpTokenPrice } from 'state/hooks'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { Farm } from 'state/types'\r\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  addLiquidityUrl?: string\r\n  addTokenUrl?: string\r\n  farm?: Farm\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  addLiquidityUrl,\r\n  addTokenUrl,\r\n  farm,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n  const location = useLocation()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const lpPrice = useLpTokenPrice(tokenName)\r\n\r\n  const handleStake = async (amount: string) => {\r\n    await onStake(amount)\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  const handleUnstake = async (amount: string) => {\r\n    await onUnstake(amount)\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  const displayBalance = useCallback(() => {\r\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\r\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\r\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\r\n    }\r\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\r\n  }, [stakedBalance])\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal\r\n      max={tokenBalance}\r\n      onConfirm={onStake}\r\n      tokenName={tokenName}\r\n      addLiquidityUrl={addLiquidityUrl}\r\n      addTokenUrl={addTokenUrl}\r\n      tokenReward={farm.quoteToken.symbol}\r\n      tokenRewardAddress={farm.quoteToken.address[97]}\r\n      tokenBalance={farm.userData.tokenBalance}\r\n      stakedBalance={farm.userData.stakedBalance}\r\n      tokenEarnings={farm.userData.earnings}\r\n      farm={farm}\r\n      handleUnstake={handleUnstake}\r\n      maxStake={stakedBalance}\r\n    />\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return (\r\n      <Button\r\n        onClick={onPresentDeposit}\r\n        disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\r\n        fullWidth\r\n      >\r\n        {t('Deposit')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      {/* <Heading color={stakedBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance()}</Heading> */}\r\n      {renderStakingButtons()}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Text } from '@sparkpointio/sparkswap-uikit'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { Farm } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apr?: number\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  account?: string\r\n  addLiquidityUrl?: string\r\n  addTokenUrl?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl, addTokenUrl }) => {\r\n  const { t } = useTranslation()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses } = farm\r\n  const {\r\n    allowance: allowanceAsString = 0,\r\n    tokenBalance: tokenBalanceAsString = 0,\r\n    stakedBalance: stakedBalanceAsString = 0,\r\n    earnings: earningsAsString = 0,\r\n  } = farm.userData || {}\r\n  const allowance = new BigNumber(allowanceAsString)\r\n  const tokenBalance = new BigNumber(tokenBalanceAsString)\r\n  const stakedBalance = new BigNumber(stakedBalanceAsString)\r\n  const earnings = new BigNumber(earningsAsString)\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const isApproved = account && allowance  // && allowance.isGreaterThan(0)\r\n  const dispatch = useAppDispatch()\r\n\r\n  const lpContract = useERC20(lpAddress)\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, dispatch, account, pid])\r\n  const renderDepositButton = () => {\r\n    return (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={farm.lpSymbol}\r\n        pid={pid}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n        addTokenUrl={addTokenUrl}\r\n        farm={farm}\r\n      />\r\n    ) \r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      {!account ? <UnlockButton mt=\"8px\" width=\"100%\" /> : renderDepositButton()}\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import React, { useState, useContext } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes, ThemeContext } from 'styled-components'\r\nimport { Flex, Text, Skeleton } from '@pancakeswap/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { getBscScanAddressUrl } from 'utils/bscscan'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { BASE_ADD_LIQUIDITY_URL, BASE_EXCHANGE_URL } from 'config'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apr?: number\r\n  liquidity?: BigNumber\r\n}\r\n\r\nconst AccentGradient = keyframes`  \r\n  0% {\r\n    background-position: 50% 0%;\r\n  }\r\n  50% {\r\n    background-position: 50% 100%;\r\n  }\r\n  100% {\r\n    background-position: 50% 0%;\r\n  }\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  // background: ${({ theme }) => `linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary})`};\r\n  background-size: 400% 400%;\r\n  animation: ${AccentGradient} 2s linear infinite;\r\n  border-radius: 32px;\r\n  position: absolute;\r\n  top: -1px;\r\n  right: -1px;\r\n  bottom: -3px;\r\n  left: -1px;\r\n  z-index: -1;\r\n`\r\n\r\nconst FCard = styled.div<{ isPromotedFarm: boolean }>`\r\n  align-self: baseline;\r\n  background: ${(props) => props.theme.card.background};\r\n  border: 5px solid ${(props) => props.theme.colors.primary};\r\n  // border-radius: ${({ theme, isPromotedFarm }) => (isPromotedFarm ? '31px' : theme.radii.card)};\r\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 24px;\r\n  position: relative;\r\n  text-align: center;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.cardBorder};\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  overflow: hidden;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  cakePrice?: BigNumber\r\n  account?: string\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, account }) => {\r\n  const { t } = useTranslation()\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n  const totalValueFormatted =\r\n    farm.liquidity && farm.liquidity.gt(0)\r\n      ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n      : ''\r\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\r\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\r\n  const earnLabel = farm.dual ? farm.dual.earnLabel : 'CAKE'\r\n  const farmAPR = farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAddress: farm.quoteToken.address,\r\n    tokenAddress: farm.token.address,\r\n  })\r\n\r\n  // const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}`\r\n  const AddTokenUrl = `${BASE_EXCHANGE_URL}/#/swap/${farm.token.address[56]}`\r\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const isPromotedFarm = farm.token.symbol === 'CAKE'\r\n  const theme = useContext(ThemeContext)\r\n  return (\r\n    <FCard isPromotedFarm={isPromotedFarm}>\r\n      {isPromotedFarm && <StyledCardAccent />}\r\n      <CardHeading\r\n        lpLabel={lpLabel}\r\n        multiplier={farm.multiplier}\r\n        isCommunityFarm={farm.isCommunity}\r\n        farmImage={farmImage}\r\n        farmSymbol={farm.lpSymbol}\r\n        tokenSymbol={farm.token.symbol}\r\n        rewardToken={farm.quoteToken.symbol}\r\n        token={farm.token}\r\n        quoteToken={farm.quoteToken}\r\n      />\r\n      <hr style={{width: '100%', border: 'none', backgroundColor: theme.colors.primary, height: '2px'}}/>\r\n      {/* {!removed && (\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Text>{t('APR')}:</Text>\r\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\r\n            {farm.apr ? (\r\n              <>\r\n                <ApyButton lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} cakePrice={cakePrice} apr={farm.apr} />\r\n                {farmAPR}%\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Flex>\r\n      )} */}\r\n\r\n\r\n      \r\n      <Flex justifyContent=\"space-between\" style={{textAlign: 'left'}}>\r\n        <Text>{t('Total Deposit')}</Text>\r\n        <Text color=\"textSubtle\">{totalValueFormatted}</Text>\r\n      </Flex>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{t('Pool Rate')}</Text>\r\n        <Text color=\"textSubtle\">{earnLabel}</Text>\r\n      </Flex>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{t('APR')}</Text>\r\n        <Text color=\"textSubtle\">0%</Text>\r\n      </Flex>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{t('Your Rate')}</Text>\r\n        <Text color=\"textSubtle\">{farm.userData.earnings}</Text>\r\n      </Flex>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{t('Duration')}</Text>\r\n        <Text color=\"textSubtle\">{earnLabel}</Text>\r\n      </Flex>\r\n      <CardActionsContainer farm={farm} account={account} addLiquidityUrl={addLiquidityUrl} addTokenUrl={AddTokenUrl} />\r\n      {/* <Divider /> */}\r\n      {/* <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          removed={removed}\r\n          bscScanAddress={getBscScanAddressUrl(farm.lpAddresses[process.env.REACT_APP_CHAIN_ID])}\r\n          infoAddress={`https://pancakeswap.info/pool/${lpAddress}`}\r\n          totalValueFormatted={totalValueFormatted}\r\n          lpLabel={lpLabel}\r\n          addLiquidityUrl={addLiquidityUrl}\r\n        />\r\n      </ExpandingWrapper> */}\r\n       <Flex justifyContent=\"center\">\r\n         {Object.prototype.hasOwnProperty.call(farm.lpAddresses, '56') && (<Text color=\"textSubtle\" fontSize=\"14px\">{t('This will only work on Binance Smart Chain')}</Text>)}\r\n         {Object.prototype.hasOwnProperty.call(farm.lpAddresses, '1') && (<Text color=\"textSubtle\" fontSize=\"14px\">{t('This will only work on Ethereum Blockchain')}</Text>)}\r\n      </Flex>\r\n    </FCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n","var _style, _g, _g2, _g3, _g4;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFarmLight(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 500 500\",\n    style: {\n      enableBackground: \"new 0 0 500 500\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\r\\n\\t.st0{fill:#727071;}\\r\\n\\t.st1{fill:#39BEEC;}\\r\\n\\t.st2{fill:#1B60A3;}\\r\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_3\"\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4_1_\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_2_1_\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M266,330.6v-95.2c22.1-1.5,61.8-8.1,89.1-35.4c39-39,35.9-102.8,35.8-105.5c-0.4-7.9-6.8-14.2-14.7-14.7 c-2.7-0.2-66.5-3.2-105.4,35.7c-4.1,4.1-7.8,8.6-11,13.2c-5.7-22.9-16.4-48.5-36.4-68.5c-46.5-46.5-123-42.8-126.2-42.7 c-7.9,0.4-14.2,6.8-14.7,14.7c-0.2,3.2-3.8,79.7,42.7,126.2c34.1,34.1,84.2,41.2,109.9,42.5v129.7c5.1-0.6,10.3-0.9,15.5-0.9 C255.7,329.8,260.9,330.1,266,330.6L266,330.6z\"\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1_1_\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st0\",\n    cx: 252.5,\n    cy: 368.5,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 363.4,\n    cy: 368.5,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st2\",\n    cx: 137.3,\n    cy: 368.5,\n    r: 109.4\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFarmLight);\nexport default __webpack_public_path__ + \"static/media/farm-light.660e74aa.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useCallback, useState, useMemo, useRef, useContext } from 'react'\r\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Image, RowType, Toggle } from '@pancakeswap/uikit'\r\nimport { Text, Flex, Heading } from '@sparkpointio/sparkswap-uikit'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport useMedia from 'use-media';\r\nimport { SvgIcon } from '@material-ui/core';\r\nimport { useFarms, usePollFarmsData, usePriceCakeBusd } from 'state/hooks'\r\nimport usePersistState from 'hooks/usePersistState'\r\nimport { Farm } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { getFarmApr } from 'utils/apr'\r\nimport { orderBy } from 'lodash'\r\nimport isArchivedPid from 'utils/farmHelpers'\r\nimport { latinise } from 'utils/latinise'\r\nimport PageHeader from 'components/PageHeader'\r\nimport SearchInput from 'components/SearchInput'\r\nimport Select, { OptionProps } from 'components/Select/Select'\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport Table from './components/FarmTable/FarmTable'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\nimport { RowProps } from './components/FarmTable/Row'\r\nimport ToggleView from './components/ToggleView/ToggleView'\r\nimport { DesktopColumnSchema, ViewMode } from './components/types'\r\nimport { StyledHr } from './components/Divider'\r\nimport { ReactComponent as FarmsDarkLogo } from './components/assets/farm-dark.svg';\r\nimport { ReactComponent as FarmsLightLogo} from './components/assets/farm-light.svg';\r\n\r\nconst ControlContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  margin-bottom: 32px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst StyledImage = styled(Image)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 58px;\r\n`\r\nconst NUMBER_OF_FARMS_VISIBLE = 12\r\n\r\nconst Farms: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n  const { pathname } = useLocation()\r\n  const { t } = useTranslation()\r\n  const { data: farmsLP, userDataLoaded } = useFarms()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const [query, setQuery] = useState('')\r\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\r\n  const { account } = useWeb3React()\r\n  const [sortOption, setSortOption] = useState('hot')\r\n  const theme = useContext(ThemeContext);\r\n  const isArchived = pathname.includes('archived')\r\n  const isInactive = pathname.includes('history')\r\n  const isActive = !isInactive && !isArchived\r\n  const isMobile = useMedia({maxWidth: 500})\r\n  usePollFarmsData(isArchived)\r\n\r\n  // Users with no wallet connected should see 0 as Earned amount\r\n  // Connected users should see loading indicator until first userData has loaded\r\n  const userDataReady = !account || (!!account && userDataLoaded)\r\n\r\n  const [stakedOnly, setStakedOnly] = useState(!isActive)\r\n  useEffect(() => {\r\n    setStakedOnly(!isActive)\r\n  }, [isActive])\r\n\r\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X' && !isArchivedPid(farm.pid))\r\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X' && !isArchivedPid(farm.pid))\r\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\r\n\r\n  const stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const stakedInactiveFarms = inactiveFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const stakedArchivedFarms = archivedFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\r\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        if (!farm.lpTotalInQuoteToken || !farm.quoteToken.busdPrice) {\r\n          return farm\r\n        }\r\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\r\n        const apr = isActive ? getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity) : 0\r\n\r\n        return { ...farm, apr, liquidity: totalLiquidity }\r\n      })\r\n\r\n      if (query) {\r\n        const lowercaseQuery = latinise(query.toLowerCase())\r\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\r\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\r\n        })\r\n      }\r\n      return farmsToDisplayWithAPR\r\n    },\r\n    [cakePrice, query, isActive],\r\n  )\r\n\r\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setQuery(event.target.value)\r\n  }\r\n\r\n  const loadMoreRef = useRef<HTMLDivElement>(null)\r\n\r\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n\r\n  const farmsStakedMemoized = useMemo(() => {\r\n    let farmsStaked = []\r\n\r\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\r\n      switch (sortOption) {\r\n        case 'apr':\r\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr, 'desc')\r\n        case 'multiplier':\r\n          return orderBy(\r\n            farms,\r\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\r\n            'desc',\r\n          )\r\n        case 'earned':\r\n          return orderBy(\r\n            farms,\r\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\r\n            'desc',\r\n          )\r\n        case 'liquidity':\r\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\r\n        default:\r\n          return farms\r\n      }\r\n    }\r\n\r\n    if (isActive) {\r\n      farmsStaked = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\r\n    }\r\n    if (isInactive) {\r\n      farmsStaked = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\r\n    }\r\n    if (isArchived) {\r\n      farmsStaked = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\r\n    }\r\n\r\n    return sortFarms(farmsStaked).slice(0, numberOfFarmsVisible)\r\n  }, [\r\n    sortOption,\r\n    activeFarms,\r\n    farmsList,\r\n    inactiveFarms,\r\n    archivedFarms,\r\n    isActive,\r\n    isInactive,\r\n    isArchived,\r\n    stakedArchivedFarms,\r\n    stakedInactiveFarms,\r\n    stakedOnly,\r\n    stakedOnlyFarms,\r\n    numberOfFarmsVisible,\r\n  ])\r\n\r\n  useEffect(() => {\r\n    const showMoreFarms = (entries) => {\r\n      const [entry] = entries\r\n      if (entry.isIntersecting) {\r\n        setNumberOfFarmsVisible((farmsCurrentlyVisible) => farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE)\r\n      }\r\n    }\r\n\r\n    if (!observerIsSet) {\r\n      const loadMoreObserver = new IntersectionObserver(showMoreFarms, {\r\n        rootMargin: '0px',\r\n        threshold: 1,\r\n      })\r\n      loadMoreObserver.observe(loadMoreRef.current)\r\n      setObserverIsSet(true)\r\n    }\r\n  }, [farmsStakedMemoized, observerIsSet])\r\n\r\n  const rowData = farmsStakedMemoized.map((farm) => {\r\n    const { token, quoteToken } = farm\r\n    const tokenAddress = token.address\r\n    const quoteTokenAddress = quoteToken.address\r\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\r\n\r\n    const row: RowProps = {\r\n      apr: {\r\n        value: farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 }),\r\n        multiplier: farm.multiplier,\r\n        lpLabel,\r\n        tokenAddress,\r\n        quoteTokenAddress,\r\n        cakePrice,\r\n        originalValue: farm.apr,\r\n      },\r\n      farm: {\r\n        label: lpLabel,\r\n        pid: farm.pid,\r\n        token: farm.token,\r\n        quoteToken: farm.quoteToken,\r\n      },\r\n      earned: {\r\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\r\n        pid: farm.pid,\r\n      },\r\n      liquidity: {\r\n        liquidity: farm.liquidity,\r\n      },\r\n      multiplier: {\r\n        multiplier: farm.multiplier,\r\n      },\r\n      details: farm,\r\n    }\r\n\r\n    return row\r\n  })\r\n\r\n\r\n  const renderActiveContent = (): JSX.Element => {\r\n    // if (viewMode === ViewMode.TABLE && rowData.length) {\r\n    //   const columnSchema = DesktopColumnSchema\r\n\r\n    //   const columns = columnSchema.map((column) => ({\r\n    //     id: column.id,\r\n    //     name: column.name,\r\n    //     label: column.label,\r\n    //     sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\r\n    //       switch (column.name) {\r\n    //         case 'farm':\r\n    //           return b.id - a.id\r\n    //         case 'apr':\r\n    //           if (a.original.apr.value && b.original.apr.value) {\r\n    //             return Number(a.original.apr.value) - Number(b.original.apr.value)\r\n    //           }\r\n\r\n    //           return 0\r\n    //         case 'earned':\r\n    //           return a.original.earned.earnings - b.original.earned.earnings\r\n    //         default:\r\n    //           return 1\r\n    //       }\r\n    //     },\r\n    //     sortable: column.sortable,\r\n    //   }))\r\n\r\n    //   return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\r\n    // }\r\n\r\n    return (\r\n      <div>\r\n        <div style={{ marginTop: '-5px', marginLeft: '17px', marginBottom: '17px' }}>\r\n          <Text fontSize=\"24px\" bold>\r\n            {' '}\r\n            Active Liquidity Pools{' '} \r\n          </Text>\r\n          <Text fontSize=\"16px\">Stake LP tokens to earn</Text>\r\n        </div>\r\n\r\n        <FlexLayout>\r\n          {farmsList(activeFarms).map((farm) => (\r\n            <FarmCard key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed={false} />\r\n          ))}\r\n        </FlexLayout>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderInactiveContent = (): JSX.Element => {\r\n\r\n    return (\r\n      <div>\r\n          <div style={{margin: '20px'}}>\r\n            <Text fontSize=\"24px\" bold> Inactive Liquidity Pools </Text>\r\n          </div>\r\n\r\n        <FlexLayout>\r\n            {farmsList(inactiveFarms).map((farm) => (\r\n              <FarmCard key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed/>\r\n            ))}\r\n        </FlexLayout>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n     <PageHeader>\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" flexDirection={['column', null, 'row']} style={isMobile? { flexDirection: 'column-reverse'} : {minHeight: '20vh'}} padding=\"24px\"> \r\n          <Flex flexDirection=\"column\" mr={['8px', 0]}>\r\n            <Text color=\"text\" fontSize=\"60px\" bold marginBottom=\"10px\">\r\n              <span style={{borderBottom: `2px solid ${theme.colors.primary}`}}>Farms</span>\r\n            </Text>\r\n            <Text color=\"text\" style={isMobile? { fontSize: \"17px\" } : { fontSize: \"27px\" }}>\r\n            Earn SRK, SFUEL and other tokens by staking Spark-LP tokens!\r\n            </Text>\r\n          </Flex>\r\n          <Flex style={isMobile? {fontSize: '150px', margin: 'auto', marginTop: '20px', marginBottom: '20px' } : {fontSize: '240px', marginRight: '-105px'}}>\r\n              <SvgIcon component={theme.isDark? FarmsDarkLogo : FarmsLightLogo} viewBox=\"0  0 384 512\" style={isMobile? {width: '200px'} : {width: '500px'}} fontSize=\"inherit\" />\r\n          </Flex>\r\n        </Flex>\r\n      </PageHeader>\r\n      <Page>\r\n        {renderActiveContent()}\r\n        <StyledHr />\r\n        {renderInactiveContent()}\r\n        <div ref={loadMoreRef} />\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n"],"sourceRoot":""}