{"version":3,"sources":["views/Farms/components/types.ts","views/Farms/components/assets/farm-dark.svg","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmCard/CardHeading.tsx","views/Farms/components/Styled.tsx","views/Farms/components/Modals/Styled.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","views/Farms/components/assets/farm-light.svg","views/Farms/Farms.tsx"],"names":["ViewMode","_style","_g","_g2","_g3","_g4","AccentGradient","styled","Flex","Tag","div","Button","keyframes","theme","colors","primaryBright","secondary","props","card","background","primary","isPromotedFarm","radii","cardBorder","expanded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgFarmDark","_ref","svgRef","title","titleId","xmlns","xmlnsXlink","x","y","viewBox","style","enableBackground","xmlSpace","ref","id","type","className","d","cx","cy","r","ForwardRef","SvgFarmLight","Farms","mediaQueries","sm","Text","Image","useRouteMatch","path","pathname","useLocation","useTranslation","t","useFarms","farmsLP","data","cakePrice","userDataLoaded","usePriceCakeBusd","useState","query","usePersistState","TABLE","localStorageKey","useWeb3React","account","sortOption","useContext","ThemeContext","isArchived","includes","isInactive","isActive","isMobile","useMedia","maxWidth","usePollFarmsData","stakedOnly","setStakedOnly","useEffect","activeFarms","filter","farm","pid","multiplier","isArchivedPid","inactiveFarms","archivedFarms","stakedOnlyFarms","userData","BigNumber","stakedBalance","isGreaterThan","stakedInactiveFarms","stakedArchivedFarms","farmsList","useCallback","farmsToDisplay","farmsToDisplayWithAPR","map","lpTotalInQuoteToken","quoteToken","busdPrice","totalLiquidity","times","apr","getFarmApr","poolWeight","liquidity","lowercaseQuery","latinise","toLowerCase","lpSymbol","useRef","numberOfFarmsVisible","observerIsSet","farmsStakedMemoized","useMemo","farmsStaked","farms","orderBy","Number","slice","earnings","sortFarms","token","tokenAddress","address","quoteTokenAddress","lpLabel","split","toUpperCase","replace","value","toLocaleString","maximumFractionDigits","originalValue","label","earned","getBalanceNumber","details","PageHeader","alignItems","justifyContent","flexDirection","minHeight","marginLeft","padding","mr","color","fontSize","bold","marginBottom","borderBottom","margin","marginTop","marginRight","SvgIcon","component","isDark","FarmsDarkLogo","FarmsLightLogo","width","Page"],"mappings":"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","file":"static/js/15.7d984c05.chunk.js","sourcesContent":["export type TableProps = {\r\n  data?: TableDataTypes[]\r\n  selectedFilters?: string\r\n  sortBy?: string\r\n  sortDir?: string\r\n  onSort?: (value: string) => void\r\n}\r\n\r\nexport type ColumnsDefTypes = {\r\n  id: number\r\n  label: string\r\n  name: string\r\n  sortable: boolean\r\n}\r\n\r\nexport type ScrollBarProps = {\r\n  ref: string\r\n  width: number\r\n}\r\n\r\nexport type TableDataTypes = {\r\n  POOL: string\r\n  APR: string\r\n  EARNED: string\r\n  STAKED: string\r\n  DETAILS: string\r\n  LINKS: string\r\n}\r\n\r\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'liquidity',\r\n    sortable: true,\r\n    label: 'Liquidity',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'multiplier',\r\n    sortable: true,\r\n    label: 'Multiplier',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport enum ViewMode {\r\n  'TABLE' = 'TABLE',\r\n  'CARD' = 'CARD',\r\n}\r\n","var _style, _g, _g2, _g3, _g4;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFarmDark(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 500 500\",\n    style: {\n      enableBackground: \"new 0 0 500 500\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\r\\n\\t.st0{fill:#FFFFFF;}\\r\\n\\t.st1{fill:#39BEEC;}\\r\\n\\t.st2{fill:#1B60A3;}\\r\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_3\"\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4_1_\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_2\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M266,330.6v-95.2c22.1-1.5,61.8-8.1,89.1-35.4C394.1,161,391,97.2,390.9,94.5c-0.4-7.9-6.8-14.2-14.7-14.7 c-2.7-0.2-66.5-3.2-105.4,35.7c-4.1,4.1-7.8,8.6-11,13.2c-5.7-22.9-16.4-48.5-36.4-68.5c-46.5-46.5-123-42.8-126.2-42.7 c-7.9,0.4-14.2,6.8-14.7,14.7c-0.2,3.2-3.8,79.7,42.7,126.2c34.1,34.1,84.2,41.2,109.9,42.5v129.7c5.1-0.6,10.3-0.9,15.5-0.9 C255.7,329.8,260.9,330.1,266,330.6L266,330.6z\"\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st0\",\n    cx: 252.5,\n    cy: 368.5,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 363.4,\n    cy: 368.5,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st2\",\n    cx: 137.3,\n    cy: 368.5,\n    r: 109.4\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFarmDark);\nexport default __webpack_public_path__ + \"static/media/farm-dark.4c14ca22.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useContext } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes, ThemeContext } from 'styled-components'\r\nimport { Flex, Text, Skeleton } from '@pancakeswap/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { getBscScanAddressUrl } from 'utils/bscscan'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { BASE_ADD_LIQUIDITY_URL, BASE_EXCHANGE_URL } from 'config'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apr?: number\r\n  liquidity?: BigNumber\r\n}\r\n\r\nconst AccentGradient = keyframes`  \r\n  0% {\r\n    background-position: 50% 0%;\r\n  }\r\n  50% {\r\n    background-position: 50% 100%;\r\n  }\r\n  100% {\r\n    background-position: 50% 0%;\r\n  }\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  // background: ${({ theme }) => `linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary})`};\r\n  background-size: 400% 400%;\r\n  animation: ${AccentGradient} 2s linear infinite;\r\n  border-radius: 32px;\r\n  position: absolute;\r\n  top: -1px;\r\n  right: -1px;\r\n  bottom: -3px;\r\n  left: -1px;\r\n  z-index: -1;\r\n`\r\n\r\nconst FCard = styled.div<{ isPromotedFarm: boolean }>`\r\n  align-self: baseline;\r\n  background: ${(props) => props.theme.card.background};\r\n  border: 5px solid ${(props) => props.theme.colors.primary};\r\n  // border-radius: ${({ theme, isPromotedFarm }) => (isPromotedFarm ? '31px' : theme.radii.card)};\r\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 24px;\r\n  position: relative;\r\n  text-align: center;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.cardBorder};\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  overflow: hidden;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  cakePrice?: BigNumber\r\n  account?: string\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, account }) => {\r\n  const { t } = useTranslation()\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n  const totalValueFormatted =\r\n    farm.liquidity && farm.liquidity.gt(0)\r\n      ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n      : ''\r\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\r\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\r\n  const earnLabel = farm.dual ? farm.dual.earnLabel : 'CAKE'\r\n  const farmAPR = farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAddress: farm.quoteToken.address,\r\n    tokenAddress: farm.token.address,\r\n  })\r\n\r\n  // const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}`\r\n  const AddTokenUrl = `${BASE_EXCHANGE_URL}/#/swap/${farm.token.address[56]}`\r\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const isPromotedFarm = farm.token.symbol === 'CAKE'\r\n  const theme = useContext(ThemeContext)\r\n  return (\r\n    <FCard isPromotedFarm={isPromotedFarm}>\r\n      {isPromotedFarm && <StyledCardAccent />}\r\n      <CardHeading\r\n        lpLabel={lpLabel}\r\n        multiplier={farm.multiplier}\r\n        isCommunityFarm={farm.isCommunity}\r\n        farmImage={farmImage}\r\n        farmSymbol={farm.lpSymbol}\r\n        tokenSymbol={farm.token.symbol}\r\n        rewardToken={farm.quoteToken.symbol}\r\n        token={farm.token}\r\n        quoteToken={farm.quoteToken}\r\n      />\r\n      <hr style={{width: '100%', border: 'none', backgroundColor: theme.colors.primary, height: '2px'}}/>\r\n      {/* {!removed && (\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Text>{t('APR')}:</Text>\r\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\r\n            {farm.apr ? (\r\n              <>\r\n                <ApyButton lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} cakePrice={cakePrice} apr={farm.apr} />\r\n                {farmAPR}%\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Flex>\r\n      )} */}\r\n\r\n\r\n      \r\n      <Flex justifyContent=\"space-between\" style={{textAlign: 'left'}}>\r\n        <Text>{t('Total Deposit')}</Text>\r\n        <Text color=\"textSubtle\">{totalValueFormatted}</Text>\r\n      </Flex>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{t('Pool Rate')}</Text>\r\n        <Text color=\"textSubtle\">{earnLabel}</Text>\r\n      </Flex>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{t('APR')}</Text>\r\n        <Text color=\"textSubtle\">0%</Text>\r\n      </Flex>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{t('Your Rate')}</Text>\r\n        <Text color=\"textSubtle\">{farm.userData.earnings}</Text>\r\n      </Flex>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{t('Duration')}</Text>\r\n        <Text color=\"textSubtle\">{earnLabel}</Text>\r\n      </Flex>\r\n      <CardActionsContainer farm={farm} account={account} addLiquidityUrl={addLiquidityUrl} addTokenUrl={AddTokenUrl} />\r\n      {/* <Divider /> */}\r\n      {/* <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          removed={removed}\r\n          bscScanAddress={getBscScanAddressUrl(farm.lpAddresses[process.env.REACT_APP_CHAIN_ID])}\r\n          infoAddress={`https://pancakeswap.info/pool/${lpAddress}`}\r\n          totalValueFormatted={totalValueFormatted}\r\n          lpLabel={lpLabel}\r\n          addLiquidityUrl={addLiquidityUrl}\r\n        />\r\n      </ExpandingWrapper> */}\r\n       <Flex justifyContent=\"center\">\r\n         {Object.prototype.hasOwnProperty.call(farm.lpAddresses, '56') && (<Text color=\"textSubtle\" fontSize=\"14px\">{t('This will only work on Binance Smart Chain')}</Text>)}\r\n         {Object.prototype.hasOwnProperty.call(farm.lpAddresses, '1') && (<Text color=\"textSubtle\" fontSize=\"14px\">{t('This will only work on Ethereum Blockchain')}</Text>)}\r\n      </Flex>\r\n    </FCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tag, Flex, Heading, Image } from '@sparkpointio/sparkswap-uikit'\r\nimport { CommunityTag, CoreTag } from 'components/Tags'\r\nimport { Token } from 'config/constants/types'\r\nimport TokenPairImage from 'components/TokenPairImage'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  isCommunityFarm?: boolean\r\n  farmImage?: string\r\n  farmSymbol?: string\r\n  tokenSymbol?: string\r\n  rewardToken?:string\r\n  token: Token\r\n  quoteToken: Token\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 4px;\r\n  }\r\n`\r\n\r\nconst MultiplierTag = styled(Tag)`\r\n  margin-left: 4px;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\r\n  lpLabel,\r\n  multiplier,\r\n  isCommunityFarm,\r\n  farmImage,\r\n  tokenSymbol,\r\n  farmSymbol,\r\n  rewardToken,\r\n  token,\r\n  quoteToken\r\n}) => {\r\n\r\n  return (\r\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\r\n        <Heading  mb=\"4px\" style={{textAlign: 'left'}}>Stake {lpLabel.split(' ')[0]} <br /> {farmSymbol} <br /> to Earn {rewardToken}</Heading>\r\n      </Flex>\r\n      <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={64} height={64} />\r\n      {/* <Image src={`/images/farms/${farmImage}.svg`} alt={tokenSymbol} width={64} height={64} /> */}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import React from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\n\r\nconst Container = styled.div`\r\n    min-width: 720px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: auto;\r\n`\r\n\r\nconst DetailsCont = styled.div`\r\n    width: 30%;\r\n    height: auto;\r\n    overflow: visible;\r\n`\r\n\r\nconst ActionDiv = styled.div`\r\n    margin: 15px 0px;\r\n    padding: 10px;\r\n`\r\nconst ModalFooter = styled.div`\r\n    min-width: 720px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\n\r\nexport { DetailsCont, ActionDiv, ModalFooter }\r\nexport default Container;\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Button } from '@sparkpointio/sparkswap-uikit' \r\n\r\nconst Container = styled.div`\r\n    margin-top: -30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-width: 500px;\r\n`\r\nconst StyledFlex = styled(Flex)`\r\n    padding: 10px 0px;\r\n`\r\nconst CancelButton = styled(Button)`\r\n    flex: 1;\r\n    margin-right: 10px;\r\n`\r\nconst DepositButton = styled(Button)`\r\n    flex: 1;\r\n    margin-left: 10px;\r\n`\r\n\r\nexport {StyledFlex, CancelButton, DepositButton}\r\nexport default Container;\r\n\r\n","import React, { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@sparkpointio/sparkswap-uikit'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { useLpTokenPrice } from 'state/hooks'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { Farm } from 'state/types'\r\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  addLiquidityUrl?: string\r\n  addTokenUrl?: string\r\n  farm?: Farm\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  addLiquidityUrl,\r\n  addTokenUrl,\r\n  farm,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n  const location = useLocation()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const lpPrice = useLpTokenPrice(tokenName)\r\n\r\n  const handleStake = async (amount: string) => {\r\n    await onStake(amount)\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  const handleUnstake = async (amount: string) => {\r\n    await onUnstake(amount)\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  const displayBalance = useCallback(() => {\r\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\r\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\r\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\r\n    }\r\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\r\n  }, [stakedBalance])\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal\r\n      max={tokenBalance}\r\n      onConfirm={onStake}\r\n      tokenName={tokenName}\r\n      addLiquidityUrl={addLiquidityUrl}\r\n      addTokenUrl={addTokenUrl}\r\n      tokenReward={farm.quoteToken.symbol}\r\n      tokenRewardAddress={farm.quoteToken.address[97]}\r\n      tokenBalance={farm.userData.tokenBalance}\r\n      stakedBalance={farm.userData.stakedBalance}\r\n      tokenEarnings={farm.userData.earnings}\r\n      farm={farm}\r\n      handleUnstake={handleUnstake}\r\n      maxStake={stakedBalance}\r\n    />\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return (\r\n      <Button\r\n        onClick={onPresentDeposit}\r\n        disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\r\n        fullWidth\r\n      >\r\n        {t('Deposit')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      {/* <Heading color={stakedBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance()}</Heading> */}\r\n      {renderStakingButtons()}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Text } from '@sparkpointio/sparkswap-uikit'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { Farm } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apr?: number\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  account?: string\r\n  addLiquidityUrl?: string\r\n  addTokenUrl?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl, addTokenUrl }) => {\r\n  const { t } = useTranslation()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses } = farm\r\n  const {\r\n    allowance: allowanceAsString = 0,\r\n    tokenBalance: tokenBalanceAsString = 0,\r\n    stakedBalance: stakedBalanceAsString = 0,\r\n    earnings: earningsAsString = 0,\r\n  } = farm.userData || {}\r\n  const allowance = new BigNumber(allowanceAsString)\r\n  const tokenBalance = new BigNumber(tokenBalanceAsString)\r\n  const stakedBalance = new BigNumber(stakedBalanceAsString)\r\n  const earnings = new BigNumber(earningsAsString)\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const isApproved = account && allowance  // && allowance.isGreaterThan(0)\r\n  const dispatch = useAppDispatch()\r\n\r\n  const lpContract = useERC20(lpAddress)\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, dispatch, account, pid])\r\n  const renderDepositButton = () => {\r\n    return (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={farm.lpSymbol}\r\n        pid={pid}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n        addTokenUrl={addTokenUrl}\r\n        farm={farm}\r\n      />\r\n    ) \r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      {!account ? <UnlockButton mt=\"8px\" width=\"100%\" /> : renderDepositButton()}\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","var _style, _g, _g2, _g3, _g4;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFarmLight(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 500 500\",\n    style: {\n      enableBackground: \"new 0 0 500 500\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\r\\n\\t.st0{fill:#727071;}\\r\\n\\t.st1{fill:#39BEEC;}\\r\\n\\t.st2{fill:#1B60A3;}\\r\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_3\"\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4_1_\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_2_1_\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M266,330.6v-95.2c22.1-1.5,61.8-8.1,89.1-35.4c39-39,35.9-102.8,35.8-105.5c-0.4-7.9-6.8-14.2-14.7-14.7 c-2.7-0.2-66.5-3.2-105.4,35.7c-4.1,4.1-7.8,8.6-11,13.2c-5.7-22.9-16.4-48.5-36.4-68.5c-46.5-46.5-123-42.8-126.2-42.7 c-7.9,0.4-14.2,6.8-14.7,14.7c-0.2,3.2-3.8,79.7,42.7,126.2c34.1,34.1,84.2,41.2,109.9,42.5v129.7c5.1-0.6,10.3-0.9,15.5-0.9 C255.7,329.8,260.9,330.1,266,330.6L266,330.6z\"\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1_1_\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st0\",\n    cx: 252.5,\n    cy: 368.5,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 363.4,\n    cy: 368.5,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st2\",\n    cx: 137.3,\n    cy: 368.5,\n    r: 109.4\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFarmLight);\nexport default __webpack_public_path__ + \"static/media/farm-light.660e74aa.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useCallback, useState, useMemo, useRef, useContext } from 'react'\r\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Image, Flex, RowType, Toggle } from '@pancakeswap/uikit'\r\nimport { Text, Heading } from '@sparkpointio/sparkswap-uikit'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport useMedia from 'use-media';\r\nimport { SvgIcon } from '@material-ui/core';\r\nimport { useFarms, usePollFarmsData, usePriceCakeBusd } from 'state/hooks'\r\nimport usePersistState from 'hooks/usePersistState'\r\nimport { Farm } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { getFarmApr } from 'utils/apr'\r\nimport { orderBy } from 'lodash'\r\nimport isArchivedPid from 'utils/farmHelpers'\r\nimport { latinise } from 'utils/latinise'\r\nimport PageHeader from 'components/PageHeader'\r\nimport SearchInput from 'components/SearchInput'\r\nimport Select, { OptionProps } from 'components/Select/Select'\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport Table from './components/FarmTable/FarmTable'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\nimport { RowProps } from './components/FarmTable/Row'\r\nimport ToggleView from './components/ToggleView/ToggleView'\r\nimport { DesktopColumnSchema, ViewMode } from './components/types'\r\nimport { StyledHr } from './components/Divider'\r\nimport { ReactComponent as FarmsDarkLogo } from './components/assets/farm-dark.svg';\r\nimport { ReactComponent as FarmsLightLogo} from './components/assets/farm-light.svg';\r\n\r\nconst ControlContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  margin-bottom: 32px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst StyledImage = styled(Image)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 58px;\r\n`\r\nconst NUMBER_OF_FARMS_VISIBLE = 12\r\n\r\nconst Farms: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n  const { pathname } = useLocation()\r\n  const { t } = useTranslation()\r\n  const { data: farmsLP, userDataLoaded } = useFarms()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const [query, setQuery] = useState('')\r\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\r\n  const { account } = useWeb3React()\r\n  const [sortOption, setSortOption] = useState('hot')\r\n  const theme = useContext(ThemeContext);\r\n  const isArchived = pathname.includes('archived')\r\n  const isInactive = pathname.includes('history')\r\n  const isActive = !isInactive && !isArchived\r\n  const isMobile = useMedia({maxWidth: 500})\r\n  usePollFarmsData(isArchived)\r\n\r\n  // Users with no wallet connected should see 0 as Earned amount\r\n  // Connected users should see loading indicator until first userData has loaded\r\n  const userDataReady = !account || (!!account && userDataLoaded)\r\n\r\n  const [stakedOnly, setStakedOnly] = useState(!isActive)\r\n  useEffect(() => {\r\n    setStakedOnly(!isActive)\r\n  }, [isActive])\r\n\r\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X' && !isArchivedPid(farm.pid))\r\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X' && !isArchivedPid(farm.pid))\r\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\r\n\r\n  const stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const stakedInactiveFarms = inactiveFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const stakedArchivedFarms = archivedFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\r\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        if (!farm.lpTotalInQuoteToken || !farm.quoteToken.busdPrice) {\r\n          return farm\r\n        }\r\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\r\n        const apr = isActive ? getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity) : 0\r\n\r\n        return { ...farm, apr, liquidity: totalLiquidity }\r\n      })\r\n\r\n      if (query) {\r\n        const lowercaseQuery = latinise(query.toLowerCase())\r\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\r\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\r\n        })\r\n      }\r\n      return farmsToDisplayWithAPR\r\n    },\r\n    [cakePrice, query, isActive],\r\n  )\r\n\r\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setQuery(event.target.value)\r\n  }\r\n\r\n  const loadMoreRef = useRef<HTMLDivElement>(null)\r\n\r\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n\r\n  const farmsStakedMemoized = useMemo(() => {\r\n    let farmsStaked = []\r\n\r\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\r\n      switch (sortOption) {\r\n        case 'apr':\r\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr, 'desc')\r\n        case 'multiplier':\r\n          return orderBy(\r\n            farms,\r\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\r\n            'desc',\r\n          )\r\n        case 'earned':\r\n          return orderBy(\r\n            farms,\r\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\r\n            'desc',\r\n          )\r\n        case 'liquidity':\r\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\r\n        default:\r\n          return farms\r\n      }\r\n    }\r\n\r\n    if (isActive) {\r\n      farmsStaked = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\r\n    }\r\n    if (isInactive) {\r\n      farmsStaked = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\r\n    }\r\n    if (isArchived) {\r\n      farmsStaked = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\r\n    }\r\n\r\n    return sortFarms(farmsStaked).slice(0, numberOfFarmsVisible)\r\n  }, [\r\n    sortOption,\r\n    activeFarms,\r\n    farmsList,\r\n    inactiveFarms,\r\n    archivedFarms,\r\n    isActive,\r\n    isInactive,\r\n    isArchived,\r\n    stakedArchivedFarms,\r\n    stakedInactiveFarms,\r\n    stakedOnly,\r\n    stakedOnlyFarms,\r\n    numberOfFarmsVisible,\r\n  ])\r\n\r\n  useEffect(() => {\r\n    const showMoreFarms = (entries) => {\r\n      const [entry] = entries\r\n      if (entry.isIntersecting) {\r\n        setNumberOfFarmsVisible((farmsCurrentlyVisible) => farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE)\r\n      }\r\n    }\r\n    // Uncomment this if !comingsoon\r\n    // if (!observerIsSet) {\r\n    //   const loadMoreObserver = new IntersectionObserver(showMoreFarms, {\r\n    //     rootMargin: '0px',\r\n    //     threshold: 1,\r\n    //   })\r\n    //   loadMoreObserver.observe(loadMoreRef.current)\r\n    //   setObserverIsSet(true)\r\n    // }\r\n  }, [farmsStakedMemoized, observerIsSet])\r\n\r\n  const rowData = farmsStakedMemoized.map((farm) => {\r\n    const { token, quoteToken } = farm\r\n    const tokenAddress = token.address\r\n    const quoteTokenAddress = quoteToken.address\r\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\r\n\r\n    const row: RowProps = {\r\n      apr: {\r\n        value: farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 }),\r\n        multiplier: farm.multiplier,\r\n        lpLabel,\r\n        tokenAddress,\r\n        quoteTokenAddress,\r\n        cakePrice,\r\n        originalValue: farm.apr,\r\n      },\r\n      farm: {\r\n        label: lpLabel,\r\n        pid: farm.pid,\r\n        token: farm.token,\r\n        quoteToken: farm.quoteToken,\r\n      },\r\n      earned: {\r\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\r\n        pid: farm.pid,\r\n      },\r\n      liquidity: {\r\n        liquidity: farm.liquidity,\r\n      },\r\n      multiplier: {\r\n        multiplier: farm.multiplier,\r\n      },\r\n      details: farm,\r\n    }\r\n\r\n    return row\r\n  })\r\n\r\n\r\n  const renderActiveContent = (): JSX.Element => {\r\n    // if (viewMode === ViewMode.TABLE && rowData.length) {\r\n    //   const columnSchema = DesktopColumnSchema\r\n\r\n    //   const columns = columnSchema.map((column) => ({\r\n    //     id: column.id,\r\n    //     name: column.name,\r\n    //     label: column.label,\r\n    //     sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\r\n    //       switch (column.name) {\r\n    //         case 'farm':\r\n    //           return b.id - a.id\r\n    //         case 'apr':\r\n    //           if (a.original.apr.value && b.original.apr.value) {\r\n    //             return Number(a.original.apr.value) - Number(b.original.apr.value)\r\n    //           }\r\n\r\n    //           return 0\r\n    //         case 'earned':\r\n    //           return a.original.earned.earnings - b.original.earned.earnings\r\n    //         default:\r\n    //           return 1\r\n    //       }\r\n    //     },\r\n    //     sortable: column.sortable,\r\n    //   }))\r\n\r\n    //   return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\r\n    // }\r\n\r\n    return (\r\n      <div>\r\n        <div style={{ marginTop: '-5px', marginLeft: '8px', marginBottom: '17px' }}>\r\n          <Text fontSize=\"24px\" bold>\r\n            {' '}\r\n            Active Liquidity Pools{' '} \r\n          </Text>\r\n          <Text fontSize=\"16px\">Stake LP tokens to earn</Text>\r\n        </div>\r\n\r\n        <FlexLayout>\r\n          {farmsList(activeFarms).map((farm) => (\r\n            <FarmCard key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed={false} />\r\n          ))}\r\n        </FlexLayout>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderInactiveContent = (): JSX.Element => {\r\n\r\n    return (\r\n      <div>\r\n          <div style={{margin: '20px'}}>\r\n            <Text fontSize=\"24px\" bold> Inactive Liquidity Pools </Text>\r\n          </div>\r\n\r\n        <FlexLayout>\r\n            {farmsList(inactiveFarms).map((farm) => (\r\n              <FarmCard key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed/>\r\n            ))}\r\n        </FlexLayout>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n     <PageHeader background={theme.card.background}>\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" flexDirection={['column', null, 'row']} style={isMobile? { flexDirection: 'column-reverse'} : {minHeight: '20vh', marginLeft: '-16px'}} padding=\"24px\"> \r\n          <Flex flexDirection=\"column\" mr={['8px', 0]}>\r\n            <Text color=\"text\" fontSize=\"60px\" bold marginBottom=\"10px\">\r\n              <span style={{borderBottom: `2px solid ${theme.colors.primary}`}}>Farms (Coming Soon) </span>\r\n            </Text>\r\n            <Text color=\"text\" style={isMobile? { fontSize: \"17px\" } : { fontSize: \"27px\" }}>\r\n            Earn SRK, SFUEL and other tokens by staking Spark-LP tokens!\r\n            </Text>\r\n          </Flex>\r\n          <Flex style={isMobile? {fontSize: '150px', margin: 'auto', marginTop: '20px', marginBottom: '20px' } : {fontSize: '240px', marginRight: '-118px'}}>\r\n              <SvgIcon component={theme.isDark? FarmsDarkLogo : FarmsLightLogo} viewBox=\"0  0 384 512\" style={isMobile? {width: '200px'} : {width: '500px'}} fontSize=\"inherit\" />\r\n          </Flex>\r\n        </Flex>\r\n      </PageHeader>\r\n      <Page>\r\n        {/* {renderActiveContent()}\r\n        <StyledHr />\r\n        {renderInactiveContent()}\r\n        <div ref={loadMoreRef} /> */}\r\n        \r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n"],"sourceRoot":""}